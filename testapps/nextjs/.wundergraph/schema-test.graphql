type Query {
	GetAccount(expand: [String]): account
	GetAccounts(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): AccountList
	GetAccountsAccount(account: String!, expand: [String]): account
	GetAccountsAccountBankAccountsId(account: String!, expand: [String], id: String!): external_account
	GetAccountsAccountCapabilities(account: String!, expand: [String]): ListAccountCapability
	GetAccountsAccountCapabilitiesCapability(account: String!, capability: String!, expand: [String]): capability
	GetAccountsAccountExternalAccounts(
		account: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): ExternalAccountList
	GetAccountsAccountExternalAccountsId(account: String!, expand: [String], id: String!): external_account
	GetAccountsAccountPeople(
		account: String!
		ending_before: String
		expand: [String]
		limit: Int
		relationship: all_people_relationship_specsInput
		starting_after: String
	): PersonList
	GetAccountsAccountPeoplePerson(account: String!, expand: [String], person: String!): person
	GetAccountsAccountPersons(
		account: String!
		ending_before: String
		expand: [String]
		limit: Int
		relationship: all_people_relationship_specsInput
		starting_after: String
	): PersonList
	GetAccountsAccountPersonsPerson(account: String!, expand: [String], person: String!): person
	GetApplePayDomains(
		domain_name: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): ApplePayDomainList
	GetApplePayDomainsDomain(domain: String!, expand: [String]): apple_pay_domain
	GetApplicationFees(
		charge: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): PlatformEarningList
	GetApplicationFeesFeeRefundsId(expand: [String], fee: String!, id: String!): fee_refund
	GetApplicationFeesId(expand: [String], id: String!): application_fee
	GetApplicationFeesIdRefunds(
		ending_before: String
		expand: [String]
		id: String!
		limit: Int
		starting_after: String
	): FeeRefundList
	GetAppsSecrets(
		ending_before: String
		expand: [String]
		limit: Int
		scope: scope_paramInput!
		starting_after: String
	): SecretServiceResourceSecretList
	GetBalance(expand: [String]): balance
	GetBalanceHistory(
		created: range_query_specsInput
		currency: String
		ending_before: String
		expand: [String]
		limit: Int
		payout: String
		source: String
		starting_after: String
		type: String
	): BalanceTransactionsList
	GetBalanceHistoryId(expand: [String], id: String!): balance_transaction
	GetBalanceTransactions(
		created: range_query_specsInput
		currency: String
		ending_before: String
		expand: [String]
		limit: Int
		payout: String
		source: String
		starting_after: String
		type: String
	): BalanceTransactionsList
	GetBalanceTransactionsId(expand: [String], id: String!): balance_transaction
	GetBillingPortalConfigurations(
		active: Boolean
		ending_before: String
		expand: [String]
		is_default: Boolean
		limit: Int
		starting_after: String
	): PortalConfigurationList
	GetCharges(
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		payment_intent: String
		starting_after: String
		transfer_group: String
	): ChargeList
	GetChargesSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetChargesCharge(charge: String!, expand: [String]): charge
	GetChargesChargeDispute(charge: String!, expand: [String]): dispute
	GetChargesChargeRefunds(
		charge: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): RefundList
	GetChargesChargeRefundsRefund(charge: String!, expand: [String], refund: String!): refund
	GetCheckoutSessions(
		customer: String
		customer_details: customer_details_params
		ending_before: String
		expand: [String]
		limit: Int
		payment_intent: String
		starting_after: String
		subscription: String
	): PaymentPagesCheckoutSessionList
	GetCheckoutSessionsSessionLineItems(
		ending_before: String
		expand: [String]
		limit: Int
		session: String!
		starting_after: String
	): PaymentPagesCheckoutSessionListLineItems
	GetCountrySpecs(ending_before: String, expand: [String], limit: Int, starting_after: String): CountrySpecList
	GetCountrySpecsCountry(country: String!, expand: [String]): country_spec
	GetCoupons(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): CouponsResourceCouponList
	GetCouponsCoupon(coupon: String!, expand: [String]): coupon
	GetCreditNotes(
		customer: String
		ending_before: String
		expand: [String]
		invoice: String
		limit: Int
		starting_after: String
	): CreditNotesList
	GetCreditNotesPreview(
		amount: Int
		credit_amount: Int
		expand: [String]
		invoice: String!
		lines: [credit_note_line_item_params!]
		memo: String
		out_of_band_amount: Int
		reason: GetCreditNotesPreview_reason
		refund: String
		refund_amount: Int
	): credit_note
	GetCreditNotesPreviewLines(
		amount: Int
		credit_amount: Int
		ending_before: String
		expand: [String]
		invoice: String!
		limit: Int
		lines: [credit_note_line_item_params!]
		memo: String
		out_of_band_amount: Int
		reason: GetCreditNotesPreviewLines_reason
		refund: String
		refund_amount: Int
		starting_after: String
	): CreditNoteLinesList
	GetCreditNotesCreditNoteLines(
		credit_note: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): CreditNoteLinesList
	GetCreditNotesId(expand: [String], id: String!): credit_note
	GetCustomers(
		created: range_query_specsInput
		email: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		test_clock: String
	): CustomerResourceCustomerList
	GetCustomersSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetCustomersCustomer(customer: String!, expand: [String]): Customer
	GetCustomersCustomerBalanceTransactions(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): CustomerBalanceTransactionList
	GetCustomersCustomerBalanceTransactionsTransaction(
		customer: String!
		expand: [String]
		transaction: String!
	): customer_balance_transaction
	GetCustomersCustomerBankAccounts(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): BankAccountList
	GetCustomersCustomerBankAccountsId(customer: String!, expand: [String], id: String!): bank_account
	GetCustomersCustomerCards(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): CardList
	GetCustomersCustomerCardsId(customer: String!, expand: [String], id: String!): card
	GetCustomersCustomerCashBalance(customer: String!, expand: [String]): cash_balance
	GetCustomersCustomerCashBalanceTransactions(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): CustomerCashBalanceTransactionList
	GetCustomersCustomerCashBalanceTransactionsTransaction(
		customer: String!
		expand: [String]
		transaction: String!
	): customer_cash_balance_transaction
	GetCustomersCustomerDiscount(customer: String!, expand: [String]): discount
	GetCustomersCustomerPaymentMethods(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		type: GetCustomersCustomerPaymentMethods_type
	): CustomerPaymentMethodResourceList
	GetCustomersCustomerPaymentMethodsPaymentMethod(
		customer: String!
		expand: [String]
		payment_method: String!
	): payment_method
	GetCustomersCustomerSources(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		object: String
		starting_after: String
	): ApmsSourcesSourceList
	GetCustomersCustomerSourcesId(customer: String!, expand: [String], id: String!): payment_source
	GetCustomersCustomerSubscriptions(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): SubscriptionList
	GetCustomersCustomerSubscriptionsSubscriptionExposedId(
		customer: String!
		expand: [String]
		subscription_exposed_id: String!
	): subscription
	GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount(
		customer: String!
		expand: [String]
		subscription_exposed_id: String!
	): discount
	GetCustomersCustomerTaxIds(
		customer: String!
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): TaxIDsList
	GetCustomersCustomerTaxIdsId(customer: String!, expand: [String], id: String!): tax_id
	GetDisputes(
		charge: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		payment_intent: String
		starting_after: String
	): DisputeList
	GetDisputesDispute(dispute: String!, expand: [String]): dispute
	GetEvents(
		created: range_query_specsInput
		delivery_success: Boolean
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		type: String
		types: [String]
	): NotificationEventList
	GetEventsId(expand: [String], id: String!): event
	GetExchangeRates(ending_before: String, expand: [String], limit: Int, starting_after: String): ExchangeRateList
	GetExchangeRatesRateId(expand: [String], rate_id: String!): exchange_rate
	GetFileLinks(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		expired: Boolean
		file: String
		limit: Int
		starting_after: String
	): FileFileLinkList
	GetFileLinksLink(expand: [String], link: String!): file_link
	GetFiles(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		purpose: GetFiles_purpose
		starting_after: String
	): FileFileList
	GetFilesFile(expand: [String], file: String!): file
	GetFinancialConnectionsAccounts(
		account_holder: accountholder_params
		ending_before: String
		expand: [String]
		limit: Int
		session: String
		starting_after: String
	): BankConnectionsResourceLinkedAccountList
	GetFinancialConnectionsAccountsAccountOwners(
		account: String!
		ending_before: String
		expand: [String]
		limit: Int
		ownership: String!
		starting_after: String
	): BankConnectionsResourceOwnerList
	GetIdentityVerificationReports(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		type: GetIdentityVerificationReports_type
		verification_session: String
	): GelatoVerificationReportList
	GetIdentityVerificationSessions(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetIdentityVerificationSessions_status
	): GelatoVerificationSessionList
	GetInvoiceitems(
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		invoice: String
		limit: Int
		pending: Boolean
		starting_after: String
	): InvoicesItemsList
	GetInvoiceitemsInvoiceitem(expand: [String], invoiceitem: String!): invoiceitem
	GetInvoices(
		collection_method: GetInvoices_collection_method
		created: range_query_specsInput
		customer: String
		due_date: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetInvoices_status
		subscription: String
	): InvoicesList
	GetInvoicesSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetInvoicesUpcoming(
		automatic_tax: automatic_tax_paramInput
		coupon: String
		currency: String
		customer: String
		customer_details: customer_details_paramInput
		discounts: [discounts_data_paramInput]
		expand: [String]
		invoice_items: [invoice_item_preview_params]
		schedule: String
		subscription: String
		subscription_billing_cycle_anchor: GetInvoicesUpcoming_subscription_billing_cycle_anchor
		subscription_cancel_at: Int
		subscription_cancel_at_period_end: Boolean
		subscription_cancel_now: Boolean
		subscription_default_tax_rates: [String]
		subscription_items: [subscription_item_update_params]
		subscription_proration_behavior: GetInvoicesUpcoming_subscription_proration_behavior
		subscription_proration_date: Int
		subscription_start_date: Int
		subscription_trial_end: GetInvoicesUpcoming_subscription_trial_end
		subscription_trial_from_plan: Boolean
	): invoice
	GetInvoicesUpcomingLines(
		automatic_tax: automatic_tax_paramInput
		coupon: String
		currency: String
		customer: String
		customer_details: customer_details_paramInput
		discounts: [discounts_data_paramInput]
		ending_before: String
		expand: [String]
		invoice_items: [invoice_item_preview_params]
		limit: Int
		schedule: String
		starting_after: String
		subscription: String
		subscription_billing_cycle_anchor: GetInvoicesUpcomingLines_subscription_billing_cycle_anchor
		subscription_cancel_at: Int
		subscription_cancel_at_period_end: Boolean
		subscription_cancel_now: Boolean
		subscription_default_tax_rates: [String]
		subscription_items: [subscription_item_update_params]
		subscription_proration_behavior: GetInvoicesUpcomingLines_subscription_proration_behavior
		subscription_proration_date: Int
		subscription_start_date: Int
		subscription_trial_end: GetInvoicesUpcomingLines_subscription_trial_end
		subscription_trial_from_plan: Boolean
	): InvoiceLinesList
	GetInvoicesInvoice(expand: [String], invoice: String!): invoice
	GetInvoicesInvoiceLines(
		ending_before: String
		expand: [String]
		invoice: String!
		limit: Int
		starting_after: String
	): InvoiceLinesList
	GetIssuingAuthorizations(
		card: String
		cardholder: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetIssuingAuthorizations_status
	): IssuingAuthorizationList
	GetIssuingCardholders(
		created: range_query_specsInput
		email: String
		ending_before: String
		expand: [String]
		limit: Int
		phone_number: String
		starting_after: String
		status: GetIssuingCardholders_status
		type: GetIssuingCardholders_type
	): IssuingCardholderList
	GetIssuingCards(
		cardholder: String
		created: range_query_specsInput
		ending_before: String
		exp_month: Int
		exp_year: Int
		expand: [String]
		last4: String
		limit: Int
		starting_after: String
		status: GetIssuingCards_status
		type: GetIssuingCards_type
	): IssuingCardList
	GetIssuingDisputes(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetIssuingDisputes_status
		transaction: String
	): IssuingDisputeList
	GetIssuingSettlements(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): IssuingSettlementList
	GetIssuingTransactions(
		card: String
		cardholder: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		type: GetIssuingTransactions_type
	): IssuingTransactionList
	GetLinkedAccounts(
		account_holder: accountholder_params
		ending_before: String
		expand: [String]
		limit: Int
		session: String
		starting_after: String
	): BankConnectionsResourceLinkedAccountList
	GetLinkedAccountsAccountOwners(
		account: String!
		ending_before: String
		expand: [String]
		limit: Int
		ownership: String!
		starting_after: String
	): BankConnectionsResourceOwnerList
	GetMandatesMandate(expand: [String], mandate: String!): mandate
	GetPaymentIntents(
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): PaymentFlowsPaymentIntentList
	GetPaymentIntentsSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetPaymentIntentsIntent(client_secret: String, expand: [String], intent: String!): payment_intent
	GetPaymentLinks(
		active: Boolean
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): PaymentLinksResourcePaymentLinkList
	GetPaymentLinksPaymentLink(expand: [String], payment_link: String!): payment_link
	GetPaymentLinksPaymentLinkLineItems(
		ending_before: String
		expand: [String]
		limit: Int
		payment_link: String!
		starting_after: String
	): PaymentLinksResourceListLineItems
	GetPaymentMethods(
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		type: GetPaymentMethods_type
	): PaymentFlowsPaymentMethodList
	GetPaymentMethodsPaymentMethod(expand: [String], payment_method: String!): payment_method
	GetPayouts(
		arrival_date: range_query_specsInput
		created: range_query_specsInput
		destination: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: String
	): PayoutList
	GetPayoutsPayout(expand: [String], payout: String!): payout
	GetPlans(
		active: Boolean
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		product: String
		starting_after: String
	): PlanList
	GetPlansPlan(expand: [String], plan: String!): plan
	GetPrices(
		active: Boolean
		created: range_query_specsInput
		currency: String
		ending_before: String
		expand: [String]
		limit: Int
		lookup_keys: [String]
		product: String
		recurring: all_prices_recurring_params
		starting_after: String
		type: GetPrices_type
	): PriceList
	GetPricesSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetPricesPrice(expand: [String], price: String!): price
	GetProducts(
		active: Boolean
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		ids: [String]
		limit: Int
		shippable: Boolean
		starting_after: String
		url: String
	): ProductList
	GetProductsSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetProductsId(expand: [String], id: String!): product
	GetPromotionCodes(
		active: Boolean
		code: String
		coupon: String
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): PromotionCodesResourcePromotionCodeList
	GetPromotionCodesPromotionCode(expand: [String], promotion_code: String!): promotion_code
	GetQuotes(
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetQuotes_status
		test_clock: String
	): QuotesResourceQuoteList
	GetQuotesQuote(expand: [String], quote: String!): quote
	GetQuotesQuoteComputedUpfrontLineItems(
		ending_before: String
		expand: [String]
		limit: Int
		quote: String!
		starting_after: String
	): QuotesResourceListLineItems
	GetQuotesQuoteLineItems(
		ending_before: String
		expand: [String]
		limit: Int
		quote: String!
		starting_after: String
	): QuotesResourceListLineItems
	GetQuotesQuotePdf(expand: [String], quote: String!): JSON
	GetRadarEarlyFraudWarnings(
		charge: String
		ending_before: String
		expand: [String]
		limit: Int
		payment_intent: String
		starting_after: String
	): RadarEarlyFraudWarningList
	GetRadarValueListItems(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		value: String
		value_list: String!
	): RadarListListItemList
	GetRadarValueLists(
		alias: String
		contains: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): RadarListListList
	GetRefunds(
		charge: String
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		payment_intent: String
		starting_after: String
	): ApiMethodRefundList
	GetRefundsRefund(expand: [String], refund: String!): refund
	GetReportingReportRuns(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): FinancialReportingFinanceReportRunList
	GetReportingReportTypes(expand: [String]): FinancialReportingFinanceReportTypeList
	GetReviews(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): RadarReviewList
	GetReviewsReview(expand: [String], review: String!): review
	GetSetupAttempts(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		setup_intent: String!
		starting_after: String
	): PaymentFlowsSetupIntentSetupAttemptList
	GetSetupIntents(
		attach_to_self: Boolean
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		payment_method: String
		starting_after: String
	): PaymentFlowsSetupIntentList
	GetSetupIntentsIntent(client_secret: String, expand: [String], intent: String!): setup_intent
	GetShippingRates(
		active: Boolean
		created: range_query_specsInput
		currency: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): ShippingResourcesShippingRateList
	GetShippingRatesShippingRateToken(expand: [String], shipping_rate_token: String!): shipping_rate
	GetSigmaScheduledQueryRuns(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): SigmaScheduledQueryRunList
	GetSigmaScheduledQueryRunsScheduledQueryRun(expand: [String], scheduled_query_run: String!): scheduled_query_run
	GetSourcesSource(client_secret: String, expand: [String], source: String!): source
	GetSourcesSourceMandateNotificationsMandateNotification(
		expand: [String]
		mandate_notification: String!
		source: String!
	): source_mandate_notification
	GetSourcesSourceSourceTransactions(
		ending_before: String
		expand: [String]
		limit: Int
		source: String!
		starting_after: String
	): ApmsSourcesSourceTransactionList
	GetSourcesSourceSourceTransactionsSourceTransaction(
		expand: [String]
		source: String!
		source_transaction: String!
	): source_transaction
	GetSubscriptionItems(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		subscription: String!
	): SubscriptionsItemsSubscriptionItemList
	GetSubscriptionItemsItem(expand: [String], item: String!): subscription_item
	GetSubscriptionItemsSubscriptionItemUsageRecordSummaries(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		subscription_item: String!
	): UsageEventsResourceUsageRecordSummaryList
	GetSubscriptionSchedules(
		canceled_at: range_query_specsInput
		completed_at: range_query_specsInput
		created: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		released_at: range_query_specsInput
		scheduled: Boolean
		starting_after: String
	): SubscriptionSchedulesResourceScheduleList
	GetSubscriptionSchedulesSchedule(expand: [String], schedule: String!): subscription_schedule
	GetSubscriptions(
		collection_method: GetSubscriptions_collection_method
		created: range_query_specsInput
		current_period_end: range_query_specsInput
		current_period_start: range_query_specsInput
		customer: String
		ending_before: String
		expand: [String]
		limit: Int
		price: String
		starting_after: String
		status: GetSubscriptions_status
		test_clock: String
	): SubscriptionsSubscriptionList
	GetSubscriptionsSearch(expand: [String], limit: Int, page: String, query: String!): SearchResult
	GetSubscriptionsSubscriptionExposedId(expand: [String], subscription_exposed_id: String!): subscription
	GetTaxCodes(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): TaxProductResourceTaxCodeList
	GetTaxCodesId(expand: [String], id: String!): tax_code
	GetTaxRates(
		active: Boolean
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		inclusive: Boolean
		limit: Int
		starting_after: String
	): TaxRatesList
	GetTaxRatesTaxRate(expand: [String], tax_rate: String!): tax_rate
	GetTerminalConfigurations(
		ending_before: String
		expand: [String]
		is_account_default: Boolean
		limit: Int
		starting_after: String
	): TerminalConfigurationConfigurationList
	GetTerminalConfigurationsConfiguration(configuration: String!, expand: [String]): TerminalConfigurationConfiguration
	GetTerminalLocations(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): TerminalLocationLocationList
	GetTerminalLocationsLocation(expand: [String], location: String!): TerminalLocationLocation
	GetTerminalReaders(
		device_type: GetTerminalReaders_device_type
		ending_before: String
		expand: [String]
		limit: Int
		location: String
		starting_after: String
		status: GetTerminalReaders_status
	): TerminalReaderRetrieveReader
	GetTerminalReadersReader(expand: [String], reader: String!): TerminalReaderReader
	GetTestHelpersTestClocks(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): BillingClocksResourceBillingClockList
	GetTokensToken(expand: [String], token: String!): token
	GetTopups(
		amount: range_query_specsInput
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		status: GetTopups_status
	): TopupList
	GetTopupsTopup(expand: [String], topup: String!): topup
	GetTransfers(
		created: range_query_specsInput
		destination: String
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
		transfer_group: String
	): TransferList
	GetTransfersIdReversals(
		ending_before: String
		expand: [String]
		id: String!
		limit: Int
		starting_after: String
	): TransferReversalList
	GetTransfersTransfer(expand: [String], transfer: String!): transfer
	GetTransfersTransferReversalsId(expand: [String], id: String!, transfer: String!): transfer_reversal
	GetTreasuryCreditReversals(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		received_credit: String
		starting_after: String
		status: GetTreasuryCreditReversals_status
	): TreasuryReceivedCreditsResourceCreditReversalList
	GetTreasuryDebitReversals(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		received_debit: String
		resolution: GetTreasuryDebitReversals_resolution
		starting_after: String
		status: GetTreasuryDebitReversals_status
	): TreasuryReceivedDebitsResourceDebitReversalList
	GetTreasuryFinancialAccounts(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): TreasuryFinancialAccountsResourceFinancialAccountList
	GetTreasuryInboundTransfers(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		starting_after: String
		status: GetTreasuryInboundTransfers_status
	): TreasuryInboundTransfersResourceInboundTransferList
	GetTreasuryOutboundPayments(
		customer: String
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		starting_after: String
		status: GetTreasuryOutboundPayments_status
	): TreasuryOutboundPaymentsResourceOutboundPaymentList
	GetTreasuryOutboundTransfers(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		starting_after: String
		status: GetTreasuryOutboundTransfers_status
	): TreasuryOutboundTransfersResourceOutboundTransferList
	GetTreasuryReceivedCredits(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		linked_flows: linked_flows_paramInput
		starting_after: String
		status: GetTreasuryReceivedCredits_status
	): TreasuryReceivedCreditsResourceReceivedCreditList
	GetTreasuryReceivedDebits(
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		starting_after: String
		status: GetTreasuryReceivedDebits_status
	): TreasuryReceivedDebitsResourceReceivedDebitList
	GetTreasuryTransactionEntries(
		created: range_query_specsInput
		effective_at: range_query_specsInput
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		order_by: GetTreasuryTransactionEntries_order_by
		starting_after: String
		transaction: String
	): TreasuryTransactionsResourceTransactionEntryList
	GetTreasuryTransactions(
		created: range_query_specsInput
		ending_before: String
		expand: [String]
		financial_account: String!
		limit: Int
		order_by: GetTreasuryTransactions_order_by
		starting_after: String
		status: GetTreasuryTransactions_status
		status_transitions: status_transition_timestamp_specsInput
	): TreasuryTransactionsResourceTransactionList
	GetWebhookEndpoints(
		ending_before: String
		expand: [String]
		limit: Int
		starting_after: String
	): NotificationWebhookEndpointList
	GetWebhookEndpointsWebhookEndpoint(expand: [String], webhook_endpoint: String!): webhook_endpoint
}

type Mutation {
	PostAccountLinks(postV1AccountLinksInput: PostV1AccountLinksInput!): account_link
	PostAccounts(postV1AccountsInput: PostV1AccountsInput): account
	PostAccountsAccount(account: String!, postV1AccountsAccountInput: PostV1AccountsAccountInput): account
	DeleteAccountsAccount(account: String!): deleted_account
	PostAccountsAccountBankAccounts(
		account: String!
		postV1AccountsAccountBankAccountsInput: PostV1AccountsAccountBankAccountsInput
	): external_account
	PostAccountsAccountBankAccountsId(
		account: String!
		id: String!
		postV1AccountsAccountBankAccountsIdInput: PostV1AccountsAccountBankAccountsIdInput
	): external_account
	DeleteAccountsAccountBankAccountsId(account: String!, id: String!): deleted_external_account
	PostAccountsAccountCapabilitiesCapability(
		account: String!
		capability: String!
		postV1AccountsAccountCapabilitiesCapabilityInput: PostV1AccountsAccountCapabilitiesCapabilityInput
	): capability
	PostAccountsAccountExternalAccounts(
		account: String!
		postV1AccountsAccountExternalAccountsInput: PostV1AccountsAccountExternalAccountsInput
	): external_account
	PostAccountsAccountExternalAccountsId(
		account: String!
		id: String!
		postV1AccountsAccountExternalAccountsIdInput: PostV1AccountsAccountExternalAccountsIdInput
	): external_account
	DeleteAccountsAccountExternalAccountsId(account: String!, id: String!): deleted_external_account
	PostAccountsAccountLoginLinks(
		account: String!
		postV1AccountsAccountLoginLinksInput: PostV1AccountsAccountLoginLinksInput
	): login_link
	PostAccountsAccountPeople(
		account: String!
		postV1AccountsAccountPeopleInput: PostV1AccountsAccountPeopleInput
	): person
	PostAccountsAccountPeoplePerson(
		account: String!
		person: String!
		postV1AccountsAccountPeoplePersonInput: PostV1AccountsAccountPeoplePersonInput
	): person
	DeleteAccountsAccountPeoplePerson(account: String!, person: String!): deleted_person
	PostAccountsAccountPersons(
		account: String!
		postV1AccountsAccountPersonsInput: PostV1AccountsAccountPersonsInput
	): person
	PostAccountsAccountPersonsPerson(
		account: String!
		person: String!
		postV1AccountsAccountPersonsPersonInput: PostV1AccountsAccountPersonsPersonInput
	): person
	DeleteAccountsAccountPersonsPerson(account: String!, person: String!): deleted_person
	PostAccountsAccountReject(
		account: String!
		postV1AccountsAccountRejectInput: PostV1AccountsAccountRejectInput!
	): account
	PostApplePayDomains(postV1ApplePayDomainsInput: PostV1ApplePayDomainsInput!): apple_pay_domain
	DeleteApplePayDomainsDomain(domain: String!): deleted_apple_pay_domain
	PostApplicationFeesFeeRefundsId(
		fee: String!
		id: String!
		postV1ApplicationFeesFeeRefundsIdInput: PostV1ApplicationFeesFeeRefundsIdInput
	): fee_refund
	PostApplicationFeesIdRefund(
		id: String!
		postV1ApplicationFeesIdRefundInput: PostV1ApplicationFeesIdRefundInput
	): application_fee
	PostApplicationFeesIdRefunds(
		id: String!
		postV1ApplicationFeesIdRefundsInput: PostV1ApplicationFeesIdRefundsInput
	): fee_refund
	PostCharges(postV1ChargesInput: PostV1ChargesInput): charge
	PostChargesCharge(charge: String!, postV1ChargesChargeInput: PostV1ChargesChargeInput): charge
	PostChargesChargeCapture(charge: String!, postV1ChargesChargeCaptureInput: PostV1ChargesChargeCaptureInput): charge
	PostChargesChargeDispute(charge: String!, postV1ChargesChargeDisputeInput: PostV1ChargesChargeDisputeInput): dispute
	PostChargesChargeDisputeClose(
		charge: String!
		postV1ChargesChargeDisputeCloseInput: PostV1ChargesChargeDisputeCloseInput
	): dispute
	PostChargesChargeRefund(charge: String!, postV1ChargesChargeRefundInput: PostV1ChargesChargeRefundInput): charge
	PostChargesChargeRefunds(charge: String!, postV1ChargesChargeRefundsInput: PostV1ChargesChargeRefundsInput): refund
	PostChargesChargeRefundsRefund(
		charge: String!
		refund: String!
		postV1ChargesChargeRefundsRefundInput: PostV1ChargesChargeRefundsRefundInput
	): refund
	PostCoupons(postV1CouponsInput: PostV1CouponsInput): coupon
	PostCouponsCoupon(coupon: String!, postV1CouponsCouponInput: PostV1CouponsCouponInput): coupon
	DeleteCouponsCoupon(coupon: String!): deleted_coupon
	PostCreditNotes(postV1CreditNotesInput: PostV1CreditNotesInput!): credit_note
	PostCreditNotesId(id: String!, postV1CreditNotesIdInput: PostV1CreditNotesIdInput): credit_note
	PostCreditNotesIdVoid(id: String!, postV1CreditNotesIdVoidInput: PostV1CreditNotesIdVoidInput): credit_note
	PostCustomers(postV1CustomersInput: PostV1CustomersInput): customer
	PostCustomersCustomer(customer: String!, postV1CustomersCustomerInput: PostV1CustomersCustomerInput): customer
	DeleteCustomersCustomer(customer: String!): deleted_customer
	PostCustomersCustomerBalanceTransactions(
		customer: String!
		postV1CustomersCustomerBalanceTransactionsInput: PostV1CustomersCustomerBalanceTransactionsInput!
	): customer_balance_transaction
	PostCustomersCustomerBalanceTransactionsTransaction(
		customer: String!
		transaction: String!
		postV1CustomersCustomerBalanceTransactionsTransactionInput: PostV1CustomersCustomerBalanceTransactionsTransactionInput
	): customer_balance_transaction
	PostCustomersCustomerBankAccounts(
		customer: String!
		postV1CustomersCustomerBankAccountsInput: PostV1CustomersCustomerBankAccountsInput
	): payment_source
	PostCustomersCustomerBankAccountsId(
		customer: String!
		id: String!
		postV1CustomersCustomerBankAccountsIdInput: PostV1CustomersCustomerBankAccountsIdInput
	): Card
	DeleteCustomersCustomerBankAccountsId(
		customer: String!
		id: String!
		deleteV1CustomersCustomerBankAccountsIdInput: DeleteV1CustomersCustomerBankAccountsIdInput
	): JSON
	PostCustomersCustomerBankAccountsIdVerify(
		customer: String!
		id: String!
		postV1CustomersCustomerBankAccountsIdVerifyInput: PostV1CustomersCustomerBankAccountsIdVerifyInput
	): bank_account
	PostCustomersCustomerCards(
		customer: String!
		postV1CustomersCustomerCardsInput: PostV1CustomersCustomerCardsInput
	): payment_source
	PostCustomersCustomerCardsId(
		customer: String!
		id: String!
		postV1CustomersCustomerCardsIdInput: PostV1CustomersCustomerCardsIdInput
	): Card
	DeleteCustomersCustomerCardsId(
		customer: String!
		id: String!
		deleteV1CustomersCustomerCardsIdInput: DeleteV1CustomersCustomerCardsIdInput
	): JSON
	PostCustomersCustomerCashBalance(
		customer: String!
		postV1CustomersCustomerCashBalanceInput: PostV1CustomersCustomerCashBalanceInput
	): cash_balance
	DeleteCustomersCustomerDiscount(customer: String!): deleted_discount
	PostCustomersCustomerFundingInstructions(
		customer: String!
		postV1CustomersCustomerFundingInstructionsInput: PostV1CustomersCustomerFundingInstructionsInput!
	): funding_instructions
	PostCustomersCustomerSources(
		customer: String!
		postV1CustomersCustomerSourcesInput: PostV1CustomersCustomerSourcesInput
	): payment_source
	PostCustomersCustomerSourcesId(
		customer: String!
		id: String!
		postV1CustomersCustomerSourcesIdInput: PostV1CustomersCustomerSourcesIdInput
	): Card
	DeleteCustomersCustomerSourcesId(
		customer: String!
		id: String!
		deleteV1CustomersCustomerSourcesIdInput: DeleteV1CustomersCustomerSourcesIdInput
	): JSON
	PostCustomersCustomerSourcesIdVerify(
		customer: String!
		id: String!
		postV1CustomersCustomerSourcesIdVerifyInput: PostV1CustomersCustomerSourcesIdVerifyInput
	): bank_account
	PostCustomersCustomerSubscriptions(
		customer: String!
		postV1CustomersCustomerSubscriptionsInput: PostV1CustomersCustomerSubscriptionsInput
	): subscription
	PostCustomersCustomerSubscriptionsSubscriptionExposedId(
		customer: String!
		subscription_exposed_id: String!
		postV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput
	): subscription
	DeleteCustomersCustomerSubscriptionsSubscriptionExposedId(
		customer: String!
		subscription_exposed_id: String!
		deleteV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput: DeleteV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput
	): subscription
	DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount(
		customer: String!
		subscription_exposed_id: String!
	): deleted_discount
	PostCustomersCustomerTaxIds(
		customer: String!
		postV1CustomersCustomerTaxIdsInput: PostV1CustomersCustomerTaxIdsInput!
	): tax_id
	DeleteCustomersCustomerTaxIdsId(customer: String!, id: String!): deleted_tax_id
	PostDisputesDispute(dispute: String!, postV1DisputesDisputeInput: PostV1DisputesDisputeInput): dispute
	PostDisputesDisputeClose(dispute: String!, postV1DisputesDisputeCloseInput: PostV1DisputesDisputeCloseInput): dispute
	PostEphemeralKeys(postV1EphemeralKeysInput: PostV1EphemeralKeysInput): ephemeral_key
	DeleteEphemeralKeysKey(key: String!, deleteV1EphemeralKeysKeyInput: DeleteV1EphemeralKeysKeyInput): ephemeral_key
	PostFileLinks(postV1FileLinksInput: PostV1FileLinksInput!): file_link
	PostFileLinksLink(link: String!, postV1FileLinksLinkInput: PostV1FileLinksLinkInput): file_link
	PostFiles: file
	PostInvoiceitems(postV1InvoiceitemsInput: PostV1InvoiceitemsInput!): invoiceitem
	PostInvoiceitemsInvoiceitem(
		invoiceitem: String!
		postV1InvoiceitemsInvoiceitemInput: PostV1InvoiceitemsInvoiceitemInput
	): invoiceitem
	DeleteInvoiceitemsInvoiceitem(invoiceitem: String!): deleted_invoiceitem
	PostInvoices(postV1InvoicesInput: PostV1InvoicesInput): invoice
	PostInvoicesInvoice(invoice: String!, postV1InvoicesInvoiceInput: PostV1InvoicesInvoiceInput): invoice
	DeleteInvoicesInvoice(invoice: String!): deleted_invoice
	PostInvoicesInvoiceFinalize(
		invoice: String!
		postV1InvoicesInvoiceFinalizeInput: PostV1InvoicesInvoiceFinalizeInput
	): invoice
	PostInvoicesInvoiceMarkUncollectible(
		invoice: String!
		postV1InvoicesInvoiceMarkUncollectibleInput: PostV1InvoicesInvoiceMarkUncollectibleInput
	): invoice
	PostInvoicesInvoicePay(invoice: String!, postV1InvoicesInvoicePayInput: PostV1InvoicesInvoicePayInput): invoice
	PostInvoicesInvoiceSend(invoice: String!, postV1InvoicesInvoiceSendInput: PostV1InvoicesInvoiceSendInput): invoice
	PostInvoicesInvoiceVoid(invoice: String!, postV1InvoicesInvoiceVoidInput: PostV1InvoicesInvoiceVoidInput): invoice
	PostPaymentIntents(postV1PaymentIntentsInput: PostV1PaymentIntentsInput!): payment_intent
	PostPaymentIntentsIntent(
		intent: String!
		postV1PaymentIntentsIntentInput: PostV1PaymentIntentsIntentInput
	): payment_intent
	PostPaymentIntentsIntentApplyCustomerBalance(
		intent: String!
		postV1PaymentIntentsIntentApplyCustomerBalanceInput: PostV1PaymentIntentsIntentApplyCustomerBalanceInput
	): payment_intent
	PostPaymentIntentsIntentCancel(
		intent: String!
		postV1PaymentIntentsIntentCancelInput: PostV1PaymentIntentsIntentCancelInput
	): payment_intent
	PostPaymentIntentsIntentCapture(
		intent: String!
		postV1PaymentIntentsIntentCaptureInput: PostV1PaymentIntentsIntentCaptureInput
	): payment_intent
	PostPaymentIntentsIntentConfirm(
		intent: String!
		postV1PaymentIntentsIntentConfirmInput: PostV1PaymentIntentsIntentConfirmInput
	): payment_intent
	PostPaymentIntentsIntentIncrementAuthorization(
		intent: String!
		postV1PaymentIntentsIntentIncrementAuthorizationInput: PostV1PaymentIntentsIntentIncrementAuthorizationInput!
	): payment_intent
	PostPaymentIntentsIntentVerifyMicrodeposits(
		intent: String!
		postV1PaymentIntentsIntentVerifyMicrodepositsInput: PostV1PaymentIntentsIntentVerifyMicrodepositsInput
	): payment_intent
	PostPaymentLinks(postV1PaymentLinksInput: PostV1PaymentLinksInput!): payment_link
	PostPaymentLinksPaymentLink(
		payment_link: String!
		postV1PaymentLinksPaymentLinkInput: PostV1PaymentLinksPaymentLinkInput
	): payment_link
	PostPaymentMethods(postV1PaymentMethodsInput: PostV1PaymentMethodsInput): payment_method
	PostPaymentMethodsPaymentMethod(
		payment_method: String!
		postV1PaymentMethodsPaymentMethodInput: PostV1PaymentMethodsPaymentMethodInput
	): payment_method
	PostPaymentMethodsPaymentMethodAttach(
		payment_method: String!
		postV1PaymentMethodsPaymentMethodAttachInput: PostV1PaymentMethodsPaymentMethodAttachInput!
	): payment_method
	PostPaymentMethodsPaymentMethodDetach(
		payment_method: String!
		postV1PaymentMethodsPaymentMethodDetachInput: PostV1PaymentMethodsPaymentMethodDetachInput
	): payment_method
	PostPayouts(postV1PayoutsInput: PostV1PayoutsInput!): payout
	PostPayoutsPayout(payout: String!, postV1PayoutsPayoutInput: PostV1PayoutsPayoutInput): payout
	PostPayoutsPayoutCancel(payout: String!, postV1PayoutsPayoutCancelInput: PostV1PayoutsPayoutCancelInput): payout
	PostPayoutsPayoutReverse(payout: String!, postV1PayoutsPayoutReverseInput: PostV1PayoutsPayoutReverseInput): payout
	PostPlans(postV1PlansInput: PostV1PlansInput!): plan
	PostPlansPlan(plan: String!, postV1PlansPlanInput: PostV1PlansPlanInput): plan
	DeletePlansPlan(plan: String!): deleted_plan
	PostPrices(postV1PricesInput: PostV1PricesInput!): price
	PostPricesPrice(price: String!, postV1PricesPriceInput: PostV1PricesPriceInput): price
	PostProducts(postV1ProductsInput: PostV1ProductsInput!): product
	PostProductsId(id: String!, postV1ProductsIdInput: PostV1ProductsIdInput): product
	DeleteProductsId(id: String!): deleted_product
	PostPromotionCodes(postV1PromotionCodesInput: PostV1PromotionCodesInput!): promotion_code
	PostPromotionCodesPromotionCode(
		promotion_code: String!
		postV1PromotionCodesPromotionCodeInput: PostV1PromotionCodesPromotionCodeInput
	): promotion_code
	PostQuotes(postV1QuotesInput: PostV1QuotesInput): quote
	PostQuotesQuote(quote: String!, postV1QuotesQuoteInput: PostV1QuotesQuoteInput): quote
	PostQuotesQuoteAccept(quote: String!, postV1QuotesQuoteAcceptInput: PostV1QuotesQuoteAcceptInput): quote
	PostQuotesQuoteCancel(quote: String!, postV1QuotesQuoteCancelInput: PostV1QuotesQuoteCancelInput): quote
	PostQuotesQuoteFinalize(quote: String!, postV1QuotesQuoteFinalizeInput: PostV1QuotesQuoteFinalizeInput): quote
	PostRefunds(postV1RefundsInput: PostV1RefundsInput): refund
	PostRefundsRefund(refund: String!, postV1RefundsRefundInput: PostV1RefundsRefundInput): refund
	PostRefundsRefundCancel(refund: String!, postV1RefundsRefundCancelInput: PostV1RefundsRefundCancelInput): refund
	PostReviewsReviewApprove(review: String!, postV1ReviewsReviewApproveInput: PostV1ReviewsReviewApproveInput): review
	PostSetupIntents(postV1SetupIntentsInput: PostV1SetupIntentsInput): setup_intent
	PostSetupIntentsIntent(intent: String!, postV1SetupIntentsIntentInput: PostV1SetupIntentsIntentInput): setup_intent
	PostSetupIntentsIntentCancel(
		intent: String!
		postV1SetupIntentsIntentCancelInput: PostV1SetupIntentsIntentCancelInput
	): setup_intent
	PostSetupIntentsIntentConfirm(
		intent: String!
		postV1SetupIntentsIntentConfirmInput: PostV1SetupIntentsIntentConfirmInput
	): setup_intent
	PostSetupIntentsIntentVerifyMicrodeposits(
		intent: String!
		postV1SetupIntentsIntentVerifyMicrodepositsInput: PostV1SetupIntentsIntentVerifyMicrodepositsInput
	): setup_intent
	PostShippingRates(postV1ShippingRatesInput: PostV1ShippingRatesInput!): shipping_rate
	PostShippingRatesShippingRateToken(
		shipping_rate_token: String!
		postV1ShippingRatesShippingRateTokenInput: PostV1ShippingRatesShippingRateTokenInput
	): shipping_rate
	PostSources(postV1SourcesInput: PostV1SourcesInput): source
	PostSourcesSource(source: String!, postV1SourcesSourceInput: PostV1SourcesSourceInput): source
	PostSourcesSourceVerify(source: String!, postV1SourcesSourceVerifyInput: PostV1SourcesSourceVerifyInput!): source
	PostSubscriptionItems(postV1SubscriptionItemsInput: PostV1SubscriptionItemsInput!): subscription_item
	PostSubscriptionItemsItem(
		item: String!
		postV1SubscriptionItemsItemInput: PostV1SubscriptionItemsItemInput
	): subscription_item
	DeleteSubscriptionItemsItem(
		item: String!
		deleteV1SubscriptionItemsItemInput: DeleteV1SubscriptionItemsItemInput
	): deleted_subscription_item
	PostSubscriptionItemsSubscriptionItemUsageRecords(
		subscription_item: String!
		postV1SubscriptionItemsSubscriptionItemUsageRecordsInput: PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput!
	): usage_record
	PostSubscriptionSchedules(postV1SubscriptionSchedulesInput: PostV1SubscriptionSchedulesInput): subscription_schedule
	PostSubscriptionSchedulesSchedule(
		schedule: String!
		postV1SubscriptionSchedulesScheduleInput: PostV1SubscriptionSchedulesScheduleInput
	): subscription_schedule
	PostSubscriptionSchedulesScheduleCancel(
		schedule: String!
		postV1SubscriptionSchedulesScheduleCancelInput: PostV1SubscriptionSchedulesScheduleCancelInput
	): subscription_schedule
	PostSubscriptionSchedulesScheduleRelease(
		schedule: String!
		postV1SubscriptionSchedulesScheduleReleaseInput: PostV1SubscriptionSchedulesScheduleReleaseInput
	): subscription_schedule
	PostSubscriptions(postV1SubscriptionsInput: PostV1SubscriptionsInput!): subscription
	PostSubscriptionsSubscriptionExposedId(
		subscription_exposed_id: String!
		postV1SubscriptionsSubscriptionExposedIdInput: PostV1SubscriptionsSubscriptionExposedIdInput
	): subscription
	DeleteSubscriptionsSubscriptionExposedId(
		subscription_exposed_id: String!
		deleteV1SubscriptionsSubscriptionExposedIdInput: DeleteV1SubscriptionsSubscriptionExposedIdInput
	): subscription
	DeleteSubscriptionsSubscriptionExposedIdDiscount(subscription_exposed_id: String!): deleted_discount
	PostTaxRates(postV1TaxRatesInput: PostV1TaxRatesInput!): tax_rate
	PostTaxRatesTaxRate(tax_rate: String!, postV1TaxRatesTaxRateInput: PostV1TaxRatesTaxRateInput): tax_rate
	PostTerminalConfigurationsConfiguration(
		configuration: String!
		postV1TerminalConfigurationsConfigurationInput: PostV1TerminalConfigurationsConfigurationInput
	): TerminalConfigurationConfiguration
	PostTerminalLocationsLocation(
		location: String!
		postV1TerminalLocationsLocationInput: PostV1TerminalLocationsLocationInput
	): TerminalLocationLocation
	PostTerminalReadersReader(
		reader: String!
		postV1TerminalReadersReaderInput: PostV1TerminalReadersReaderInput
	): TerminalReaderReader
	PostTestHelpersCustomersCustomerFundCashBalance(
		customer: String!
		postV1TestHelpersCustomersCustomerFundCashBalanceInput: PostV1TestHelpersCustomersCustomerFundCashBalanceInput!
	): customer_cash_balance_transaction
	PostTestHelpersRefundsRefundExpire(
		refund: String!
		postV1TestHelpersRefundsRefundExpireInput: PostV1TestHelpersRefundsRefundExpireInput
	): refund
	PostTokens(postV1TokensInput: PostV1TokensInput): token
	PostTopups(postV1TopupsInput: PostV1TopupsInput!): topup
	PostTopupsTopup(topup: String!, postV1TopupsTopupInput: PostV1TopupsTopupInput): topup
	PostTopupsTopupCancel(topup: String!, postV1TopupsTopupCancelInput: PostV1TopupsTopupCancelInput): topup
	PostTransfers(postV1TransfersInput: PostV1TransfersInput!): transfer
	PostTransfersIdReversals(
		id: String!
		postV1TransfersIdReversalsInput: PostV1TransfersIdReversalsInput
	): transfer_reversal
	PostTransfersTransfer(transfer: String!, postV1TransfersTransferInput: PostV1TransfersTransferInput): transfer
	PostTransfersTransferReversalsId(
		id: String!
		transfer: String!
		postV1TransfersTransferReversalsIdInput: PostV1TransfersTransferReversalsIdInput
	): transfer_reversal
	PostWebhookEndpoints(postV1WebhookEndpointsInput: PostV1WebhookEndpointsInput!): webhook_endpoint
	PostWebhookEndpointsWebhookEndpoint(
		webhook_endpoint: String!
		postV1WebhookEndpointsWebhookEndpointInput: PostV1WebhookEndpointsWebhookEndpointInput
	): webhook_endpoint
	DeleteWebhookEndpointsWebhookEndpoint(webhook_endpoint: String!): deleted_webhook_endpoint
}

type Subscription

type account {
	business_profile: AccountBusinessProfile
	business_type: account_business_type
	capabilities: account_capabilities
	charges_enabled: Boolean
	company: legal_entity_company
	controller: account_unification_account_controller
	country: String
	created: Int
	default_currency: String
	details_submitted: Boolean
	email: String
	external_accounts: ExternalAccountList
	future_requirements: account_future_requirements
	id: String!
	individual: person
	metadata: JSON
	object: account_object!
	payouts_enabled: Boolean
	requirements: account_requirements
	settings: AccountSettings
	tos_acceptance: account_tos_acceptance
	type: account_type
}

type AccountBusinessProfile {
	mcc: String
	name: String
	product_description: String
	support_address: Address
	support_email: String
	support_phone: String
	support_url: String
	url: String
}

type Address {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

enum account_business_type {
	COMPANY
	GOVERNMENT_ENTITY
	INDIVIDUAL
	NON_PROFIT
}

type account_capabilities {
	acss_debit_payments: account_capabilities_acss_debit_payments
	affirm_payments: account_capabilities_affirm_payments
	afterpay_clearpay_payments: account_capabilities_afterpay_clearpay_payments
	au_becs_debit_payments: account_capabilities_au_becs_debit_payments
	bacs_debit_payments: account_capabilities_bacs_debit_payments
	bancontact_payments: account_capabilities_bancontact_payments
	bank_transfer_payments: account_capabilities_bank_transfer_payments
	blik_payments: account_capabilities_blik_payments
	boleto_payments: account_capabilities_boleto_payments
	card_issuing: account_capabilities_card_issuing
	card_payments: account_capabilities_card_payments
	cartes_bancaires_payments: account_capabilities_cartes_bancaires_payments
	eps_payments: account_capabilities_eps_payments
	fpx_payments: account_capabilities_fpx_payments
	giropay_payments: account_capabilities_giropay_payments
	grabpay_payments: account_capabilities_grabpay_payments
	ideal_payments: account_capabilities_ideal_payments
	india_international_payments: account_capabilities_india_international_payments
	jcb_payments: account_capabilities_jcb_payments
	klarna_payments: account_capabilities_klarna_payments
	konbini_payments: account_capabilities_konbini_payments
	legacy_payments: account_capabilities_legacy_payments
	link_payments: account_capabilities_link_payments
	oxxo_payments: account_capabilities_oxxo_payments
	p24_payments: account_capabilities_p24_payments
	paynow_payments: account_capabilities_paynow_payments
	promptpay_payments: account_capabilities_promptpay_payments
	sepa_debit_payments: account_capabilities_sepa_debit_payments
	sofort_payments: account_capabilities_sofort_payments
	tax_reporting_us_1099_k: account_capabilities_tax_reporting_us_1099_k
	tax_reporting_us_1099_misc: account_capabilities_tax_reporting_us_1099_misc
	transfers: account_capabilities_transfers
	treasury: account_capabilities_treasury
	us_bank_account_ach_payments: account_capabilities_us_bank_account_ach_payments
}

enum account_capabilities_acss_debit_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_affirm_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_afterpay_clearpay_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_au_becs_debit_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_bacs_debit_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_bancontact_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_bank_transfer_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_blik_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_boleto_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_card_issuing {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_card_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_cartes_bancaires_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_eps_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_fpx_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_giropay_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_grabpay_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_ideal_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_india_international_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_jcb_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_klarna_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_konbini_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_legacy_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_link_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_oxxo_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_p24_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_paynow_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_promptpay_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_sepa_debit_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_sofort_payments {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_tax_reporting_us_1099_k {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_tax_reporting_us_1099_misc {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_transfers {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_treasury {
	ACTIVE
	INACTIVE
	PENDING
}

enum account_capabilities_us_bank_account_ach_payments {
	ACTIVE
	INACTIVE
	PENDING
}

type legal_entity_company {
	address: address
	address_kana: LegalEntityJapanAddress
	address_kanji: LegalEntityJapanAddress
	directors_provided: Boolean
	executives_provided: Boolean
	name: String
	name_kana: String
	name_kanji: String
	owners_provided: Boolean
	ownership_declaration: LegalEntityUboDeclaration
	phone: String
	structure: legal_entity_company_structure
	tax_id_provided: Boolean
	tax_id_registrar: String
	vat_id_provided: Boolean
	verification: LegalEntityCompanyVerification
}

type address {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

type LegalEntityJapanAddress {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
	town: String
}

type LegalEntityUboDeclaration {
	date: Int
	ip: String
	user_agent: String
}

enum legal_entity_company_structure {
	FREE_ZONE_ESTABLISHMENT
	FREE_ZONE_LLC
	GOVERNMENT_INSTRUMENTALITY
	GOVERNMENTAL_UNIT
	INCORPORATED_NON_PROFIT
	LIMITED_LIABILITY_PARTNERSHIP
	LLC
	MULTI_MEMBER_LLC
	PRIVATE_COMPANY
	PRIVATE_CORPORATION
	PRIVATE_PARTNERSHIP
	PUBLIC_COMPANY
	PUBLIC_CORPORATION
	PUBLIC_PARTNERSHIP
	SINGLE_MEMBER_LLC
	SOLE_ESTABLISHMENT
	SOLE_PROPRIETORSHIP
	TAX_EXEMPT_GOVERNMENT_INSTRUMENTALITY
	UNINCORPORATED_ASSOCIATION
	UNINCORPORATED_NON_PROFIT
}

type LegalEntityCompanyVerification {
	document: legal_entity_company_verification_document!
}

type legal_entity_company_verification_document {
	back: String
	details: String
	details_code: String
	front: String
}

type account_unification_account_controller {
	is_controller: Boolean
	type: account_unification_account_controller_type!
}

enum account_unification_account_controller_type {
	ACCOUNT
	APPLICATION
}

type ExternalAccountList {
	data: [BankAccount]!
	has_more: Boolean!
	object: ExternalAccountList_object!
	url: String!
}

type BankAccount {
	account: String
	account_holder_name: String
	account_holder_type: String
	account_type: String
	available_payout_methods: [BankAccount_available_payout_methods]
	bank_name: String
	country: String!
	currency: String!
	customer: String
	default_for_currency: Boolean
	fingerprint: String
	id: String!
	last4: String!
	metadata: JSON
	object: BankAccount_object!
	routing_number: String
	status: String!
}

enum BankAccount_available_payout_methods {
	INSTANT
	STANDARD
}

scalar JSON

enum BankAccount_object {
	BANK_ACCOUNT
}

enum ExternalAccountList_object {
	LIST
}

type account_future_requirements {
	alternatives: [account_requirements_alternative]
	current_deadline: Int
	currently_due: [String]
	disabled_reason: String
	errors: [account_requirements_error]
	eventually_due: [String]
	past_due: [String]
	pending_verification: [String]
}

type account_requirements_alternative {
	alternative_fields_due: [String]!
	original_fields_due: [String]!
}

type account_requirements_error {
	code: account_requirements_error_code!
	reason: String!
	requirement: String!
}

enum account_requirements_error_code {
	INVALID_ADDRESS_CITY_STATE_POSTAL_CODE
	INVALID_DOB_AGE_UNDER_18
	INVALID_REPRESENTATIVE_COUNTRY
	INVALID_STREET_ADDRESS
	INVALID_TOS_ACCEPTANCE
	INVALID_VALUE_OTHER
	VERIFICATION_DOCUMENT_ADDRESS_MISMATCH
	VERIFICATION_DOCUMENT_ADDRESS_MISSING
	VERIFICATION_DOCUMENT_CORRUPT
	VERIFICATION_DOCUMENT_COUNTRY_NOT_SUPPORTED
	VERIFICATION_DOCUMENT_DOB_MISMATCH
	VERIFICATION_DOCUMENT_DUPLICATE_TYPE
	VERIFICATION_DOCUMENT_EXPIRED
	VERIFICATION_DOCUMENT_FAILED_COPY
	VERIFICATION_DOCUMENT_FAILED_GREYSCALE
	VERIFICATION_DOCUMENT_FAILED_OTHER
	VERIFICATION_DOCUMENT_FAILED_TEST_MODE
	VERIFICATION_DOCUMENT_FRAUDULENT
	VERIFICATION_DOCUMENT_ID_NUMBER_MISMATCH
	VERIFICATION_DOCUMENT_ID_NUMBER_MISSING
	VERIFICATION_DOCUMENT_INCOMPLETE
	VERIFICATION_DOCUMENT_INVALID
	VERIFICATION_DOCUMENT_ISSUE_OR_EXPIRY_DATE_MISSING
	VERIFICATION_DOCUMENT_MANIPULATED
	VERIFICATION_DOCUMENT_MISSING_BACK
	VERIFICATION_DOCUMENT_MISSING_FRONT
	VERIFICATION_DOCUMENT_NAME_MISMATCH
	VERIFICATION_DOCUMENT_NAME_MISSING
	VERIFICATION_DOCUMENT_NATIONALITY_MISMATCH
	VERIFICATION_DOCUMENT_NOT_READABLE
	VERIFICATION_DOCUMENT_NOT_SIGNED
	VERIFICATION_DOCUMENT_NOT_UPLOADED
	VERIFICATION_DOCUMENT_PHOTO_MISMATCH
	VERIFICATION_DOCUMENT_TOO_LARGE
	VERIFICATION_DOCUMENT_TYPE_NOT_SUPPORTED
	VERIFICATION_FAILED_ADDRESS_MATCH
	VERIFICATION_FAILED_BUSINESS_IEC_NUMBER
	VERIFICATION_FAILED_DOCUMENT_MATCH
	VERIFICATION_FAILED_ID_NUMBER_MATCH
	VERIFICATION_FAILED_KEYED_IDENTITY
	VERIFICATION_FAILED_KEYED_MATCH
	VERIFICATION_FAILED_NAME_MATCH
	VERIFICATION_FAILED_OTHER
	VERIFICATION_FAILED_RESIDENTIAL_ADDRESS
	VERIFICATION_FAILED_TAX_ID_MATCH
	VERIFICATION_FAILED_TAX_ID_NOT_ISSUED
	VERIFICATION_MISSING_EXECUTIVES
	VERIFICATION_MISSING_OWNERS
	VERIFICATION_REQUIRES_ADDITIONAL_MEMORANDUM_OF_ASSOCIATIONS
}

type person {
	account: String!
	address: address
	address_kana: LegalEntityJapanAddress
	address_kanji: LegalEntityJapanAddress
	created: Int!
	dob: legal_entity_dob
	email: String
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	future_requirements: PersonFutureRequirements
	gender: String
	id: String!
	id_number_provided: Boolean
	id_number_secondary_provided: Boolean
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	object: person_object!
	phone: String
	political_exposure: person_political_exposure
	registered_address: address
	relationship: person_relationship
	requirements: PersonRequirements
	ssn_last_4_provided: Boolean
	verification: legal_entity_person_verification
}

type legal_entity_dob {
	day: Int
	month: Int
	year: Int
}

type PersonFutureRequirements {
	alternatives: [account_requirements_alternative]
	currently_due: [String]!
	errors: [account_requirements_error]!
	eventually_due: [String]!
	past_due: [String]!
	pending_verification: [String]!
}

enum person_object {
	PERSON
}

enum person_political_exposure {
	EXISTING
	NONE
}

type person_relationship {
	director: Boolean
	executive: Boolean
	owner: Boolean
	percent_ownership: Int
	representative: Boolean
	title: String
}

type PersonRequirements {
	alternatives: [account_requirements_alternative]
	currently_due: [String]!
	errors: [account_requirements_error]!
	eventually_due: [String]!
	past_due: [String]!
	pending_verification: [String]!
}

type legal_entity_person_verification {
	additional_document: LegalEntityPersonVerificationDocument
	details: String
	details_code: String
	document: legal_entity_person_verification_document
	status: String!
}

type LegalEntityPersonVerificationDocument {
	back: String
	details: String
	details_code: String
	front: String
}

type legal_entity_person_verification_document {
	back: String
	details: String
	details_code: String
	front: String
}

enum account_object {
	ACCOUNT
}

type account_requirements {
	alternatives: [account_requirements_alternative]
	current_deadline: Int
	currently_due: [String]
	disabled_reason: String
	errors: [account_requirements_error]
	eventually_due: [String]
	past_due: [String]
	pending_verification: [String]
}

type AccountSettings {
	bacs_debit_payments: account_bacs_debit_payments_settings
	branding: account_branding_settings!
	card_issuing: account_card_issuing_settings
	card_payments: account_card_payments_settings!
	dashboard: account_dashboard_settings!
	payments: account_payments_settings!
	payouts: account_payout_settings
	sepa_debit_payments: account_sepa_debit_payments_settings
	treasury: account_treasury_settings
}

type account_bacs_debit_payments_settings {
	display_name: String
}

type account_branding_settings {
	icon: String
	logo: String
	primary_color: String
	secondary_color: String
}

type account_card_issuing_settings {
	tos_acceptance: card_issuing_account_terms_of_service
}

type card_issuing_account_terms_of_service {
	date: Int
	ip: String
	user_agent: String
}

type account_card_payments_settings {
	decline_on: account_decline_charge_on
	statement_descriptor_prefix: String
	statement_descriptor_prefix_kana: String
	statement_descriptor_prefix_kanji: String
}

type account_decline_charge_on {
	avs_failure: Boolean!
	cvc_failure: Boolean!
}

type account_dashboard_settings {
	display_name: String
	timezone: String
}

type account_payments_settings {
	statement_descriptor: String
	statement_descriptor_kana: String
	statement_descriptor_kanji: String
	statement_descriptor_prefix_kana: String
	statement_descriptor_prefix_kanji: String
}

type account_payout_settings {
	debit_negative_balances: Boolean!
	schedule: transfer_schedule!
	statement_descriptor: String
}

type transfer_schedule {
	delay_days: Int!
	interval: String!
	monthly_anchor: Int
	weekly_anchor: String
}

type account_sepa_debit_payments_settings {
	creditor_id: String
}

type account_treasury_settings {
	tos_acceptance: account_terms_of_service
}

type account_terms_of_service {
	date: Int
	ip: String
	user_agent: String
}

type account_tos_acceptance {
	date: Int
	ip: String
	service_agreement: String
	user_agent: String
}

enum account_type {
	CUSTOM
	EXPRESS
	STANDARD
}

type account_link {
	created: Int!
	expires_at: Int!
	object: account_link_object!
	url: String!
}

enum account_link_object {
	ACCOUNT_LINK
}

input PostV1AccountLinksInput {
	account: String!
	collect: PostV1AccountLinksInput_collect
	expand: [String]
	refresh_url: String
	return_url: String
	type: PostV1AccountLinksInput_type!
}

enum PostV1AccountLinksInput_collect {
	CURRENTLY_DUE
	EVENTUALLY_DUE
}

enum PostV1AccountLinksInput_type {
	ACCOUNT_ONBOARDING
	ACCOUNT_UPDATE
}

type AccountList {
	data: [account]!
	has_more: Boolean!
	object: AccountList_object!
	url: String!
}

enum AccountList_object {
	LIST
}

input range_query_specsInput {
	gt: Int
	gte: Int
	lt: Int
	lte: Int
}

input PostV1AccountsInput {
	account_token: String
	bank_account: ExternalAccountPayoutBankAccountInput
	business_profile: BusinessProfileSpecsInput
	business_type: PostV1AccountsInput_business_type
	capabilities: CapabilitiesParamInput
	company: CompanySpecsInput
	country: String
	default_currency: String
	documents: DocumentsSpecsInput
	email: String
	expand: [String]
	external_account: String
	individual: IndividualSpecsInput
	metadata: JSON
	settings: SettingsSpecsInput
	tos_acceptance: TosAcceptanceSpecsInput
	type: PostV1AccountsInput_type
}

input ExternalAccountPayoutBankAccountInput {
	account_holder_name: String
	account_holder_type: ExternalAccountPayoutBankAccountInput_account_holder_type
	account_number: String!
	account_type: ExternalAccountPayoutBankAccountInput_account_type
	country: String!
	currency: String
	object: ExternalAccountPayoutBankAccountInput_object
	routing_number: String
}

enum ExternalAccountPayoutBankAccountInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum ExternalAccountPayoutBankAccountInput_account_type {
	CHECKING
	FUTSU
	SAVINGS
	TOZA
}

enum ExternalAccountPayoutBankAccountInput_object {
	BANK_ACCOUNT
}

input BusinessProfileSpecsInput {
	mcc: String
	name: String
	product_description: String
	support_address: AddressSpecsInput
	support_email: String
	support_phone: String
	support_url: String
	url: String
}

input AddressSpecsInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

enum PostV1AccountsInput_business_type {
	COMPANY
	GOVERNMENT_ENTITY
	INDIVIDUAL
	NON_PROFIT
}

input CapabilitiesParamInput {
	acss_debit_payments: CapabilityParamInput
	affirm_payments: CapabilityParamInput
	afterpay_clearpay_payments: CapabilityParamInput
	au_becs_debit_payments: CapabilityParamInput
	bacs_debit_payments: CapabilityParamInput
	bancontact_payments: CapabilityParamInput
	bank_transfer_payments: CapabilityParamInput
	blik_payments: CapabilityParamInput
	boleto_payments: CapabilityParamInput
	card_issuing: CapabilityParamInput
	card_payments: CapabilityParamInput
	cartes_bancaires_payments: CapabilityParamInput
	eps_payments: CapabilityParamInput
	fpx_payments: CapabilityParamInput
	giropay_payments: CapabilityParamInput
	grabpay_payments: CapabilityParamInput
	ideal_payments: CapabilityParamInput
	india_international_payments: CapabilityParamInput
	jcb_payments: CapabilityParamInput
	klarna_payments: CapabilityParamInput
	konbini_payments: CapabilityParamInput
	legacy_payments: CapabilityParamInput
	link_payments: CapabilityParamInput
	oxxo_payments: CapabilityParamInput
	p24_payments: CapabilityParamInput
	paynow_payments: CapabilityParamInput
	promptpay_payments: CapabilityParamInput
	sepa_debit_payments: CapabilityParamInput
	sofort_payments: CapabilityParamInput
	tax_reporting_us_1099_k: CapabilityParamInput
	tax_reporting_us_1099_misc: CapabilityParamInput
	transfers: CapabilityParamInput
	treasury: CapabilityParamInput
	us_bank_account_ach_payments: CapabilityParamInput
}

input CapabilityParamInput {
	requested: Boolean
}

input CompanySpecsInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	directors_provided: Boolean
	executives_provided: Boolean
	name: String
	name_kana: String
	name_kanji: String
	owners_provided: Boolean
	ownership_declaration: CompanyOwnershipDeclarationInput
	phone: String
	registration_number: String
	structure: CompanySpecsInput_structure
	tax_id: String
	tax_id_registrar: String
	vat_id: String
	verification: VerificationSpecsInput
}

input JapanAddressKanaSpecsInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
	town: String
}

input JapanAddressKanjiSpecsInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
	town: String
}

input CompanyOwnershipDeclarationInput {
	date: Int
	ip: String
	user_agent: String
}

enum CompanySpecsInput_structure {
	FREE_ZONE_ESTABLISHMENT
	FREE_ZONE_LLC
	GOVERNMENT_INSTRUMENTALITY
	GOVERNMENTAL_UNIT
	INCORPORATED_NON_PROFIT
	LIMITED_LIABILITY_PARTNERSHIP
	LLC
	MULTI_MEMBER_LLC
	PRIVATE_COMPANY
	PRIVATE_CORPORATION
	PRIVATE_PARTNERSHIP
	PUBLIC_COMPANY
	PUBLIC_CORPORATION
	PUBLIC_PARTNERSHIP
	SINGLE_MEMBER_LLC
	SOLE_ESTABLISHMENT
	SOLE_PROPRIETORSHIP
	TAX_EXEMPT_GOVERNMENT_INSTRUMENTALITY
	UNINCORPORATED_ASSOCIATION
	UNINCORPORATED_NON_PROFIT
}

input VerificationSpecsInput {
	document: VerificationDocumentSpecsInput
}

input VerificationDocumentSpecsInput {
	back: String
	front: String
}

input DocumentsSpecsInput {
	bank_account_ownership_verification: DocumentsParamInput
	company_license: DocumentsParamInput
	company_memorandum_of_association: DocumentsParamInput
	company_ministerial_decree: DocumentsParamInput
	company_registration_verification: DocumentsParamInput
	company_tax_id_verification: DocumentsParamInput
	proof_of_registration: DocumentsParamInput
}

input DocumentsParamInput {
	files: [String]
}

input IndividualSpecsInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	email: String
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	phone: String
	political_exposure: IndividualSpecsInput_political_exposure
	registered_address: AddressSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

input DateOfBirthSpecsInput {
	day: Int!
	month: Int!
	year: Int!
}

enum IndividualSpecsInput_political_exposure {
	EXISTING
	NONE
}

input PersonVerificationSpecsInput {
	additional_document: PersonVerificationDocumentSpecsInput
	document: PersonVerificationDocumentSpecsInput
}

input PersonVerificationDocumentSpecsInput {
	back: String
	front: String
}

input SettingsSpecsInput {
	branding: BrandingSettingsSpecsInput
	card_issuing: CardIssuingSettingsSpecsInput
	card_payments: CardPaymentsSettingsSpecsInput
	payments: PaymentsSettingsSpecsInput
	payouts: PayoutSettingsSpecsInput
	treasury: TreasurySettingsSpecsInput
}

input BrandingSettingsSpecsInput {
	icon: String
	logo: String
	primary_color: String
	secondary_color: String
}

input CardIssuingSettingsSpecsInput {
	tos_acceptance: SettingsTermsOfServiceSpecsInput
}

input SettingsTermsOfServiceSpecsInput {
	date: Int
	ip: String
	user_agent: String
}

input CardPaymentsSettingsSpecsInput {
	decline_on: DeclineChargeOnSpecsInput
	statement_descriptor_prefix: String
	statement_descriptor_prefix_kana: String
	statement_descriptor_prefix_kanji: String
}

input DeclineChargeOnSpecsInput {
	avs_failure: Boolean
	cvc_failure: Boolean
}

input PaymentsSettingsSpecsInput {
	statement_descriptor: String
	statement_descriptor_kana: String
	statement_descriptor_kanji: String
}

input PayoutSettingsSpecsInput {
	debit_negative_balances: Boolean
	schedule: TransferScheduleSpecsInput
	statement_descriptor: String
}

input TransferScheduleSpecsInput {
	delay_days: TransferScheduleSpecsInput_delay_days
	interval: TransferScheduleSpecsInput_interval
	monthly_anchor: Int
	weekly_anchor: TransferScheduleSpecsInput_weekly_anchor
}

enum TransferScheduleSpecsInput_delay_days {
	MINIMUM
}

enum TransferScheduleSpecsInput_interval {
	DAILY
	MANUAL
	MONTHLY
	WEEKLY
}

enum TransferScheduleSpecsInput_weekly_anchor {
	FRIDAY
	MONDAY
	SATURDAY
	SUNDAY
	THURSDAY
	TUESDAY
	WEDNESDAY
}

input TreasurySettingsSpecsInput {
	tos_acceptance: SettingsTermsOfServiceSpecsInput
}

input TosAcceptanceSpecsInput {
	date: Int
	ip: String
	service_agreement: String
	user_agent: String
}

enum PostV1AccountsInput_type {
	CUSTOM
	EXPRESS
	STANDARD
}

input PostV1AccountsAccountInput {
	account_token: String
	business_profile: BusinessProfileSpecsInput
	business_type: PostV1AccountsAccountInput_business_type
	capabilities: CapabilitiesParamInput
	company: CompanySpecsInput
	default_currency: String
	documents: DocumentsSpecsInput
	email: String
	expand: [String]
	external_account: String
	individual: IndividualSpecsInput
	metadata: JSON
	settings: SettingsSpecsUpdateInput
	tos_acceptance: TosAcceptanceSpecsInput
}

enum PostV1AccountsAccountInput_business_type {
	COMPANY
	GOVERNMENT_ENTITY
	INDIVIDUAL
	NON_PROFIT
}

input SettingsSpecsUpdateInput {
	branding: BrandingSettingsSpecsInput
	card_issuing: CardIssuingSettingsSpecsInput
	card_payments: CardPaymentsSettingsSpecsInput
	payments: PaymentsSettingsSpecsInput
	payouts: PayoutSettingsSpecsInput
	treasury: TreasurySettingsSpecsInput
}

type deleted_account {
	deleted: Boolean!
	id: String!
	object: deleted_account_object!
}

enum deleted_account_object {
	ACCOUNT
}

type external_account {
	account: String
	account_holder_name: String
	account_holder_type: String
	account_type: String
	available_payout_methods: [external_account_available_payout_methods]
	bank_name: String
	country: String!
	currency: String!
	customer: String
	default_for_currency: Boolean
	fingerprint: String
	id: String!
	last4: String!
	metadata: JSON
	object: external_account_object!
	routing_number: String
	status: String!
}

enum external_account_available_payout_methods {
	INSTANT
	STANDARD
}

enum external_account_object {
	BANK_ACCOUNT
}

input PostV1AccountsAccountBankAccountsInput {
	bank_account: ExternalAccountPayoutBankAccountInput
	default_for_currency: Boolean
	expand: [String]
	external_account: String
	metadata: JSON
}

input PostV1AccountsAccountBankAccountsIdInput {
	account_holder_name: String
	account_holder_type: PostV1AccountsAccountBankAccountsIdInput_account_holder_type
	account_type: PostV1AccountsAccountBankAccountsIdInput_account_type
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	default_for_currency: Boolean
	exp_month: String
	exp_year: String
	expand: [String]
	metadata: JSON
	name: String
}

enum PostV1AccountsAccountBankAccountsIdInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum PostV1AccountsAccountBankAccountsIdInput_account_type {
	CHECKING
	FUTSU
	SAVINGS
	TOZA
}

type deleted_external_account {
	currency: String
	deleted: Boolean!
	id: String!
	object: deleted_external_account_object!
}

enum deleted_external_account_object {
	BANK_ACCOUNT
}

type ListAccountCapability {
	data: [capability]!
	has_more: Boolean!
	object: ListAccountCapability_object!
	url: String!
}

type capability {
	account: String!
	future_requirements: account_capability_future_requirements
	id: String!
	object: capability_object!
	requested: Boolean!
	requested_at: Int
	requirements: account_capability_requirements
	status: capability_status!
}

type account_capability_future_requirements {
	alternatives: [account_requirements_alternative]
	current_deadline: Int
	currently_due: [String]!
	disabled_reason: String
	errors: [account_requirements_error]!
	eventually_due: [String]!
	past_due: [String]!
	pending_verification: [String]!
}

enum capability_object {
	CAPABILITY
}

type account_capability_requirements {
	alternatives: [account_requirements_alternative]
	current_deadline: Int
	currently_due: [String]!
	disabled_reason: String
	errors: [account_requirements_error]!
	eventually_due: [String]!
	past_due: [String]!
	pending_verification: [String]!
}

enum capability_status {
	ACTIVE
	DISABLED
	INACTIVE
	PENDING
	UNREQUESTED
}

enum ListAccountCapability_object {
	LIST
}

input PostV1AccountsAccountCapabilitiesCapabilityInput {
	expand: [String]
	requested: Boolean
}

input PostV1AccountsAccountExternalAccountsInput {
	bank_account: ExternalAccountPayoutBankAccountInput
	default_for_currency: Boolean
	expand: [String]
	external_account: String
	metadata: JSON
}

input PostV1AccountsAccountExternalAccountsIdInput {
	account_holder_name: String
	account_holder_type: PostV1AccountsAccountExternalAccountsIdInput_account_holder_type
	account_type: PostV1AccountsAccountExternalAccountsIdInput_account_type
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	default_for_currency: Boolean
	exp_month: String
	exp_year: String
	expand: [String]
	metadata: JSON
	name: String
}

enum PostV1AccountsAccountExternalAccountsIdInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum PostV1AccountsAccountExternalAccountsIdInput_account_type {
	CHECKING
	FUTSU
	SAVINGS
	TOZA
}

type login_link {
	created: Int!
	object: login_link_object!
	url: String!
}

enum login_link_object {
	LOGIN_LINK
}

input PostV1AccountsAccountLoginLinksInput {
	expand: [String]
}

type PersonList {
	data: [person]!
	has_more: Boolean!
	object: PersonList_object!
	url: String!
}

enum PersonList_object {
	LIST
}

input all_people_relationship_specsInput {
	director: Boolean
	executive: Boolean
	owner: Boolean
	representative: Boolean
}

input PostV1AccountsAccountPeopleInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	documents: PersonDocumentsSpecsInput
	email: String
	expand: [String]
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	person_token: String
	phone: String
	political_exposure: String
	registered_address: AddressSpecsInput
	relationship: RelationshipSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

input PersonDocumentsSpecsInput {
	company_authorization: DocumentsParamInput
	passport: DocumentsParamInput
	visa: DocumentsParamInput
}

input RelationshipSpecsInput {
	director: Boolean
	executive: Boolean
	owner: Boolean
	percent_ownership: Int
	representative: Boolean
	title: String
}

input PostV1AccountsAccountPeoplePersonInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	documents: PersonDocumentsSpecsInput
	email: String
	expand: [String]
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	person_token: String
	phone: String
	political_exposure: String
	registered_address: AddressSpecsInput
	relationship: RelationshipSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

type deleted_person {
	deleted: Boolean!
	id: String!
	object: deleted_person_object!
}

enum deleted_person_object {
	PERSON
}

input PostV1AccountsAccountPersonsInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	documents: PersonDocumentsSpecsInput
	email: String
	expand: [String]
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	person_token: String
	phone: String
	political_exposure: String
	registered_address: AddressSpecsInput
	relationship: RelationshipSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

input PostV1AccountsAccountPersonsPersonInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	documents: PersonDocumentsSpecsInput
	email: String
	expand: [String]
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	person_token: String
	phone: String
	political_exposure: String
	registered_address: AddressSpecsInput
	relationship: RelationshipSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

input PostV1AccountsAccountRejectInput {
	expand: [String]
	reason: String!
}

type ApplePayDomainList {
	data: [apple_pay_domain]!
	has_more: Boolean!
	object: ApplePayDomainList_object!
	url: String!
}

type apple_pay_domain {
	created: Int!
	domain_name: String!
	id: String!
	livemode: Boolean!
	object: apple_pay_domain_object!
}

enum apple_pay_domain_object {
	APPLE_PAY_DOMAIN
}

enum ApplePayDomainList_object {
	LIST
}

input PostV1ApplePayDomainsInput {
	domain_name: String!
	expand: [String]
}

type deleted_apple_pay_domain {
	deleted: Boolean!
	id: String!
	object: deleted_apple_pay_domain_object!
}

enum deleted_apple_pay_domain_object {
	APPLE_PAY_DOMAIN
}

type PlatformEarningList {
	data: [application_fee]!
	has_more: Boolean!
	object: PlatformEarningList_object!
	url: String!
}

type application_fee {
	account: String!
	amount: Int!
	amount_refunded: Int!
	application: String!
	balance_transaction: String
	charge: String!
	created: Int!
	currency: String!
	id: String!
	livemode: Boolean!
	object: application_fee_object!
	originating_transaction: String
	refunded: Boolean!
	refunds: FeeRefundList!
}

enum application_fee_object {
	APPLICATION_FEE
}

type FeeRefundList {
	data: [fee_refund]!
	has_more: Boolean!
	object: FeeRefundList_object!
	url: String!
}

type fee_refund {
	amount: Int!
	balance_transaction: String
	created: Int!
	currency: String!
	fee: String!
	id: String!
	metadata: JSON
	object: fee_refund_object!
}

enum fee_refund_object {
	FEE_REFUND
}

enum FeeRefundList_object {
	LIST
}

enum PlatformEarningList_object {
	LIST
}

input PostV1ApplicationFeesFeeRefundsIdInput {
	expand: [String]
	metadata: JSON
}

input PostV1ApplicationFeesIdRefundInput {
	amount: Int
	directive: String
	expand: [String]
}

input PostV1ApplicationFeesIdRefundsInput {
	amount: Int
	expand: [String]
	metadata: JSON
}

type SecretServiceResourceSecretList {
	has_more: Boolean!
	object: SecretServiceResourceSecretList_object!
	url: String!
}

enum SecretServiceResourceSecretList_object {
	LIST
}

input scope_paramInput {
	type: scope_paramInput_type!
	user: String
}

enum scope_paramInput_type {
	ACCOUNT
	USER
}

input PostV1AppsSecretsInput {
	expand: [String]
	expires_at: Int
	name: String!
	payload: String!
	scope: ScopeParamInput!
}

input ScopeParamInput {
	type: ScopeParamInput_type!
	user: String
}

enum ScopeParamInput_type {
	ACCOUNT
	USER
}

input PostV1AppsSecretsDeleteInput {
	expand: [String]
	name: String!
	scope: ScopeParamInput!
}

type balance {
	available: [balance_amount]!
	connect_reserved: [balance_amount]
	instant_available: [balance_amount]
	issuing: balance_detail
	livemode: Boolean!
	object: balance_object!
	pending: [balance_amount]!
}

type balance_amount {
	amount: Int!
	currency: String!
	source_types: balance_amount_by_source_type
}

type balance_amount_by_source_type {
	bank_account: Int
	card: Int
	fpx: Int
}

type balance_detail {
	available: [balance_amount]!
}

enum balance_object {
	BALANCE
}

type BalanceTransactionsList {
	data: [balance_transaction]!
	has_more: Boolean!
	object: BalanceTransactionsList_object!
	url: String!
}

type balance_transaction {
	amount: Int!
	available_on: Int!
	created: Int!
	currency: String!
	description: String
	exchange_rate: Int
	fee: Int!
	fee_details: [fee]!
	id: String!
	net: Int!
	object: balance_transaction_object!
	reporting_category: String!
	source: String
	status: String!
	type: balance_transaction_type!
}

type fee {
	amount: Int!
	application: String
	currency: String!
	description: String
	type: String!
}

enum balance_transaction_object {
	BALANCE_TRANSACTION
}

enum balance_transaction_type {
	ADJUSTMENT
	ADVANCE
	ADVANCE_FUNDING
	ANTICIPATION_REPAYMENT
	APPLICATION_FEE
	APPLICATION_FEE_REFUND
	CHARGE
	CONNECT_COLLECTION_TRANSFER
	CONTRIBUTION
	ISSUING_AUTHORIZATION_HOLD
	ISSUING_AUTHORIZATION_RELEASE
	ISSUING_DISPUTE
	ISSUING_TRANSACTION
	PAYMENT
	PAYMENT_FAILURE_REFUND
	PAYMENT_REFUND
	PAYOUT
	PAYOUT_CANCEL
	PAYOUT_FAILURE
	REFUND
	REFUND_FAILURE
	RESERVE_TRANSACTION
	RESERVED_FUNDS
	STRIPE_FEE
	STRIPE_FX_FEE
	TAX_FEE
	TOPUP
	TOPUP_REVERSAL
	TRANSFER
	TRANSFER_CANCEL
	TRANSFER_FAILURE
	TRANSFER_REFUND
}

enum BalanceTransactionsList_object {
	LIST
}

type PortalConfigurationList {
	has_more: Boolean!
	object: PortalConfigurationList_object!
	url: String!
}

enum PortalConfigurationList_object {
	LIST
}

input PostV1BillingPortalConfigurationsInput {
	business_profile: BusinessProfileCreateParamInput!
	default_return_url: String
	expand: [String]
	features: FeaturesCreationParamInput!
	login_page: LoginPageCreateParamInput
	metadata: JSON
}

input BusinessProfileCreateParamInput {
	headline: String
	privacy_policy_url: String
	terms_of_service_url: String
}

input FeaturesCreationParamInput {
	customer_update: CustomerUpdateCreationParamInput
	invoice_history: InvoiceListParamInput
	payment_method_update: PaymentMethodUpdateParamInput
	subscription_cancel: SubscriptionCancelCreationParamInput
	subscription_pause: SubscriptionPauseParamInput
	subscription_update: SubscriptionUpdateCreationParamInput
}

input CustomerUpdateCreationParamInput {
	allowed_updates: [CustomerUpdateCreationParamInput_allowed_updates]
	enabled: Boolean!
}

enum CustomerUpdateCreationParamInput_allowed_updates {
	ADDRESS
	EMAIL
	PHONE
	SHIPPING
	TAX_ID
}

input InvoiceListParamInput {
	enabled: Boolean!
}

input PaymentMethodUpdateParamInput {
	enabled: Boolean!
}

input SubscriptionCancelCreationParamInput {
	cancellation_reason: SubscriptionCancellationReasonCreationParamInput
	enabled: Boolean!
	mode: SubscriptionCancelCreationParamInput_mode
	proration_behavior: SubscriptionCancelCreationParamInput_proration_behavior
}

input SubscriptionCancellationReasonCreationParamInput {
	enabled: Boolean!
	options: [SubscriptionCancellationReasonCreationParamInput_options]!
}

enum SubscriptionCancellationReasonCreationParamInput_options {
	CUSTOMER_SERVICE
	LOW_QUALITY
	MISSING_FEATURES
	OTHER
	SWITCHED_SERVICE
	TOO_COMPLEX
	TOO_EXPENSIVE
	UNUSED
}

enum SubscriptionCancelCreationParamInput_mode {
	AT_PERIOD_END
	IMMEDIATELY
}

enum SubscriptionCancelCreationParamInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input SubscriptionPauseParamInput {
	enabled: Boolean
}

input SubscriptionUpdateCreationParamInput {
	default_allowed_updates: [SubscriptionUpdateCreationParamInput_default_allowed_updates]!
	enabled: Boolean!
	products: [SubscriptionUpdateProductParamInput]!
	proration_behavior: SubscriptionUpdateCreationParamInput_proration_behavior
}

enum SubscriptionUpdateCreationParamInput_default_allowed_updates {
	PRICE
	PROMOTION_CODE
	QUANTITY
}

input SubscriptionUpdateProductParamInput {
	prices: [String]!
	product: String!
}

enum SubscriptionUpdateCreationParamInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input LoginPageCreateParamInput {
	enabled: Boolean!
}

input PostV1BillingPortalConfigurationsConfigurationInput {
	active: Boolean
	business_profile: BusinessProfileUpdateParamInput
	default_return_url: String
	expand: [String]
	features: FeaturesUpdatingParamInput
	login_page: LoginPageUpdateParamInput
	metadata: JSON
}

input BusinessProfileUpdateParamInput {
	headline: String
	privacy_policy_url: String
	terms_of_service_url: String
}

input FeaturesUpdatingParamInput {
	customer_update: CustomerUpdateUpdatingParamInput
	invoice_history: InvoiceListParamInput
	payment_method_update: PaymentMethodUpdateParamInput
	subscription_cancel: SubscriptionCancelUpdatingParamInput
	subscription_pause: SubscriptionPauseParamInput
	subscription_update: SubscriptionUpdateUpdatingParamInput
}

input CustomerUpdateUpdatingParamInput {
	allowed_updates: [CustomerUpdateUpdatingParamInput_allowed_updates]
	enabled: Boolean
}

enum CustomerUpdateUpdatingParamInput_allowed_updates {
	ADDRESS
	EMAIL
	PHONE
	SHIPPING
	TAX_ID
}

input SubscriptionCancelUpdatingParamInput {
	cancellation_reason: SubscriptionCancellationReasonUpdatingParamInput
	enabled: Boolean
	mode: SubscriptionCancelUpdatingParamInput_mode
	proration_behavior: SubscriptionCancelUpdatingParamInput_proration_behavior
}

input SubscriptionCancellationReasonUpdatingParamInput {
	enabled: Boolean!
	options: [SubscriptionCancellationReasonUpdatingParamInput_options]
}

enum SubscriptionCancellationReasonUpdatingParamInput_options {
	CUSTOMER_SERVICE
	LOW_QUALITY
	MISSING_FEATURES
	OTHER
	SWITCHED_SERVICE
	TOO_COMPLEX
	TOO_EXPENSIVE
	UNUSED
}

enum SubscriptionCancelUpdatingParamInput_mode {
	AT_PERIOD_END
	IMMEDIATELY
}

enum SubscriptionCancelUpdatingParamInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input SubscriptionUpdateUpdatingParamInput {
	default_allowed_updates: [SubscriptionUpdateUpdatingParamInput_default_allowed_updates]
	enabled: Boolean
	products: [SubscriptionUpdateProductParamInput]
	proration_behavior: SubscriptionUpdateUpdatingParamInput_proration_behavior
}

enum SubscriptionUpdateUpdatingParamInput_default_allowed_updates {
	PRICE
	PROMOTION_CODE
	QUANTITY
}

enum SubscriptionUpdateUpdatingParamInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input LoginPageUpdateParamInput {
	enabled: Boolean!
}

input PostV1BillingPortalSessionsInput {
	configuration: String
	customer: String!
	expand: [String]
	flow_data: FlowDataParamInput
	locale: PostV1BillingPortalSessionsInput_locale
	on_behalf_of: String
	return_url: String
}

input FlowDataParamInput {
	after_completion: FlowDataAfterCompletionParamInput
	subscription_cancel: FlowDataSubscriptionCancelParamInput
	type: FlowDataParamInput_type!
}

input FlowDataAfterCompletionParamInput {
	hosted_confirmation: AfterCompletionHostedConfirmationParamInput
	redirect: AfterCompletionRedirectParamInput
	type: FlowDataAfterCompletionParamInput_type!
}

input AfterCompletionHostedConfirmationParamInput {
	custom_message: String
}

input AfterCompletionRedirectParamInput {
	return_url: String!
}

enum FlowDataAfterCompletionParamInput_type {
	HOSTED_CONFIRMATION
	PORTAL_HOMEPAGE
	REDIRECT
}

input FlowDataSubscriptionCancelParamInput {
	subscription: String!
}

enum FlowDataParamInput_type {
	PAYMENT_METHOD_UPDATE
	SUBSCRIPTION_CANCEL
}

enum PostV1BillingPortalSessionsInput_locale {
	AUTO
	BG
	CS
	DA
	DE
	EL
	EN
	EN_AU
	EN_CA
	EN_GB
	EN_IE
	EN_IN
	EN_NZ
	EN_SG
	ES
	ES_419
	ET
	FI
	FIL
	FR
	FR_CA
	HR
	HU
	ID
	IT
	JA
	KO
	LT
	LV
	MS
	MT
	NB
	NL
	PL
	PT
	PT_BR
	RO
	RU
	SK
	SL
	SV
	TH
	TR
	VI
	ZH
	ZH_HK
	ZH_TW
}

type ChargeList {
	data: [charge]!
	has_more: Boolean!
	object: ChargeList_object!
	url: String!
}

type charge {
	amount: Int!
	amount_captured: Int!
	amount_refunded: Int!
	application: String
	application_fee: String
	application_fee_amount: Int
	balance_transaction: String
	billing_details: billing_details!
	calculated_statement_descriptor: String
	captured: Boolean!
	created: Int!
	currency: String!
	customer: String
	description: String
	disputed: Boolean!
	failure_balance_transaction: String
	failure_code: String
	failure_message: String
	fraud_details: ChargeFraudDetails
	id: String!
	invoice: String
	livemode: Boolean!
	metadata: JSON!
	object: charge_object!
	on_behalf_of: String
	outcome: ChargeOutcome
	paid: Boolean!
	payment_intent: String
	payment_method: String
	payment_method_details: PaymentMethodDetails
	radar_options: radar_radar_options
	receipt_email: String
	receipt_number: String
	receipt_url: String
	refunded: Boolean!
	refunds: RefundList
	review: String
	shipping: Shipping
	source_transfer: String
	statement_descriptor: String
	statement_descriptor_suffix: String
	status: charge_status!
	transfer: String
	transfer_data: ChargeTransferData
	transfer_group: String
}

type billing_details {
	address: Address
	email: String
	name: String
	phone: String
}

type ChargeFraudDetails {
	stripe_report: String
	user_report: String
}

enum charge_object {
	CHARGE
}

type ChargeOutcome {
	network_status: String
	reason: String
	risk_level: String
	risk_score: Int
	rule: String
	seller_message: String
	type: String!
}

type PaymentMethodDetails {
	ach_credit_transfer: payment_method_details_ach_credit_transfer
	ach_debit: payment_method_details_ach_debit
	acss_debit: payment_method_details_acss_debit
	affirm: payment_method_details_affirm
	afterpay_clearpay: payment_method_details_afterpay_clearpay
	alipay: payment_flows_private_payment_methods_alipay_details
	au_becs_debit: payment_method_details_au_becs_debit
	bacs_debit: payment_method_details_bacs_debit
	bancontact: payment_method_details_bancontact
	blik: payment_method_details_blik
	boleto: payment_method_details_boleto
	card: payment_method_details_card
	card_present: payment_method_details_card_present
	customer_balance: payment_method_details_customer_balance
	eps: payment_method_details_eps
	fpx: payment_method_details_fpx
	giropay: payment_method_details_giropay
	grabpay: payment_method_details_grabpay
	ideal: payment_method_details_ideal
	interac_present: payment_method_details_interac_present
	klarna: payment_method_details_klarna
	konbini: payment_method_details_konbini
	link: payment_method_details_link
	multibanco: payment_method_details_multibanco
	oxxo: payment_method_details_oxxo
	p24: payment_method_details_p24
	paynow: payment_method_details_paynow
	pix: payment_method_details_pix
	promptpay: payment_method_details_promptpay
	sepa_debit: payment_method_details_sepa_debit
	sofort: payment_method_details_sofort
	stripe_account: payment_method_details_stripe_account
	type: String!
	us_bank_account: payment_method_details_us_bank_account
	wechat: payment_method_details_wechat
	wechat_pay: payment_method_details_wechat_pay
}

type payment_method_details_ach_credit_transfer {
	account_number: String
	bank_name: String
	routing_number: String
	swift_code: String
}

type payment_method_details_ach_debit {
	account_holder_type: payment_method_details_ach_debit_account_holder_type
	bank_name: String
	country: String
	fingerprint: String
	last4: String
	routing_number: String
}

enum payment_method_details_ach_debit_account_holder_type {
	COMPANY
	INDIVIDUAL
}

type payment_method_details_acss_debit {
	bank_name: String
	fingerprint: String
	institution_number: String
	last4: String
	mandate: String
	transit_number: String
}

type payment_method_details_affirm

type payment_method_details_afterpay_clearpay {
	reference: String
}

type payment_flows_private_payment_methods_alipay_details {
	buyer_id: String
	fingerprint: String
	transaction_id: String
}

type payment_method_details_au_becs_debit {
	bsb_number: String
	fingerprint: String
	last4: String
	mandate: String
}

type payment_method_details_bacs_debit {
	fingerprint: String
	last4: String
	mandate: String
	sort_code: String
}

type payment_method_details_bancontact {
	bank_code: String
	bank_name: String
	bic: String
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	preferred_language: payment_method_details_bancontact_preferred_language
	verified_name: String
}

enum payment_method_details_bancontact_preferred_language {
	DE
	EN
	FR
	NL
}

type payment_method_details_blik

type payment_method_details_boleto {
	tax_id: String!
}

type payment_method_details_card {
	brand: String
	checks: PaymentMethodDetailsCardChecks
	country: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String
	installments: PaymentMethodDetailsCardInstallments
	last4: String
	mandate: String
	network: String
	three_d_secure: ThreeDSecureDetails
	wallet: PaymentMethodDetailsCardWallet
}

type PaymentMethodDetailsCardChecks {
	address_line1_check: String
	address_postal_code_check: String
	cvc_check: String
}

type PaymentMethodDetailsCardInstallments {
	plan: PaymentMethodDetailsCardInstallmentsPlan
}

type PaymentMethodDetailsCardInstallmentsPlan {
	count: Int
	interval: PaymentMethodDetailsCardInstallmentsPlan_interval
	type: PaymentMethodDetailsCardInstallmentsPlan_type!
}

enum PaymentMethodDetailsCardInstallmentsPlan_interval {
	MONTH
}

enum PaymentMethodDetailsCardInstallmentsPlan_type {
	FIXED_COUNT
}

type ThreeDSecureDetails {
	authentication_flow: ThreeDSecureDetails_authentication_flow
	result: ThreeDSecureDetails_result
	result_reason: ThreeDSecureDetails_result_reason
	version: ThreeDSecureDetails_version
}

enum ThreeDSecureDetails_authentication_flow {
	CHALLENGE
	FRICTIONLESS
}

enum ThreeDSecureDetails_result {
	ATTEMPT_ACKNOWLEDGED
	AUTHENTICATED
	EXEMPTED
	FAILED
	NOT_SUPPORTED
	PROCESSING_ERROR
}

enum ThreeDSecureDetails_result_reason {
	ABANDONED
	BYPASSED
	CANCELED
	CARD_NOT_ENROLLED
	NETWORK_NOT_SUPPORTED
	PROTOCOL_ERROR
	REJECTED
}

enum ThreeDSecureDetails_version {
	_1_0_2
	_2_1_0
	_2_2_0
}

type PaymentMethodDetailsCardWallet {
	amex_express_checkout: payment_method_details_card_wallet_amex_express_checkout
	apple_pay: payment_method_details_card_wallet_apple_pay
	dynamic_last4: String
	google_pay: payment_method_details_card_wallet_google_pay
	masterpass: payment_method_details_card_wallet_masterpass
	samsung_pay: payment_method_details_card_wallet_samsung_pay
	type: PaymentMethodDetailsCardWallet_type!
	visa_checkout: payment_method_details_card_wallet_visa_checkout
}

type payment_method_details_card_wallet_amex_express_checkout

type payment_method_details_card_wallet_apple_pay

type payment_method_details_card_wallet_google_pay

type payment_method_details_card_wallet_masterpass {
	billing_address: Address
	email: String
	name: String
	shipping_address: Address
}

type payment_method_details_card_wallet_samsung_pay

enum PaymentMethodDetailsCardWallet_type {
	AMEX_EXPRESS_CHECKOUT
	APPLE_PAY
	GOOGLE_PAY
	MASTERPASS
	SAMSUNG_PAY
	VISA_CHECKOUT
}

type payment_method_details_card_wallet_visa_checkout {
	billing_address: Address
	email: String
	name: String
	shipping_address: Address
}

type payment_method_details_card_present {
	amount_authorized: Int
	brand: String
	capture_before: Int
	cardholder_name: String
	country: String
	emv_auth_data: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String
	generated_card: String
	incremental_authorization_supported: Boolean!
	last4: String
	network: String
	overcapture_supported: Boolean!
	read_method: payment_method_details_card_present_read_method
	receipt: PaymentMethodDetailsCardPresentReceipt
}

enum payment_method_details_card_present_read_method {
	CONTACT_EMV
	CONTACTLESS_EMV
	CONTACTLESS_MAGSTRIPE_MODE
	MAGNETIC_STRIPE_FALLBACK
	MAGNETIC_STRIPE_TRACK2
}

type PaymentMethodDetailsCardPresentReceipt {
	account_type: PaymentMethodDetailsCardPresentReceipt_account_type
	application_cryptogram: String
	application_preferred_name: String
	authorization_code: String
	authorization_response_code: String
	cardholder_verification_method: String
	dedicated_file_name: String
	terminal_verification_results: String
	transaction_status_information: String
}

enum PaymentMethodDetailsCardPresentReceipt_account_type {
	CHECKING
	CREDIT
	PREPAID
	UNKNOWN
}

type payment_method_details_customer_balance

type payment_method_details_eps {
	bank: payment_method_details_eps_bank
	verified_name: String
}

enum payment_method_details_eps_bank {
	ARZTE_UND_APOTHEKER_BANK
	AUSTRIAN_ANADI_BANK_AG
	BANK_AUSTRIA
	BANKHAUS_CARL_SPANGLER
	BANKHAUS_SCHELHAMMER_UND_SCHATTERA_AG
	BAWAG_PSK_AG
	BKS_BANK_AG
	BRULL_KALLMUS_BANK_AG
	BTV_VIER_LANDER_BANK
	CAPITAL_BANK_GRAWE_GRUPPE_AG
	DEUTSCHE_BANK_AG
	DOLOMITENBANK
	EASYBANK_AG
	ERSTE_BANK_UND_SPARKASSEN
	HYPO_ALPEADRIABANK_INTERNATIONAL_AG
	HYPO_BANK_BURGENLAND_AKTIENGESELLSCHAFT
	HYPO_NOE_LB_FUR_NIEDEROSTERREICH_U_WIEN
	HYPO_OBEROSTERREICH_SALZBURG_STEIERMARK
	HYPO_TIROL_BANK_AG
	HYPO_VORARLBERG_BANK_AG
	MARCHFELDER_BANK
	OBERBANK_AG
	RAIFFEISEN_BANKENGRUPPE_OSTERREICH
	SCHOELLERBANK_AG
	SPARDA_BANK_WIEN
	VOLKSBANK_GRUPPE
	VOLKSKREDITBANK_AG
	VR_BANK_BRAUNAU
}

type payment_method_details_fpx {
	bank: payment_method_details_fpx_bank!
	transaction_id: String
}

enum payment_method_details_fpx_bank {
	AFFIN_BANK
	AGROBANK
	ALLIANCE_BANK
	AMBANK
	BANK_ISLAM
	BANK_MUAMALAT
	BANK_OF_CHINA
	BANK_RAKYAT
	BSN
	CIMB
	DEUTSCHE_BANK
	HONG_LEONG_BANK
	HSBC
	KFH
	MAYBANK2E
	MAYBANK2U
	OCBC
	PB_ENTERPRISE
	PUBLIC_BANK
	RHB
	STANDARD_CHARTERED
	UOB
}

type payment_method_details_giropay {
	bank_code: String
	bank_name: String
	bic: String
	verified_name: String
}

type payment_method_details_grabpay {
	transaction_id: String
}

type payment_method_details_ideal {
	bank: payment_method_details_ideal_bank
	bic: payment_method_details_ideal_bic
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	verified_name: String
}

enum payment_method_details_ideal_bank {
	ABN_AMRO
	ASN_BANK
	BUNQ
	HANDELSBANKEN
	ING
	KNAB
	MONEYOU
	RABOBANK
	REGIOBANK
	REVOLUT
	SNS_BANK
	TRIODOS_BANK
	VAN_LANSCHOT
}

enum payment_method_details_ideal_bic {
	ABNANL2A
	ASNBNL21
	BUNQNL2A
	FVLBNL22
	HANDNL2A
	INGBNL2A
	KNABNL2H
	MOYONL21
	RABONL2U
	RBRBNL21
	REVOLT21
	SNSBNL2A
	TRIONL2U
}

type payment_method_details_interac_present {
	brand: String
	cardholder_name: String
	country: String
	emv_auth_data: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String
	generated_card: String
	last4: String
	network: String
	preferred_locales: [String]
	read_method: payment_method_details_interac_present_read_method
	receipt: PaymentMethodDetailsInteracPresentReceipt
}

enum payment_method_details_interac_present_read_method {
	CONTACT_EMV
	CONTACTLESS_EMV
	CONTACTLESS_MAGSTRIPE_MODE
	MAGNETIC_STRIPE_FALLBACK
	MAGNETIC_STRIPE_TRACK2
}

type PaymentMethodDetailsInteracPresentReceipt {
	account_type: PaymentMethodDetailsInteracPresentReceipt_account_type
	application_cryptogram: String
	application_preferred_name: String
	authorization_code: String
	authorization_response_code: String
	cardholder_verification_method: String
	dedicated_file_name: String
	terminal_verification_results: String
	transaction_status_information: String
}

enum PaymentMethodDetailsInteracPresentReceipt_account_type {
	CHECKING
	SAVINGS
	UNKNOWN
}

type payment_method_details_klarna {
	payment_method_category: String
	preferred_locale: String
}

type payment_method_details_konbini {
	store: PaymentMethodDetailsKonbiniStore
}

type PaymentMethodDetailsKonbiniStore {
	chain: PaymentMethodDetailsKonbiniStore_chain
}

enum PaymentMethodDetailsKonbiniStore_chain {
	FAMILYMART
	LAWSON
	MINISTOP
	SEICOMART
}

type payment_method_details_link

type payment_method_details_multibanco {
	entity: String
	reference: String
}

type payment_method_details_oxxo {
	number: String
}

type payment_method_details_p24 {
	bank: payment_method_details_p24_bank
	reference: String
	verified_name: String
}

enum payment_method_details_p24_bank {
	ALIOR_BANK
	BANK_MILLENNIUM
	BANK_NOWY_BFG_SA
	BANK_PEKAO_SA
	BANKI_SPBDZIELCZE
	BLIK
	BNP_PARIBAS
	BOZ
	CITI_HANDLOWY
	CREDIT_AGRICOLE
	ENVELOBANK
	ETRANSFER_POCZTOWY24
	GETIN_BANK
	IDEABANK
	ING
	INTELIGO
	MBANK_MTRANSFER
	NEST_PRZELEW
	NOBLE_PAY
	PBAC_Z_IPKO
	PLUS_BANK
	SANTANDER_PRZELEW24
	TMOBILE_USBUGI_BANKOWE
	TOYOTA_BANK
	VOLKSWAGEN_BANK
}

type payment_method_details_paynow {
	reference: String
}

type payment_method_details_pix {
	bank_transaction_id: String
}

type payment_method_details_promptpay {
	reference: String
}

type payment_method_details_sepa_debit {
	bank_code: String
	branch_code: String
	country: String
	fingerprint: String
	last4: String
	mandate: String
}

type payment_method_details_sofort {
	bank_code: String
	bank_name: String
	bic: String
	country: String
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	preferred_language: payment_method_details_sofort_preferred_language
	verified_name: String
}

enum payment_method_details_sofort_preferred_language {
	DE
	EN
	ES
	FR
	IT
	NL
	PL
}

type payment_method_details_stripe_account

type payment_method_details_us_bank_account {
	account_holder_type: payment_method_details_us_bank_account_account_holder_type
	account_type: payment_method_details_us_bank_account_account_type
	bank_name: String
	fingerprint: String
	last4: String
	routing_number: String
}

enum payment_method_details_us_bank_account_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum payment_method_details_us_bank_account_account_type {
	CHECKING
	SAVINGS
}

type payment_method_details_wechat

type payment_method_details_wechat_pay {
	fingerprint: String
	transaction_id: String
}

type radar_radar_options {
	session: String
}

type RefundList {
	data: [refund]!
	has_more: Boolean!
	object: RefundList_object!
	url: String!
}

type refund {
	amount: Int!
	balance_transaction: String
	charge: String
	created: Int!
	currency: String!
	description: String
	failure_balance_transaction: String
	failure_reason: String
	id: String!
	instructions_email: String
	metadata: JSON
	next_action: refund_next_action
	object: refund_object!
	payment_intent: String
	reason: refund_reason
	receipt_number: String
	source_transfer_reversal: String
	status: String
	transfer_reversal: String
}

type refund_next_action {
	display_details: RefundNextActionDisplayDetails
	type: String!
}

type RefundNextActionDisplayDetails {
	email_sent: email_sent!
	expires_at: Int!
}

type email_sent {
	email_sent_at: Int!
	email_sent_to: String!
}

enum refund_object {
	REFUND
}

enum refund_reason {
	DUPLICATE
	EXPIRED_UNCAPTURED_CHARGE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
}

enum RefundList_object {
	LIST
}

type Shipping {
	address: address
	carrier: String
	name: String
	phone: String
	tracking_number: String
}

enum charge_status {
	FAILED
	PENDING
	SUCCEEDED
}

type ChargeTransferData {
	amount: Int
	destination: String!
}

enum ChargeList_object {
	LIST
}

input PostV1ChargesInput {
	amount: Int
	application_fee: Int
	application_fee_amount: Int
	capture: Boolean
	card: CustomerPaymentSourceCardInput
	currency: String
	customer: String
	description: String
	destination: DestinationSpecsInput
	expand: [String]
	metadata: JSON
	on_behalf_of: String
	radar_options: RadarOptionsInput
	receipt_email: String
	shipping: OptionalFieldsShippingInput
	source: String
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataSpecsInput
	transfer_group: String
}

input CustomerPaymentSourceCardInput {
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	cvc: String
	exp_month: Int!
	exp_year: Int!
	metadata: JSON
	name: String
	number: String!
	object: CustomerPaymentSourceCardInput_object
}

enum CustomerPaymentSourceCardInput_object {
	CARD
}

input DestinationSpecsInput {
	account: String!
	amount: Int
}

input RadarOptionsInput {
	session: String
}

input OptionalFieldsShippingInput {
	address: OptionalFieldsAddressInput!
	carrier: String
	name: String!
	phone: String
	tracking_number: String
}

input OptionalFieldsAddressInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

input TransferDataSpecsInput {
	amount: Int
	destination: String!
}

type SearchResult {
	data: [charge]!
	has_more: Boolean!
	next_page: String
	object: SearchResult_object!
	total_count: Int
	url: String!
}

enum SearchResult_object {
	SEARCH_RESULT
}

input PostV1ChargesChargeInput {
	customer: String
	description: String
	expand: [String]
	fraud_details: FraudDetailsInput
	metadata: JSON
	receipt_email: String
	shipping: OptionalFieldsShippingInput
	transfer_group: String
}

input FraudDetailsInput {
	user_report: FraudDetailsInput_user_report!
}

enum FraudDetailsInput_user_report {
	FRAUDULENT
	SAFE
}

input PostV1ChargesChargeCaptureInput {
	amount: Int
	application_fee: Int
	application_fee_amount: Int
	expand: [String]
	receipt_email: String
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataSpecsInput
	transfer_group: String
}

type dispute {
	amount: Int!
	balance_transactions: [balance_transaction]!
	charge: String!
	created: Int!
	currency: String!
	evidence: dispute_evidence!
	evidence_details: dispute_evidence_details!
	id: String!
	is_charge_refundable: Boolean!
	livemode: Boolean!
	metadata: JSON!
	object: dispute_object!
	payment_intent: String
	reason: String!
	status: dispute_status!
}

type dispute_evidence {
	access_activity_log: String
	billing_address: String
	cancellation_policy: String
	cancellation_policy_disclosure: String
	cancellation_rebuttal: String
	customer_communication: String
	customer_email_address: String
	customer_name: String
	customer_purchase_ip: String
	customer_signature: String
	duplicate_charge_documentation: String
	duplicate_charge_explanation: String
	duplicate_charge_id: String
	product_description: String
	receipt: String
	refund_policy: String
	refund_policy_disclosure: String
	refund_refusal_explanation: String
	service_date: String
	service_documentation: String
	shipping_address: String
	shipping_carrier: String
	shipping_date: String
	shipping_documentation: String
	shipping_tracking_number: String
	uncategorized_file: String
	uncategorized_text: String
}

type dispute_evidence_details {
	due_by: Int
	has_evidence: Boolean!
	past_due: Boolean!
	submission_count: Int!
}

enum dispute_object {
	DISPUTE
}

enum dispute_status {
	CHARGE_REFUNDED
	LOST
	NEEDS_RESPONSE
	UNDER_REVIEW
	WARNING_CLOSED
	WARNING_NEEDS_RESPONSE
	WARNING_UNDER_REVIEW
	WON
}

input PostV1ChargesChargeDisputeInput {
	evidence: DisputeEvidenceParamsInput
	expand: [String]
	metadata: JSON
	submit: Boolean
}

input DisputeEvidenceParamsInput {
	access_activity_log: String
	billing_address: String
	cancellation_policy: String
	cancellation_policy_disclosure: String
	cancellation_rebuttal: String
	customer_communication: String
	customer_email_address: String
	customer_name: String
	customer_purchase_ip: String
	customer_signature: String
	duplicate_charge_documentation: String
	duplicate_charge_explanation: String
	duplicate_charge_id: String
	product_description: String
	receipt: String
	refund_policy: String
	refund_policy_disclosure: String
	refund_refusal_explanation: String
	service_date: String
	service_documentation: String
	shipping_address: String
	shipping_carrier: String
	shipping_date: String
	shipping_documentation: String
	shipping_tracking_number: String
	uncategorized_file: String
	uncategorized_text: String
}

input PostV1ChargesChargeDisputeCloseInput {
	expand: [String]
}

input PostV1ChargesChargeRefundInput {
	amount: Int
	expand: [String]
	instructions_email: String
	metadata: JSON
	payment_intent: String
	reason: PostV1ChargesChargeRefundInput_reason
	refund_application_fee: Boolean
	reverse_transfer: Boolean
}

enum PostV1ChargesChargeRefundInput_reason {
	DUPLICATE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
}

input PostV1ChargesChargeRefundsInput {
	amount: Int
	currency: String
	customer: String
	expand: [String]
	instructions_email: String
	metadata: JSON
	origin: PostV1ChargesChargeRefundsInput_origin
	payment_intent: String
	reason: PostV1ChargesChargeRefundsInput_reason
	refund_application_fee: Boolean
	reverse_transfer: Boolean
}

enum PostV1ChargesChargeRefundsInput_origin {
	CUSTOMER_BALANCE
}

enum PostV1ChargesChargeRefundsInput_reason {
	DUPLICATE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
}

input PostV1ChargesChargeRefundsRefundInput {
	expand: [String]
	metadata: JSON
}

type PaymentPagesCheckoutSessionList {
	has_more: Boolean!
	object: PaymentPagesCheckoutSessionList_object!
	url: String!
}

enum PaymentPagesCheckoutSessionList_object {
	LIST
}

input customer_details_params {
	email: String!
}

input PostV1CheckoutSessionsInput {
	after_expiration: AfterExpirationParamsInput
	allow_promotion_codes: Boolean
	automatic_tax: AutomaticTaxParamsInput
	billing_address_collection: PostV1CheckoutSessionsInput_billing_address_collection
	cancel_url: String
	client_reference_id: String
	consent_collection: ConsentCollectionParamsInput
	currency: String
	custom_text: CustomTextParamInput
	customer: String
	customer_creation: PostV1CheckoutSessionsInput_customer_creation
	customer_email: String
	customer_update: CustomerUpdateParamsInput
	discounts: [DiscountParamsInput]
	expand: [String]
	expires_at: Int
	invoice_creation: InvoiceCreationParamsInput
	line_items: [LineItemParamsInput]
	locale: PostV1CheckoutSessionsInput_locale
	metadata: JSON
	mode: PostV1CheckoutSessionsInput_mode
	payment_intent_data: PaymentIntentDataParamsInput
	payment_method_collection: PostV1CheckoutSessionsInput_payment_method_collection
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [PostV1CheckoutSessionsInput_payment_method_types]
	phone_number_collection: PhoneNumberCollectionParamsInput
	setup_intent_data: SetupIntentDataParamInput
	shipping_address_collection: ShippingAddressCollectionParamsInput
	shipping_options: [ShippingOptionParamsInput]
	submit_type: PostV1CheckoutSessionsInput_submit_type
	subscription_data: SubscriptionDataParamsInput
	success_url: String!
	tax_id_collection: TaxIdCollectionParamsInput
}

input AfterExpirationParamsInput {
	recovery: RecoveryParamsInput
}

input RecoveryParamsInput {
	allow_promotion_codes: Boolean
	enabled: Boolean!
}

input AutomaticTaxParamsInput {
	enabled: Boolean!
}

enum PostV1CheckoutSessionsInput_billing_address_collection {
	AUTO
	REQUIRED
}

input ConsentCollectionParamsInput {
	promotions: ConsentCollectionParamsInput_promotions
	terms_of_service: ConsentCollectionParamsInput_terms_of_service
}

enum ConsentCollectionParamsInput_promotions {
	AUTO
	NONE
}

enum ConsentCollectionParamsInput_terms_of_service {
	NONE
	REQUIRED
}

input CustomTextParamInput {
	shipping_address: CustomTextPositionParamInput
	submit: CustomTextPositionParamInput
}

input CustomTextPositionParamInput {
	message: String!
}

enum PostV1CheckoutSessionsInput_customer_creation {
	ALWAYS
	IF_REQUIRED
}

input CustomerUpdateParamsInput {
	address: CustomerUpdateParamsInput_address
	name: CustomerUpdateParamsInput_name
	shipping: CustomerUpdateParamsInput_shipping
}

enum CustomerUpdateParamsInput_address {
	AUTO
	NEVER
}

enum CustomerUpdateParamsInput_name {
	AUTO
	NEVER
}

enum CustomerUpdateParamsInput_shipping {
	AUTO
	NEVER
}

input DiscountParamsInput {
	coupon: String
	promotion_code: String
}

input InvoiceCreationParamsInput {
	enabled: Boolean!
	invoice_data: InvoiceDataParamsInput
}

input InvoiceDataParamsInput {
	account_tax_ids: [String]
	custom_fields: [CustomFieldParamsInput]
	description: String
	footer: String
	metadata: JSON
	rendering_options: RenderingOptionsParamInput
}

input CustomFieldParamsInput {
	name: String!
	value: String!
}

input RenderingOptionsParamInput {
	amount_tax_display: RenderingOptionsParamInput_amount_tax_display
}

enum RenderingOptionsParamInput_amount_tax_display {
	EXCLUDE_TAX
	INCLUDE_INCLUSIVE_TAX
}

input LineItemParamsInput {
	adjustable_quantity: AdjustableQuantityParamsInput
	dynamic_tax_rates: [String]
	price: String
	price_data: PriceDataWithProductDataInput
	quantity: Int
	tax_rates: [String]
}

input AdjustableQuantityParamsInput {
	enabled: Boolean!
	maximum: Int
	minimum: Int
}

input PriceDataWithProductDataInput {
	currency: String!
	product: String
	product_data: ProductDataInput
	recurring: RecurringAdhocInput
	tax_behavior: PriceDataWithProductDataInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

input ProductDataInput {
	description: String
	images: [String]
	metadata: JSON
	name: String!
	tax_code: String
}

input RecurringAdhocInput {
	interval: RecurringAdhocInput_interval!
	interval_count: Int
}

enum RecurringAdhocInput_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum PriceDataWithProductDataInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum PostV1CheckoutSessionsInput_locale {
	AUTO
	BG
	CS
	DA
	DE
	EL
	EN
	EN_GB
	ES
	ES_419
	ET
	FI
	FIL
	FR
	FR_CA
	HR
	HU
	ID
	IT
	JA
	KO
	LT
	LV
	MS
	MT
	NB
	NL
	PL
	PT
	PT_BR
	RO
	RU
	SK
	SL
	SV
	TH
	TR
	VI
	ZH
	ZH_HK
	ZH_TW
}

enum PostV1CheckoutSessionsInput_mode {
	PAYMENT
	SETUP
	SUBSCRIPTION
}

input PaymentIntentDataParamsInput {
	application_fee_amount: Int
	capture_method: PaymentIntentDataParamsInput_capture_method
	description: String
	metadata: JSON
	on_behalf_of: String
	receipt_email: String
	setup_future_usage: PaymentIntentDataParamsInput_setup_future_usage
	shipping: ShippingInput
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataParamsInput
	transfer_group: String
}

enum PaymentIntentDataParamsInput_capture_method {
	AUTOMATIC
	MANUAL
}

enum PaymentIntentDataParamsInput_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

input ShippingInput {
	address: AddressInput!
	carrier: String
	name: String!
	phone: String
	tracking_number: String
}

input AddressInput {
	city: String
	country: String
	line1: String!
	line2: String
	postal_code: String
	state: String
}

input TransferDataParamsInput {
	amount: Int
	destination: String!
}

enum PostV1CheckoutSessionsInput_payment_method_collection {
	ALWAYS
	IF_REQUIRED
}

input PaymentMethodOptionsParamInput {
	acss_debit: PaymentMethodOptionsParamInput
	affirm: PaymentMethodOptionsParamInput
	afterpay_clearpay: PaymentMethodOptionsParamInput
	alipay: PaymentMethodOptionsParamInput
	au_becs_debit: PaymentMethodOptionsParamInput
	bacs_debit: PaymentMethodOptionsParamInput
	bancontact: PaymentMethodOptionsParamInput
	boleto: PaymentMethodOptionsParamInput
	card: PaymentMethodOptionsParamInput
	customer_balance: PaymentMethodOptionsParamInput
	eps: PaymentMethodOptionsParamInput
	fpx: PaymentMethodOptionsParamInput
	giropay: PaymentMethodOptionsParamInput
	grabpay: PaymentMethodOptionsParamInput
	ideal: PaymentMethodOptionsParamInput
	klarna: PaymentMethodOptionsParamInput
	konbini: PaymentMethodOptionsParamInput
	oxxo: PaymentMethodOptionsParamInput
	p24: PaymentMethodOptionsParamInput
	paynow: PaymentMethodOptionsParamInput
	pix: PaymentMethodOptionsParamInput
	sepa_debit: PaymentMethodOptionsParamInput
	sofort: PaymentMethodOptionsParamInput
	us_bank_account: PaymentMethodOptionsParamInput
	wechat_pay: PaymentMethodOptionsParamInput
}

enum PostV1CheckoutSessionsInput_payment_method_types {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

input PhoneNumberCollectionParamsInput {
	enabled: Boolean!
}

input SetupIntentDataParamInput {
	description: String
	metadata: JSON
	on_behalf_of: String
}

input ShippingAddressCollectionParamsInput {
	allowed_countries: [ShippingAddressCollectionParamsInput_allowed_countries]!
}

enum ShippingAddressCollectionParamsInput_allowed_countries {
	AC
	AD
	AE
	AF
	AG
	AI
	AL
	AM
	AO
	AQ
	AR
	AT
	AU
	AW
	AX
	AZ
	BA
	BB
	BD
	BE
	BF
	BG
	BH
	BI
	BJ
	BL
	BM
	BN
	BO
	BQ
	BR
	BS
	BT
	BV
	BW
	BY
	BZ
	CA
	CD
	CF
	CG
	CH
	CI
	CK
	CL
	CM
	CN
	CO
	CR
	CV
	CW
	CY
	CZ
	DE
	DJ
	DK
	DM
	DO
	DZ
	EC
	EE
	EG
	EH
	ER
	ES
	ET
	FI
	FJ
	FK
	FO
	FR
	GA
	GB
	GD
	GE
	GF
	GG
	GH
	GI
	GL
	GM
	GN
	GP
	GQ
	GR
	GS
	GT
	GU
	GW
	GY
	HK
	HN
	HR
	HT
	HU
	ID
	IE
	IL
	IM
	IN
	IO
	IQ
	IS
	IT
	JE
	JM
	JO
	JP
	KE
	KG
	KH
	KI
	KM
	KN
	KR
	KW
	KY
	KZ
	LA
	LB
	LC
	LI
	LK
	LR
	LS
	LT
	LU
	LV
	LY
	MA
	MC
	MD
	ME
	MF
	MG
	MK
	ML
	MM
	MN
	MO
	MQ
	MR
	MS
	MT
	MU
	MV
	MW
	MX
	MY
	MZ
	NA
	NC
	NE
	NG
	NI
	NL
	NO
	NP
	NR
	NU
	NZ
	OM
	PA
	PE
	PF
	PG
	PH
	PK
	PL
	PM
	PN
	PR
	PS
	PT
	PY
	QA
	RE
	RO
	RS
	RU
	RW
	SA
	SB
	SC
	SE
	SG
	SH
	SI
	SJ
	SK
	SL
	SM
	SN
	SO
	SR
	SS
	ST
	SV
	SX
	SZ
	TA
	TC
	TD
	TF
	TG
	TH
	TJ
	TK
	TL
	TM
	TN
	TO
	TR
	TT
	TV
	TW
	TZ
	UA
	UG
	US
	UY
	UZ
	VA
	VC
	VE
	VG
	VN
	VU
	WF
	WS
	XK
	YE
	YT
	ZA
	ZM
	ZW
	ZZ
}

input ShippingOptionParamsInput {
	shipping_rate: String
	shipping_rate_data: MethodParamsInput
}

input MethodParamsInput {
	delivery_estimate: DeliveryEstimateInput
	display_name: String!
	fixed_amount: FixedAmountInput
	metadata: JSON
	tax_behavior: MethodParamsInput_tax_behavior
	tax_code: String
	type: MethodParamsInput_type
}

input DeliveryEstimateInput {
	maximum: DeliveryEstimateBoundInput
	minimum: DeliveryEstimateBoundInput
}

input DeliveryEstimateBoundInput {
	unit: DeliveryEstimateBoundInput_unit!
	value: Int!
}

enum DeliveryEstimateBoundInput_unit {
	BUSINESS_DAY
	DAY
	HOUR
	MONTH
	WEEK
}

input FixedAmountInput {
	amount: Int!
	currency: String!
	currency_options: JSON
}

enum MethodParamsInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum MethodParamsInput_type {
	FIXED_AMOUNT
}

enum PostV1CheckoutSessionsInput_submit_type {
	AUTO
	BOOK
	DONATE
	PAY
}

input SubscriptionDataParamsInput {
	application_fee_percent: Int
	default_tax_rates: [String]
	description: String
	metadata: JSON
	on_behalf_of: String
	transfer_data: TransferDataSpecsInput
	trial_end: Int
	trial_period_days: Int
}

input TaxIdCollectionParamsInput {
	enabled: Boolean!
}

input PostV1CheckoutSessionsSessionExpireInput {
	expand: [String]
}

type PaymentPagesCheckoutSessionListLineItems {
	data: [item]!
	has_more: Boolean!
	object: PaymentPagesCheckoutSessionListLineItems_object!
	url: String!
}

type item {
	amount_discount: Int!
	amount_subtotal: Int!
	amount_tax: Int!
	amount_total: Int!
	currency: String!
	description: String!
	discounts: [line_items_discount_amount]
	id: String!
	object: item_object!
	price: Price
	quantity: Int
	taxes: [line_items_tax_amount]
}

type line_items_discount_amount {
	amount: Int!
	discount: discount!
}

type discount {
	checkout_session: String
	coupon: coupon!
	customer: String
	end: Int
	id: String!
	invoice: String
	invoice_item: String
	object: discount_object!
	promotion_code: String
	start: Int!
	subscription: String
}

type coupon {
	amount_off: Int
	applies_to: coupon_applies_to
	created: Int!
	currency: String
	currency_options: JSON
	duration: coupon_duration!
	duration_in_months: Int
	id: String!
	livemode: Boolean!
	max_redemptions: Int
	metadata: JSON
	name: String
	object: coupon_object!
	percent_off: Int
	redeem_by: Int
	times_redeemed: Int!
	valid: Boolean!
}

type coupon_applies_to {
	products: [String]!
}

enum coupon_duration {
	FOREVER
	ONCE
	REPEATING
}

enum coupon_object {
	COUPON
}

enum discount_object {
	DISCOUNT
}

enum item_object {
	ITEM
}

type Price {
	active: Boolean!
	billing_scheme: Price_billing_scheme!
	created: Int!
	currency: String!
	currency_options: JSON
	custom_unit_amount: CustomUnitAmount
	id: String!
	livemode: Boolean!
	lookup_key: String
	metadata: JSON!
	nickname: String
	object: Price_object!
	product: String!
	recurring: Recurring
	tax_behavior: Price_tax_behavior
	tiers: [price_tier]
	tiers_mode: Price_tiers_mode
	transform_quantity: TransformQuantity
	type: Price_type!
	unit_amount: Int
	unit_amount_decimal: String
}

enum Price_billing_scheme {
	PER_UNIT
	TIERED
}

type CustomUnitAmount {
	maximum: Int
	minimum: Int
	preset: Int
}

enum Price_object {
	PRICE
}

type Recurring {
	aggregate_usage: Recurring_aggregate_usage
	interval: Recurring_interval!
	interval_count: Int!
	usage_type: Recurring_usage_type!
}

enum Recurring_aggregate_usage {
	LAST_DURING_PERIOD
	LAST_EVER
	MAX
	SUM
}

enum Recurring_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum Recurring_usage_type {
	LICENSED
	METERED
}

enum Price_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

type price_tier {
	flat_amount: Int
	flat_amount_decimal: String
	unit_amount: Int
	unit_amount_decimal: String
	up_to: Int
}

enum Price_tiers_mode {
	GRADUATED
	VOLUME
}

type TransformQuantity {
	divide_by: Int!
	round: TransformQuantity_round!
}

enum TransformQuantity_round {
	DOWN
	UP
}

enum Price_type {
	ONE_TIME
	RECURRING
}

type line_items_tax_amount {
	amount: Int!
	rate: tax_rate!
}

type tax_rate {
	active: Boolean!
	country: String
	created: Int!
	description: String
	display_name: String!
	id: String!
	inclusive: Boolean!
	jurisdiction: String
	livemode: Boolean!
	metadata: JSON
	object: tax_rate_object!
	percentage: Int!
	state: String
	tax_type: tax_rate_tax_type
}

enum tax_rate_object {
	TAX_RATE
}

enum tax_rate_tax_type {
	GST
	HST
	JCT
	PST
	QST
	RST
	SALES_TAX
	VAT
}

enum PaymentPagesCheckoutSessionListLineItems_object {
	LIST
}

type CountrySpecList {
	data: [country_spec]!
	has_more: Boolean!
	object: CountrySpecList_object!
	url: String!
}

type country_spec {
	default_currency: String!
	id: String!
	object: country_spec_object!
	supported_bank_account_currencies: JSON!
	supported_payment_currencies: [String]!
	supported_payment_methods: [String]!
	supported_transfer_countries: [String]!
	verification_fields: country_spec_verification_fields!
}

enum country_spec_object {
	COUNTRY_SPEC
}

type country_spec_verification_fields {
	company: country_spec_verification_field_details!
	individual: country_spec_verification_field_details!
}

type country_spec_verification_field_details {
	additional: [String]!
	minimum: [String]!
}

enum CountrySpecList_object {
	LIST
}

type CouponsResourceCouponList {
	data: [coupon]!
	has_more: Boolean!
	object: CouponsResourceCouponList_object!
	url: String!
}

enum CouponsResourceCouponList_object {
	LIST
}

input PostV1CouponsInput {
	amount_off: Int
	applies_to: AppliesToParamsInput
	currency: String
	currency_options: JSON
	duration: PostV1CouponsInput_duration
	duration_in_months: Int
	expand: [String]
	id: String
	max_redemptions: Int
	metadata: JSON
	name: String
	percent_off: Int
	redeem_by: Int
}

input AppliesToParamsInput {
	products: [String]
}

enum PostV1CouponsInput_duration {
	FOREVER
	ONCE
	REPEATING
}

input PostV1CouponsCouponInput {
	currency_options: JSON
	expand: [String]
	metadata: JSON
	name: String
}

type deleted_coupon {
	deleted: Boolean!
	id: String!
	object: deleted_coupon_object!
}

enum deleted_coupon_object {
	COUPON
}

type CreditNotesList {
	data: [credit_note]!
	has_more: Boolean!
	object: CreditNotesList_object!
	url: String!
}

type credit_note {
	amount: Int!
	created: Int!
	currency: String!
	customer: String!
	customer_balance_transaction: String
	discount_amount: Int!
	discount_amounts: [discounts_resource_discount_amount]!
	id: String!
	invoice: String!
	lines: CreditNoteLinesList!
	livemode: Boolean!
	memo: String
	metadata: JSON
	number: String!
	object: credit_note_object!
	out_of_band_amount: Int
	pdf: String!
	reason: credit_note_reason
	refund: String
	status: credit_note_status!
	subtotal: Int!
	subtotal_excluding_tax: Int
	tax_amounts: [credit_note_tax_amount]!
	total: Int!
	total_excluding_tax: Int
	type: credit_note_type!
	voided_at: Int
}

type discounts_resource_discount_amount {
	amount: Int!
	discount: String!
}

type CreditNoteLinesList {
	data: [credit_note_line_item]!
	has_more: Boolean!
	object: CreditNoteLinesList_object!
	url: String!
}

type credit_note_line_item {
	amount: Int!
	amount_excluding_tax: Int
	description: String
	discount_amount: Int!
	discount_amounts: [discounts_resource_discount_amount]!
	id: String!
	invoice_line_item: String
	livemode: Boolean!
	object: credit_note_line_item_object!
	quantity: Int
	tax_amounts: [credit_note_tax_amount]!
	tax_rates: [tax_rate]!
	type: credit_note_line_item_type!
	unit_amount: Int
	unit_amount_decimal: String
	unit_amount_excluding_tax: String
}

enum credit_note_line_item_object {
	CREDIT_NOTE_LINE_ITEM
}

type credit_note_tax_amount {
	amount: Int!
	inclusive: Boolean!
	tax_rate: String!
}

enum credit_note_line_item_type {
	CUSTOM_LINE_ITEM
	INVOICE_LINE_ITEM
}

enum CreditNoteLinesList_object {
	LIST
}

enum credit_note_object {
	CREDIT_NOTE
}

enum credit_note_reason {
	DUPLICATE
	FRAUDULENT
	ORDER_CHANGE
	PRODUCT_UNSATISFACTORY
}

enum credit_note_status {
	ISSUED
	VOID
}

enum credit_note_type {
	POST_PAYMENT
	PRE_PAYMENT
}

enum CreditNotesList_object {
	LIST
}

input PostV1CreditNotesInput {
	amount: Int
	credit_amount: Int
	expand: [String]
	invoice: String!
	lines: [CreditNoteLineItemParamsInput]
	memo: String
	metadata: JSON
	out_of_band_amount: Int
	reason: PostV1CreditNotesInput_reason
	refund: String
	refund_amount: Int
}

input CreditNoteLineItemParamsInput {
	amount: Int
	description: String
	invoice_line_item: String
	quantity: Int
	tax_rates: [String]
	type: CreditNoteLineItemParamsInput_type!
	unit_amount: Int
	unit_amount_decimal: String
}

enum CreditNoteLineItemParamsInput_type {
	CUSTOM_LINE_ITEM
	INVOICE_LINE_ITEM
}

enum PostV1CreditNotesInput_reason {
	DUPLICATE
	FRAUDULENT
	ORDER_CHANGE
	PRODUCT_UNSATISFACTORY
}

input credit_note_line_item_params {
	amount: Int
	description: String
	invoice_line_item: String
	quantity: Int
	tax_rates: [String]
	type: credit_note_line_item_params_type!
	unit_amount: Int
	unit_amount_decimal: String
}

enum credit_note_line_item_params_type {
	CUSTOM_LINE_ITEM
	INVOICE_LINE_ITEM
}

enum GetCreditNotesPreview_reason {
	DUPLICATE
	FRAUDULENT
	ORDER_CHANGE
	PRODUCT_UNSATISFACTORY
}

enum GetCreditNotesPreviewLines_reason {
	DUPLICATE
	FRAUDULENT
	ORDER_CHANGE
	PRODUCT_UNSATISFACTORY
}

input PostV1CreditNotesIdInput {
	expand: [String]
	memo: String
	metadata: JSON
}

input PostV1CreditNotesIdVoidInput {
	expand: [String]
}

type CustomerResourceCustomerList {
	data: [customer]!
	has_more: Boolean!
	object: CustomerResourceCustomerList_object!
	url: String!
}

type customer {
	address: Address
	balance: Int
	cash_balance: CashBalance
	created: Int!
	currency: String
	default_source: String
	delinquent: Boolean
	description: String
	discount: Discount
	email: String
	id: String!
	invoice_credit_balance: JSON
	invoice_prefix: String
	invoice_settings: invoice_setting_customer_setting
	livemode: Boolean!
	metadata: JSON
	name: String
	next_invoice_sequence: Int
	object: customer_object!
	phone: String
	preferred_locales: [String]
	shipping: Shipping
	sources: ApmsSourcesSourceList
	subscriptions: SubscriptionList
	tax: customer_tax
	tax_exempt: customer_tax_exempt
	tax_ids: TaxIDsList
	test_clock: String
}

type CashBalance {
	available: JSON
	customer: String!
	livemode: Boolean!
	object: CashBalance_object!
	settings: customer_balance_customer_balance_settings!
}

enum CashBalance_object {
	CASH_BALANCE
}

type customer_balance_customer_balance_settings {
	reconciliation_mode: customer_balance_customer_balance_settings_reconciliation_mode!
	using_merchant_default: Boolean!
}

enum customer_balance_customer_balance_settings_reconciliation_mode {
	AUTOMATIC
	MANUAL
}

type Discount {
	checkout_session: String
	coupon: coupon!
	customer: String
	end: Int
	id: String!
	invoice: String
	invoice_item: String
	object: Discount_object!
	promotion_code: String
	start: Int!
	subscription: String
}

enum Discount_object {
	DISCOUNT
}

type invoice_setting_customer_setting {
	custom_fields: [invoice_setting_custom_field]
	default_payment_method: String
	footer: String
	rendering_options: InvoiceSettingRenderingOptions
}

type invoice_setting_custom_field {
	name: String!
	value: String!
}

type InvoiceSettingRenderingOptions {
	amount_tax_display: String
}

enum customer_object {
	CUSTOMER
}

type ApmsSourcesSourceList {
	data: [BankAccount]!
	has_more: Boolean!
	object: ApmsSourcesSourceList_object!
	url: String!
}

enum ApmsSourcesSourceList_object {
	LIST
}

type SubscriptionList {
	data: [subscription]!
	has_more: Boolean!
	object: SubscriptionList_object!
	url: String!
}

type subscription {
	application: String
	application_fee_percent: Int
	automatic_tax: subscription_automatic_tax!
	billing_cycle_anchor: Int!
	billing_thresholds: SubscriptionBillingThresholds
	cancel_at: Int
	cancel_at_period_end: Boolean!
	canceled_at: Int
	collection_method: subscription_collection_method!
	created: Int!
	currency: String!
	current_period_end: Int!
	current_period_start: Int!
	customer: String!
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [tax_rate]
	description: String
	discount: Discount
	ended_at: Int
	id: String!
	items: SubscriptionItemList!
	latest_invoice: String
	livemode: Boolean!
	metadata: JSON!
	next_pending_invoice_item_invoice: Int
	object: subscription_object!
	on_behalf_of: String
	pause_collection: SubscriptionsResourcePauseCollection
	payment_settings: SubscriptionsResourcePaymentSettings
	pending_invoice_item_interval: SubscriptionPendingInvoiceItemInterval
	pending_setup_intent: String
	pending_update: SubscriptionsResourcePendingUpdate
	schedule: String
	start_date: Int!
	status: subscription_status!
	test_clock: String
	transfer_data: SubscriptionTransferData
	trial_end: Int
	trial_start: Int
}

type subscription_automatic_tax {
	enabled: Boolean!
}

type SubscriptionBillingThresholds {
	amount_gte: Int
	reset_billing_cycle_anchor: Boolean
}

enum subscription_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

type SubscriptionItemList {
	data: [subscription_item]!
	has_more: Boolean!
	object: SubscriptionItemList_object!
	url: String!
}

type subscription_item {
	billing_thresholds: SubscriptionItemBillingThresholds
	created: Int!
	id: String!
	metadata: JSON!
	object: subscription_item_object!
	price: price!
	quantity: Int
	subscription: String!
	tax_rates: [tax_rate]
}

type SubscriptionItemBillingThresholds {
	usage_gte: Int
}

enum subscription_item_object {
	SUBSCRIPTION_ITEM
}

type price {
	active: Boolean!
	billing_scheme: price_billing_scheme!
	created: Int!
	currency: String!
	currency_options: JSON
	custom_unit_amount: CustomUnitAmount
	id: String!
	livemode: Boolean!
	lookup_key: String
	metadata: JSON!
	nickname: String
	object: price_object!
	product: String!
	recurring: Recurring
	tax_behavior: price_tax_behavior
	tiers: [price_tier]
	tiers_mode: price_tiers_mode
	transform_quantity: TransformQuantity
	type: price_type!
	unit_amount: Int
	unit_amount_decimal: String
}

enum price_billing_scheme {
	PER_UNIT
	TIERED
}

enum price_object {
	PRICE
}

enum price_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum price_tiers_mode {
	GRADUATED
	VOLUME
}

enum price_type {
	ONE_TIME
	RECURRING
}

enum SubscriptionItemList_object {
	LIST
}

enum subscription_object {
	SUBSCRIPTION
}

type SubscriptionsResourcePauseCollection {
	behavior: SubscriptionsResourcePauseCollection_behavior!
	resumes_at: Int
}

enum SubscriptionsResourcePauseCollection_behavior {
	KEEP_AS_DRAFT
	MARK_UNCOLLECTIBLE
	VOID
}

type SubscriptionsResourcePaymentSettings {
	payment_method_options: SubscriptionsResourcePaymentMethodOptions
	payment_method_types: [SubscriptionsResourcePaymentSettings_payment_method_types]
	save_default_payment_method: SubscriptionsResourcePaymentSettings_save_default_payment_method
}

type SubscriptionsResourcePaymentMethodOptions {
	acss_debit: InvoicePaymentMethodOptionsAcssDebit
	bancontact: InvoicePaymentMethodOptionsBancontact
	card: SubscriptionPaymentMethodOptionsCard
	customer_balance: InvoicePaymentMethodOptionsCustomerBalance
	us_bank_account: InvoicePaymentMethodOptionsUsBankAccount
}

type InvoicePaymentMethodOptionsAcssDebit {
	mandate_options: invoice_payment_method_options_acss_debit_mandate_options
	verification_method: InvoicePaymentMethodOptionsAcssDebit_verification_method
}

type invoice_payment_method_options_acss_debit_mandate_options {
	transaction_type: invoice_payment_method_options_acss_debit_mandate_options_transaction_type
}

enum invoice_payment_method_options_acss_debit_mandate_options_transaction_type {
	BUSINESS
	PERSONAL
}

enum InvoicePaymentMethodOptionsAcssDebit_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

type InvoicePaymentMethodOptionsBancontact {
	preferred_language: InvoicePaymentMethodOptionsBancontact_preferred_language!
}

enum InvoicePaymentMethodOptionsBancontact_preferred_language {
	DE
	EN
	FR
	NL
}

type SubscriptionPaymentMethodOptionsCard {
	mandate_options: invoice_mandate_options_card
	network: SubscriptionPaymentMethodOptionsCard_network
	request_three_d_secure: SubscriptionPaymentMethodOptionsCard_request_three_d_secure
}

type invoice_mandate_options_card {
	amount: Int
	amount_type: invoice_mandate_options_card_amount_type
	description: String
}

enum invoice_mandate_options_card_amount_type {
	FIXED
	MAXIMUM
}

enum SubscriptionPaymentMethodOptionsCard_network {
	AMEX
	CARTES_BANCAIRES
	DINERS
	DISCOVER
	INTERAC
	JCB
	MASTERCARD
	UNIONPAY
	UNKNOWN
	VISA
}

enum SubscriptionPaymentMethodOptionsCard_request_three_d_secure {
	ANY
	AUTOMATIC
}

type InvoicePaymentMethodOptionsCustomerBalance {
	bank_transfer: invoice_payment_method_options_customer_balance_bank_transfer
	funding_type: InvoicePaymentMethodOptionsCustomerBalance_funding_type
}

type invoice_payment_method_options_customer_balance_bank_transfer {
	eu_bank_transfer: invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer
	type: String
}

type invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer {
	country: invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer_country!
}

enum invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer_country {
	DE
	ES
	FR
	IE
	NL
}

enum InvoicePaymentMethodOptionsCustomerBalance_funding_type {
	BANK_TRANSFER
}

type InvoicePaymentMethodOptionsUsBankAccount {
	financial_connections: invoice_payment_method_options_us_bank_account_linked_account_options
	verification_method: InvoicePaymentMethodOptionsUsBankAccount_verification_method
}

type invoice_payment_method_options_us_bank_account_linked_account_options {
	permissions: [invoice_payment_method_options_us_bank_account_linked_account_options_permissions]
}

enum invoice_payment_method_options_us_bank_account_linked_account_options_permissions {
	BALANCES
	PAYMENT_METHOD
	TRANSACTIONS
}

enum InvoicePaymentMethodOptionsUsBankAccount_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

enum SubscriptionsResourcePaymentSettings_payment_method_types {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ACSS_DEBIT
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BOLETO
	CARD
	CUSTOMER_BALANCE
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KONBINI
	LINK
	PAYNOW
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

enum SubscriptionsResourcePaymentSettings_save_default_payment_method {
	OFF
	ON_SUBSCRIPTION
}

type SubscriptionPendingInvoiceItemInterval {
	interval: SubscriptionPendingInvoiceItemInterval_interval!
	interval_count: Int!
}

enum SubscriptionPendingInvoiceItemInterval_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

type SubscriptionsResourcePendingUpdate {
	billing_cycle_anchor: Int
	expires_at: Int!
	subscription_items: [subscription_item]
	trial_end: Int
	trial_from_plan: Boolean
}

enum subscription_status {
	ACTIVE
	CANCELED
	INCOMPLETE
	INCOMPLETE_EXPIRED
	PAST_DUE
	TRIALING
	UNPAID
}

type SubscriptionTransferData {
	amount_percent: Int
	destination: String!
}

enum SubscriptionList_object {
	LIST
}

type customer_tax {
	automatic_tax: customer_tax_automatic_tax!
	ip_address: String
	location: CustomerTaxLocation
}

enum customer_tax_automatic_tax {
	FAILED
	NOT_COLLECTING
	SUPPORTED
	UNRECOGNIZED_LOCATION
}

type CustomerTaxLocation {
	country: String!
	source: CustomerTaxLocation_source!
	state: String
}

enum CustomerTaxLocation_source {
	BILLING_ADDRESS
	IP_ADDRESS
	PAYMENT_METHOD
	SHIPPING_DESTINATION
}

enum customer_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

type TaxIDsList {
	data: [tax_id]!
	has_more: Boolean!
	object: TaxIDsList_object!
	url: String!
}

type tax_id {
	country: String
	created: Int!
	customer: String
	id: String!
	livemode: Boolean!
	object: tax_id_object!
	type: tax_id_type!
	value: String!
	verification: TaxIdVerification
}

enum tax_id_object {
	TAX_ID
}

enum tax_id_type {
	AE_TRN
	AU_ABN
	AU_ARN
	BG_UIC
	BR_CNPJ
	BR_CPF
	CA_BN
	CA_GST_HST
	CA_PST_BC
	CA_PST_MB
	CA_PST_SK
	CA_QST
	CH_VAT
	CL_TIN
	EG_TIN
	ES_CIF
	EU_OSS_VAT
	EU_VAT
	GB_VAT
	GE_VAT
	HK_BR
	HU_TIN
	ID_NPWP
	IL_VAT
	IN_GST
	IS_VAT
	JP_CN
	JP_RN
	JP_TRN
	KE_PIN
	KR_BRN
	LI_UID
	MX_RFC
	MY_FRP
	MY_ITN
	MY_SST
	NO_VAT
	NZ_GST
	PH_TIN
	RU_INN
	RU_KPP
	SA_VAT
	SG_GST
	SG_UEN
	SI_TIN
	TH_VAT
	TR_TIN
	TW_VAT
	UA_VAT
	UNKNOWN
	US_EIN
	ZA_VAT
}

type TaxIdVerification {
	status: TaxIdVerification_status!
	verified_address: String
	verified_name: String
}

enum TaxIdVerification_status {
	PENDING
	UNAVAILABLE
	UNVERIFIED
	VERIFIED
}

enum TaxIDsList_object {
	LIST
}

enum CustomerResourceCustomerList_object {
	LIST
}

input PostV1CustomersInput {
	address: OptionalFieldsAddressInput
	balance: Int
	cash_balance: CashBalanceParamInput
	coupon: String
	description: String
	email: String
	expand: [String]
	invoice_prefix: String
	invoice_settings: CustomerParamInput
	metadata: JSON
	name: String
	next_invoice_sequence: Int
	payment_method: String
	phone: String
	preferred_locales: [String]
	promotion_code: String
	shipping: CustomerShippingInput
	source: String
	tax: TaxParamInput
	tax_exempt: PostV1CustomersInput_tax_exempt
	tax_id_data: [DataParamsInput]
	test_clock: String
}

input CashBalanceParamInput {
	settings: BalanceSettingsParamInput
}

input BalanceSettingsParamInput {
	reconciliation_mode: BalanceSettingsParamInput_reconciliation_mode
}

enum BalanceSettingsParamInput_reconciliation_mode {
	AUTOMATIC
	MANUAL
	MERCHANT_DEFAULT
}

input CustomerParamInput {
	custom_fields: [CustomFieldParamsInput]
	default_payment_method: String
	footer: String
	rendering_options: RenderingOptionsParamInput
}

input CustomerShippingInput {
	address: OptionalFieldsAddressInput!
	name: String!
	phone: String
}

input TaxParamInput {
	ip_address: String
}

enum PostV1CustomersInput_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

input DataParamsInput {
	type: DataParamsInput_type!
	value: String!
}

enum DataParamsInput_type {
	AE_TRN
	AU_ABN
	AU_ARN
	BG_UIC
	BR_CNPJ
	BR_CPF
	CA_BN
	CA_GST_HST
	CA_PST_BC
	CA_PST_MB
	CA_PST_SK
	CA_QST
	CH_VAT
	CL_TIN
	EG_TIN
	ES_CIF
	EU_OSS_VAT
	EU_VAT
	GB_VAT
	GE_VAT
	HK_BR
	HU_TIN
	ID_NPWP
	IL_VAT
	IN_GST
	IS_VAT
	JP_CN
	JP_RN
	JP_TRN
	KE_PIN
	KR_BRN
	LI_UID
	MX_RFC
	MY_FRP
	MY_ITN
	MY_SST
	NO_VAT
	NZ_GST
	PH_TIN
	RU_INN
	RU_KPP
	SA_VAT
	SG_GST
	SG_UEN
	SI_TIN
	TH_VAT
	TR_TIN
	TW_VAT
	UA_VAT
	US_EIN
	ZA_VAT
}

type Customer {
	address: Address
	balance: Int
	cash_balance: CashBalance
	created: Int!
	currency: String
	default_source: String
	delinquent: Boolean
	description: String
	discount: Discount
	email: String
	id: String!
	invoice_credit_balance: JSON
	invoice_prefix: String
	invoice_settings: invoice_setting_customer_setting
	livemode: Boolean!
	metadata: JSON
	name: String
	next_invoice_sequence: Int
	object: Customer_object!
	phone: String
	preferred_locales: [String]
	shipping: Shipping
	sources: ApmsSourcesSourceList
	subscriptions: SubscriptionList
	tax: customer_tax
	tax_exempt: Customer_tax_exempt
	tax_ids: TaxIDsList
	test_clock: String
}

enum Customer_object {
	CUSTOMER
}

enum Customer_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

input PostV1CustomersCustomerInput {
	address: OptionalFieldsAddressInput
	balance: Int
	bank_account: CustomerPaymentSourceBankAccountInput
	card: CustomerPaymentSourceCardInput
	cash_balance: CashBalanceParamInput
	coupon: String
	default_alipay_account: String
	default_bank_account: String
	default_card: String
	default_source: String
	description: String
	email: String
	expand: [String]
	invoice_prefix: String
	invoice_settings: CustomerParamInput
	metadata: JSON
	name: String
	next_invoice_sequence: Int
	phone: String
	preferred_locales: [String]
	promotion_code: String
	shipping: CustomerShippingInput
	source: String
	tax: TaxParamInput
	tax_exempt: PostV1CustomersCustomerInput_tax_exempt
}

input CustomerPaymentSourceBankAccountInput {
	account_holder_name: String
	account_holder_type: CustomerPaymentSourceBankAccountInput_account_holder_type
	account_number: String!
	country: String!
	currency: String
	object: CustomerPaymentSourceBankAccountInput_object
	routing_number: String
}

enum CustomerPaymentSourceBankAccountInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum CustomerPaymentSourceBankAccountInput_object {
	BANK_ACCOUNT
}

enum PostV1CustomersCustomerInput_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

type deleted_customer {
	deleted: Boolean!
	id: String!
	object: deleted_customer_object!
}

enum deleted_customer_object {
	CUSTOMER
}

type CustomerBalanceTransactionList {
	data: [customer_balance_transaction]!
	has_more: Boolean!
	object: CustomerBalanceTransactionList_object!
	url: String!
}

type customer_balance_transaction {
	amount: Int!
	created: Int!
	credit_note: String
	currency: String!
	customer: String!
	description: String
	ending_balance: Int!
	id: String!
	invoice: String
	livemode: Boolean!
	metadata: JSON
	object: customer_balance_transaction_object!
	type: customer_balance_transaction_type!
}

enum customer_balance_transaction_object {
	CUSTOMER_BALANCE_TRANSACTION
}

enum customer_balance_transaction_type {
	ADJUSTMENT
	APPLIED_TO_INVOICE
	CREDIT_NOTE
	INITIAL
	INVOICE_OVERPAID
	INVOICE_TOO_LARGE
	INVOICE_TOO_SMALL
	MIGRATION
	UNAPPLIED_FROM_INVOICE
	UNSPENT_RECEIVER_CREDIT
}

enum CustomerBalanceTransactionList_object {
	LIST
}

input PostV1CustomersCustomerBalanceTransactionsInput {
	amount: Int!
	currency: String!
	description: String
	expand: [String]
	metadata: JSON
}

input PostV1CustomersCustomerBalanceTransactionsTransactionInput {
	description: String
	expand: [String]
	metadata: JSON
}

type BankAccountList {
	data: [bank_account]!
	has_more: Boolean!
	object: BankAccountList_object!
	url: String!
}

type bank_account {
	account: String
	account_holder_name: String
	account_holder_type: String
	account_type: String
	available_payout_methods: [bank_account_available_payout_methods]
	bank_name: String
	country: String!
	currency: String!
	customer: String
	default_for_currency: Boolean
	fingerprint: String
	id: String!
	last4: String!
	metadata: JSON
	object: bank_account_object!
	routing_number: String
	status: String!
}

enum bank_account_available_payout_methods {
	INSTANT
	STANDARD
}

enum bank_account_object {
	BANK_ACCOUNT
}

enum BankAccountList_object {
	LIST
}

type payment_source {
	business_profile: AccountBusinessProfile
	business_type: payment_source_business_type
	capabilities: account_capabilities
	charges_enabled: Boolean
	company: legal_entity_company
	controller: account_unification_account_controller
	country: String
	created: Int
	default_currency: String
	details_submitted: Boolean
	email: String
	external_accounts: ExternalAccountList
	future_requirements: account_future_requirements
	id: String!
	individual: person
	metadata: JSON
	object: payment_source_object!
	payouts_enabled: Boolean
	requirements: account_requirements
	settings: AccountSettings
	tos_acceptance: account_tos_acceptance
	type: payment_source_type
}

enum payment_source_business_type {
	COMPANY
	GOVERNMENT_ENTITY
	INDIVIDUAL
	NON_PROFIT
}

enum payment_source_object {
	ACCOUNT
}

enum payment_source_type {
	CUSTOM
	EXPRESS
	STANDARD
}

input PostV1CustomersCustomerBankAccountsInput {
	alipay_account: String
	bank_account: CustomerPaymentSourceBankAccountInput
	card: CustomerPaymentSourceCardInput
	expand: [String]
	metadata: JSON
	source: String
}

type Card {
	account: String
	address_city: String
	address_country: String
	address_line1: String
	address_line1_check: String
	address_line2: String
	address_state: String
	address_zip: String
	address_zip_check: String
	available_payout_methods: [Card_available_payout_methods]
	brand: String!
	country: String
	currency: String
	customer: String
	cvc_check: String
	default_for_currency: Boolean
	dynamic_last4: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String!
	id: String!
	last4: String!
	metadata: JSON
	name: String
	object: Card_object!
	status: String
	tokenization_method: String
}

enum Card_available_payout_methods {
	INSTANT
	STANDARD
}

enum Card_object {
	CARD
}

input PostV1CustomersCustomerBankAccountsIdInput {
	account_holder_name: String
	account_holder_type: PostV1CustomersCustomerBankAccountsIdInput_account_holder_type
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	exp_month: String
	exp_year: String
	expand: [String]
	metadata: JSON
	name: String
	owner: OwnerInput
}

enum PostV1CustomersCustomerBankAccountsIdInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

input OwnerInput {
	address: SourceAddressInput
	email: String
	name: String
	phone: String
}

input SourceAddressInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

input DeleteV1CustomersCustomerBankAccountsIdInput {
	expand: [String]
}

input PostV1CustomersCustomerBankAccountsIdVerifyInput {
	amounts: [Int]
	expand: [String]
}

type CardList {
	data: [card]!
	has_more: Boolean!
	object: CardList_object!
	url: String!
}

type card {
	account: String
	address_city: String
	address_country: String
	address_line1: String
	address_line1_check: String
	address_line2: String
	address_state: String
	address_zip: String
	address_zip_check: String
	available_payout_methods: [card_available_payout_methods]
	brand: String!
	country: String
	currency: String
	customer: String
	cvc_check: String
	default_for_currency: Boolean
	dynamic_last4: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String!
	id: String!
	last4: String!
	metadata: JSON
	name: String
	object: card_object!
	status: String
	tokenization_method: String
}

enum card_available_payout_methods {
	INSTANT
	STANDARD
}

enum card_object {
	CARD
}

enum CardList_object {
	LIST
}

input PostV1CustomersCustomerCardsInput {
	alipay_account: String
	bank_account: CustomerPaymentSourceBankAccountInput
	card: CustomerPaymentSourceCardInput
	expand: [String]
	metadata: JSON
	source: String
}

input PostV1CustomersCustomerCardsIdInput {
	account_holder_name: String
	account_holder_type: PostV1CustomersCustomerCardsIdInput_account_holder_type
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	exp_month: String
	exp_year: String
	expand: [String]
	metadata: JSON
	name: String
	owner: OwnerInput
}

enum PostV1CustomersCustomerCardsIdInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

input DeleteV1CustomersCustomerCardsIdInput {
	expand: [String]
}

type cash_balance {
	available: JSON
	customer: String!
	livemode: Boolean!
	object: cash_balance_object!
	settings: customer_balance_customer_balance_settings!
}

enum cash_balance_object {
	CASH_BALANCE
}

input PostV1CustomersCustomerCashBalanceInput {
	expand: [String]
	settings: BalanceSettingsParamInput
}

type CustomerCashBalanceTransactionList {
	data: [customer_cash_balance_transaction]!
	has_more: Boolean!
	object: CustomerCashBalanceTransactionList_object!
	url: String!
}

type customer_cash_balance_transaction {
	applied_to_payment: customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction
	created: Int!
	currency: String!
	customer: String!
	ending_balance: Int!
	funded: customer_balance_resource_cash_balance_transaction_resource_funded_transaction
	id: String!
	livemode: Boolean!
	net_amount: Int!
	object: customer_cash_balance_transaction_object!
	refunded_from_payment: customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction
	type: customer_cash_balance_transaction_type!
	unapplied_from_payment: customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction
}

type customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction {
	payment_intent: String!
}

type customer_balance_resource_cash_balance_transaction_resource_funded_transaction {
	bank_transfer: customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer!
}

type customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer {
	eu_bank_transfer: customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer
	reference: String
	type: customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_type!
}

type customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer {
	bic: String
	iban_last4: String
	sender_name: String
}

enum customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_type {
	EU_BANK_TRANSFER
	GB_BANK_TRANSFER
	JP_BANK_TRANSFER
	MX_BANK_TRANSFER
}

enum customer_cash_balance_transaction_object {
	CUSTOMER_CASH_BALANCE_TRANSACTION
}

type customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction {
	refund: String!
}

enum customer_cash_balance_transaction_type {
	APPLIED_TO_PAYMENT
	FUNDED
	REFUNDED_FROM_PAYMENT
	RETURN_CANCELED
	RETURN_INITIATED
	UNAPPLIED_FROM_PAYMENT
}

type customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction {
	payment_intent: String!
}

enum CustomerCashBalanceTransactionList_object {
	LIST
}

type deleted_discount {
	checkout_session: String
	coupon: coupon!
	customer: String
	deleted: Boolean!
	id: String!
	invoice: String
	invoice_item: String
	object: deleted_discount_object!
	promotion_code: String
	start: Int!
	subscription: String
}

enum deleted_discount_object {
	DISCOUNT
}

type funding_instructions {
	bank_transfer: funding_instructions_bank_transfer!
	currency: String!
	funding_type: funding_instructions_funding_type!
	livemode: Boolean!
	object: funding_instructions_object!
}

type funding_instructions_bank_transfer {
	country: String!
	financial_addresses: [funding_instructions_bank_transfer_financial_address]!
	type: funding_instructions_bank_transfer_type!
}

type funding_instructions_bank_transfer_financial_address {
	iban: funding_instructions_bank_transfer_iban_record
	sort_code: funding_instructions_bank_transfer_sort_code_record
	spei: funding_instructions_bank_transfer_spei_record
	supported_networks: [funding_instructions_bank_transfer_financial_address_supported_networks]
	type: funding_instructions_bank_transfer_financial_address_type!
	zengin: funding_instructions_bank_transfer_zengin_record
}

type funding_instructions_bank_transfer_iban_record {
	account_holder_name: String!
	bic: String!
	country: String!
	iban: String!
}

type funding_instructions_bank_transfer_sort_code_record {
	account_holder_name: String!
	account_number: String!
	sort_code: String!
}

type funding_instructions_bank_transfer_spei_record {
	bank_code: String!
	bank_name: String!
	clabe: String!
}

enum funding_instructions_bank_transfer_financial_address_supported_networks {
	BACS
	FPS
	SEPA
	SPEI
	ZENGIN
}

enum funding_instructions_bank_transfer_financial_address_type {
	IBAN
	SORT_CODE
	SPEI
	ZENGIN
}

type funding_instructions_bank_transfer_zengin_record {
	account_holder_name: String
	account_number: String
	account_type: String
	bank_code: String
	bank_name: String
	branch_code: String
	branch_name: String
}

enum funding_instructions_bank_transfer_type {
	EU_BANK_TRANSFER
	JP_BANK_TRANSFER
}

enum funding_instructions_funding_type {
	BANK_TRANSFER
}

enum funding_instructions_object {
	FUNDING_INSTRUCTIONS
}

input PostV1CustomersCustomerFundingInstructionsInput {
	bank_transfer: BankTransferParamsInput!
	currency: String!
	expand: [String]
	funding_type: PostV1CustomersCustomerFundingInstructionsInput_funding_type!
}

input BankTransferParamsInput {
	eu_bank_transfer: EuBankAccountParamsInput
	requested_address_types: [BankTransferParamsInput_requested_address_types]
	type: BankTransferParamsInput_type!
}

input EuBankAccountParamsInput {
	country: String!
}

enum BankTransferParamsInput_requested_address_types {
	IBAN
	SORT_CODE
	SPEI
	ZENGIN
}

enum BankTransferParamsInput_type {
	EU_BANK_TRANSFER
	GB_BANK_TRANSFER
	JP_BANK_TRANSFER
	MX_BANK_TRANSFER
}

enum PostV1CustomersCustomerFundingInstructionsInput_funding_type {
	BANK_TRANSFER
}

type CustomerPaymentMethodResourceList {
	data: [payment_method]!
	has_more: Boolean!
	object: CustomerPaymentMethodResourceList_object!
	url: String!
}

type payment_method {
	acss_debit: payment_method_acss_debit
	affirm: payment_method_affirm
	afterpay_clearpay: payment_method_afterpay_clearpay
	alipay: payment_flows_private_payment_methods_alipay
	au_becs_debit: payment_method_au_becs_debit
	bacs_debit: payment_method_bacs_debit
	bancontact: payment_method_bancontact
	billing_details: billing_details!
	blik: payment_method_blik
	boleto: payment_method_boleto
	card: payment_method_card
	card_present: payment_method_card_present
	created: Int!
	customer: String
	customer_balance: payment_method_customer_balance
	eps: payment_method_eps
	fpx: payment_method_fpx
	giropay: payment_method_giropay
	grabpay: payment_method_grabpay
	id: String!
	ideal: payment_method_ideal
	interac_present: payment_method_interac_present
	klarna: payment_method_klarna
	konbini: payment_method_konbini
	link: payment_method_link
	livemode: Boolean!
	metadata: JSON
	object: payment_method_object!
	oxxo: payment_method_oxxo
	p24: payment_method_p24
	paynow: payment_method_paynow
	pix: payment_method_pix
	promptpay: payment_method_promptpay
	radar_options: radar_radar_options
	sepa_debit: payment_method_sepa_debit
	sofort: payment_method_sofort
	type: payment_method_type!
	us_bank_account: payment_method_us_bank_account
	wechat_pay: payment_method_wechat_pay
}

type payment_method_acss_debit {
	bank_name: String
	fingerprint: String
	institution_number: String
	last4: String
	transit_number: String
}

type payment_method_affirm

type payment_method_afterpay_clearpay

type payment_flows_private_payment_methods_alipay

type payment_method_au_becs_debit {
	bsb_number: String
	fingerprint: String
	last4: String
}

type payment_method_bacs_debit {
	fingerprint: String
	last4: String
	sort_code: String
}

type payment_method_bancontact

type payment_method_blik

type payment_method_boleto {
	tax_id: String!
}

type payment_method_card {
	brand: String!
	checks: PaymentMethodCardChecks
	country: String
	exp_month: Int!
	exp_year: Int!
	fingerprint: String
	funding: String!
	generated_from: PaymentMethodCardGeneratedCard
	last4: String!
	networks: Networks
	three_d_secure_usage: ThreeDSecureUsage
	wallet: PaymentMethodCardWallet
}

type PaymentMethodCardChecks {
	address_line1_check: String
	address_postal_code_check: String
	cvc_check: String
}

type PaymentMethodCardGeneratedCard {
	charge: String
	payment_method_details: CardGeneratedFromPaymentMethodDetails
	setup_attempt: String
}

type CardGeneratedFromPaymentMethodDetails {
	card_present: payment_method_details_card_present
	type: String!
}

type Networks {
	available: [String]!
	preferred: String
}

type ThreeDSecureUsage {
	supported: Boolean!
}

type PaymentMethodCardWallet {
	amex_express_checkout: payment_method_card_wallet_amex_express_checkout
	apple_pay: payment_method_card_wallet_apple_pay
	dynamic_last4: String
	google_pay: payment_method_card_wallet_google_pay
	masterpass: payment_method_card_wallet_masterpass
	samsung_pay: payment_method_card_wallet_samsung_pay
	type: PaymentMethodCardWallet_type!
	visa_checkout: payment_method_card_wallet_visa_checkout
}

type payment_method_card_wallet_amex_express_checkout

type payment_method_card_wallet_apple_pay

type payment_method_card_wallet_google_pay

type payment_method_card_wallet_masterpass {
	billing_address: Address
	email: String
	name: String
	shipping_address: Address
}

type payment_method_card_wallet_samsung_pay

enum PaymentMethodCardWallet_type {
	AMEX_EXPRESS_CHECKOUT
	APPLE_PAY
	GOOGLE_PAY
	MASTERPASS
	SAMSUNG_PAY
	VISA_CHECKOUT
}

type payment_method_card_wallet_visa_checkout {
	billing_address: Address
	email: String
	name: String
	shipping_address: Address
}

type payment_method_card_present

type payment_method_customer_balance

type payment_method_eps {
	bank: payment_method_eps_bank
}

enum payment_method_eps_bank {
	ARZTE_UND_APOTHEKER_BANK
	AUSTRIAN_ANADI_BANK_AG
	BANK_AUSTRIA
	BANKHAUS_CARL_SPANGLER
	BANKHAUS_SCHELHAMMER_UND_SCHATTERA_AG
	BAWAG_PSK_AG
	BKS_BANK_AG
	BRULL_KALLMUS_BANK_AG
	BTV_VIER_LANDER_BANK
	CAPITAL_BANK_GRAWE_GRUPPE_AG
	DEUTSCHE_BANK_AG
	DOLOMITENBANK
	EASYBANK_AG
	ERSTE_BANK_UND_SPARKASSEN
	HYPO_ALPEADRIABANK_INTERNATIONAL_AG
	HYPO_BANK_BURGENLAND_AKTIENGESELLSCHAFT
	HYPO_NOE_LB_FUR_NIEDEROSTERREICH_U_WIEN
	HYPO_OBEROSTERREICH_SALZBURG_STEIERMARK
	HYPO_TIROL_BANK_AG
	HYPO_VORARLBERG_BANK_AG
	MARCHFELDER_BANK
	OBERBANK_AG
	RAIFFEISEN_BANKENGRUPPE_OSTERREICH
	SCHOELLERBANK_AG
	SPARDA_BANK_WIEN
	VOLKSBANK_GRUPPE
	VOLKSKREDITBANK_AG
	VR_BANK_BRAUNAU
}

type payment_method_fpx {
	bank: payment_method_fpx_bank!
}

enum payment_method_fpx_bank {
	AFFIN_BANK
	AGROBANK
	ALLIANCE_BANK
	AMBANK
	BANK_ISLAM
	BANK_MUAMALAT
	BANK_OF_CHINA
	BANK_RAKYAT
	BSN
	CIMB
	DEUTSCHE_BANK
	HONG_LEONG_BANK
	HSBC
	KFH
	MAYBANK2E
	MAYBANK2U
	OCBC
	PB_ENTERPRISE
	PUBLIC_BANK
	RHB
	STANDARD_CHARTERED
	UOB
}

type payment_method_giropay

type payment_method_grabpay

type payment_method_ideal {
	bank: payment_method_ideal_bank
	bic: payment_method_ideal_bic
}

enum payment_method_ideal_bank {
	ABN_AMRO
	ASN_BANK
	BUNQ
	HANDELSBANKEN
	ING
	KNAB
	MONEYOU
	RABOBANK
	REGIOBANK
	REVOLUT
	SNS_BANK
	TRIODOS_BANK
	VAN_LANSCHOT
}

enum payment_method_ideal_bic {
	ABNANL2A
	ASNBNL21
	BUNQNL2A
	FVLBNL22
	HANDNL2A
	INGBNL2A
	KNABNL2H
	MOYONL21
	RABONL2U
	RBRBNL21
	REVOLT21
	SNSBNL2A
	TRIONL2U
}

type payment_method_interac_present

type payment_method_klarna {
	dob: PaymentFlowsPrivatePaymentMethodsKlarnaDob
}

type PaymentFlowsPrivatePaymentMethodsKlarnaDob {
	day: Int
	month: Int
	year: Int
}

type payment_method_konbini

type payment_method_link {
	email: String
	persistent_token: String
}

enum payment_method_object {
	PAYMENT_METHOD
}

type payment_method_oxxo

type payment_method_p24 {
	bank: payment_method_p24_bank
}

enum payment_method_p24_bank {
	ALIOR_BANK
	BANK_MILLENNIUM
	BANK_NOWY_BFG_SA
	BANK_PEKAO_SA
	BANKI_SPBDZIELCZE
	BLIK
	BNP_PARIBAS
	BOZ
	CITI_HANDLOWY
	CREDIT_AGRICOLE
	ENVELOBANK
	ETRANSFER_POCZTOWY24
	GETIN_BANK
	IDEABANK
	ING
	INTELIGO
	MBANK_MTRANSFER
	NEST_PRZELEW
	NOBLE_PAY
	PBAC_Z_IPKO
	PLUS_BANK
	SANTANDER_PRZELEW24
	TMOBILE_USBUGI_BANKOWE
	TOYOTA_BANK
	VOLKSWAGEN_BANK
}

type payment_method_paynow

type payment_method_pix

type payment_method_promptpay

type payment_method_sepa_debit {
	bank_code: String
	branch_code: String
	country: String
	fingerprint: String
	generated_from: SepaDebitGeneratedFrom
	last4: String
}

type SepaDebitGeneratedFrom {
	charge: String
	setup_attempt: String
}

type payment_method_sofort {
	country: String
}

enum payment_method_type {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	CARD_PRESENT
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	INTERAC_PRESENT
	KLARNA
	KONBINI
	LINK
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

type payment_method_us_bank_account {
	account_holder_type: payment_method_us_bank_account_account_holder_type
	account_type: payment_method_us_bank_account_account_type
	bank_name: String
	financial_connections_account: String
	fingerprint: String
	last4: String
	networks: UsBankAccountNetworks
	routing_number: String
}

enum payment_method_us_bank_account_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum payment_method_us_bank_account_account_type {
	CHECKING
	SAVINGS
}

type UsBankAccountNetworks {
	preferred: String
	supported: [UsBankAccountNetworks_supported]!
}

enum UsBankAccountNetworks_supported {
	ACH
	US_DOMESTIC_WIRE
}

type payment_method_wechat_pay

enum CustomerPaymentMethodResourceList_object {
	LIST
}

enum GetCustomersCustomerPaymentMethods_type {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	LINK
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

input PostV1CustomersCustomerSourcesInput {
	alipay_account: String
	bank_account: CustomerPaymentSourceBankAccountInput
	card: CustomerPaymentSourceCardInput
	expand: [String]
	metadata: JSON
	source: String
}

input PostV1CustomersCustomerSourcesIdInput {
	account_holder_name: String
	account_holder_type: PostV1CustomersCustomerSourcesIdInput_account_holder_type
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	exp_month: String
	exp_year: String
	expand: [String]
	metadata: JSON
	name: String
	owner: OwnerInput
}

enum PostV1CustomersCustomerSourcesIdInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

input DeleteV1CustomersCustomerSourcesIdInput {
	expand: [String]
}

input PostV1CustomersCustomerSourcesIdVerifyInput {
	amounts: [Int]
	expand: [String]
}

input PostV1CustomersCustomerSubscriptionsInput {
	add_invoice_items: [SubscriptionCreateAddInvoiceItemEntryInput]
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	backdate_start_date: Int
	billing_cycle_anchor: Int
	billing_thresholds: BillingThresholdsParamInput
	cancel_at: Int
	cancel_at_period_end: Boolean
	collection_method: PostV1CustomersCustomerSubscriptionsInput_collection_method
	coupon: String
	currency: String
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	expand: [String]
	items: [SubscriptionItemCreateParamsInput]
	metadata: JSON
	off_session: Boolean
	payment_behavior: PostV1CustomersCustomerSubscriptionsInput_payment_behavior
	payment_settings: PaymentSettingsInput
	pending_invoice_item_interval: PendingInvoiceItemIntervalParamsInput
	promotion_code: String
	proration_behavior: PostV1CustomersCustomerSubscriptionsInput_proration_behavior
	transfer_data: TransferDataSpecsInput
	trial_end: PostV1CustomersCustomerSubscriptionsInput_trial_end
	trial_from_plan: Boolean
	trial_period_days: Int
}

input SubscriptionCreateAddInvoiceItemEntryInput {
	price: String
	price_data: OneTimePriceDataWithNegativeAmountsInput
	quantity: Int
	tax_rates: [String]
}

input OneTimePriceDataWithNegativeAmountsInput {
	currency: String!
	product: String!
	tax_behavior: OneTimePriceDataWithNegativeAmountsInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

enum OneTimePriceDataWithNegativeAmountsInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

input AutomaticTaxConfigInput {
	enabled: Boolean!
}

input BillingThresholdsParamInput {
	amount_gte: Int
	reset_billing_cycle_anchor: Boolean
}

enum PostV1CustomersCustomerSubscriptionsInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input SubscriptionItemCreateParamsInput {
	billing_thresholds: ItemBillingThresholdsParamInput
	metadata: JSON
	price: String
	price_data: RecurringPriceDataInput
	quantity: Int
	tax_rates: [String]
}

input ItemBillingThresholdsParamInput {
	usage_gte: Int!
}

input RecurringPriceDataInput {
	currency: String!
	product: String!
	recurring: RecurringAdhocInput!
	tax_behavior: RecurringPriceDataInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

enum RecurringPriceDataInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum PostV1CustomersCustomerSubscriptionsInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

input PaymentSettingsInput {
	payment_method_options: PaymentMethodOptionsInput
	payment_method_types: [PaymentSettingsInput_payment_method_types]
	save_default_payment_method: PaymentSettingsInput_save_default_payment_method
}

input PaymentMethodOptionsInput {
	acss_debit: InvoicePaymentMethodOptionsParamInput
	bancontact: InvoicePaymentMethodOptionsParamInput
	card: SubscriptionPaymentMethodOptionsParamInput
	customer_balance: InvoicePaymentMethodOptionsParamInput
	us_bank_account: InvoicePaymentMethodOptionsParamInput
}

input InvoicePaymentMethodOptionsParamInput {
	mandate_options: MandateOptionsParamInput
	verification_method: InvoicePaymentMethodOptionsParamInput_verification_method
}

input MandateOptionsParamInput {
	transaction_type: MandateOptionsParamInput_transaction_type
}

enum MandateOptionsParamInput_transaction_type {
	BUSINESS
	PERSONAL
}

enum InvoicePaymentMethodOptionsParamInput_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

input SubscriptionPaymentMethodOptionsParamInput {
	mandate_options: MandateOptionsParamInput
	network: SubscriptionPaymentMethodOptionsParamInput_network
	request_three_d_secure: SubscriptionPaymentMethodOptionsParamInput_request_three_d_secure
}

enum SubscriptionPaymentMethodOptionsParamInput_network {
	AMEX
	CARTES_BANCAIRES
	DINERS
	DISCOVER
	INTERAC
	JCB
	MASTERCARD
	UNIONPAY
	UNKNOWN
	VISA
}

enum SubscriptionPaymentMethodOptionsParamInput_request_three_d_secure {
	ANY
	AUTOMATIC
}

enum PaymentSettingsInput_payment_method_types {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ACSS_DEBIT
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BOLETO
	CARD
	CUSTOMER_BALANCE
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KONBINI
	LINK
	PAYNOW
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

enum PaymentSettingsInput_save_default_payment_method {
	OFF
	ON_SUBSCRIPTION
}

input PendingInvoiceItemIntervalParamsInput {
	interval: PendingInvoiceItemIntervalParamsInput_interval!
	interval_count: Int
}

enum PendingInvoiceItemIntervalParamsInput_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum PostV1CustomersCustomerSubscriptionsInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum PostV1CustomersCustomerSubscriptionsInput_trial_end {
	NOW
}

input PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput {
	add_invoice_items: [AddInvoiceItemEntryInput]
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	billing_cycle_anchor: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_billing_cycle_anchor
	billing_thresholds: BillingThresholdsParamInput
	cancel_at: Int
	cancel_at_period_end: Boolean
	collection_method: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_collection_method
	coupon: String
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	expand: [String]
	items: [SubscriptionItemUpdateParamsInput]
	metadata: JSON
	off_session: Boolean
	pause_collection: PauseCollectionParamInput
	payment_behavior: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_payment_behavior
	payment_settings: PaymentSettingsInput
	pending_invoice_item_interval: PendingInvoiceItemIntervalParamsInput
	promotion_code: String
	proration_behavior: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_proration_behavior
	proration_date: Int
	transfer_data: TransferDataSpecsInput
	trial_end: PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_trial_end
	trial_from_plan: Boolean
}

input AddInvoiceItemEntryInput {
	price: String
	price_data: OneTimePriceDataWithNegativeAmountsInput
	quantity: Int
	tax_rates: [String]
}

enum PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_billing_cycle_anchor {
	NOW
	UNCHANGED
}

enum PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input SubscriptionItemUpdateParamsInput {
	billing_thresholds: ItemBillingThresholdsParamInput
	clear_usage: Boolean
	deleted: Boolean
	id: String
	metadata: JSON
	price: String
	price_data: RecurringPriceDataInput
	quantity: Int
	tax_rates: [String]
}

input PauseCollectionParamInput {
	behavior: PauseCollectionParamInput_behavior!
	resumes_at: Int
}

enum PauseCollectionParamInput_behavior {
	KEEP_AS_DRAFT
	MARK_UNCOLLECTIBLE
	VOID
}

enum PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

enum PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum PostV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput_trial_end {
	NOW
}

input DeleteV1CustomersCustomerSubscriptionsSubscriptionExposedIdInput {
	expand: [String]
	invoice_now: Boolean
	prorate: Boolean
}

input PostV1CustomersCustomerTaxIdsInput {
	expand: [String]
	type: PostV1CustomersCustomerTaxIdsInput_type!
	value: String!
}

enum PostV1CustomersCustomerTaxIdsInput_type {
	AE_TRN
	AU_ABN
	AU_ARN
	BG_UIC
	BR_CNPJ
	BR_CPF
	CA_BN
	CA_GST_HST
	CA_PST_BC
	CA_PST_MB
	CA_PST_SK
	CA_QST
	CH_VAT
	CL_TIN
	EG_TIN
	ES_CIF
	EU_OSS_VAT
	EU_VAT
	GB_VAT
	GE_VAT
	HK_BR
	HU_TIN
	ID_NPWP
	IL_VAT
	IN_GST
	IS_VAT
	JP_CN
	JP_RN
	JP_TRN
	KE_PIN
	KR_BRN
	LI_UID
	MX_RFC
	MY_FRP
	MY_ITN
	MY_SST
	NO_VAT
	NZ_GST
	PH_TIN
	RU_INN
	RU_KPP
	SA_VAT
	SG_GST
	SG_UEN
	SI_TIN
	TH_VAT
	TR_TIN
	TW_VAT
	UA_VAT
	US_EIN
	ZA_VAT
}

type deleted_tax_id {
	deleted: Boolean!
	id: String!
	object: deleted_tax_id_object!
}

enum deleted_tax_id_object {
	TAX_ID
}

type DisputeList {
	data: [dispute]!
	has_more: Boolean!
	object: DisputeList_object!
	url: String!
}

enum DisputeList_object {
	LIST
}

input PostV1DisputesDisputeInput {
	evidence: DisputeEvidenceParamsInput
	expand: [String]
	metadata: JSON
	submit: Boolean
}

input PostV1DisputesDisputeCloseInput {
	expand: [String]
}

type ephemeral_key {
	created: Int!
	expires: Int!
	id: String!
	livemode: Boolean!
	object: ephemeral_key_object!
	secret: String
}

enum ephemeral_key_object {
	EPHEMERAL_KEY
}

input PostV1EphemeralKeysInput {
	customer: String
	expand: [String]
	issuing_card: String
}

input DeleteV1EphemeralKeysKeyInput {
	expand: [String]
}

type NotificationEventList {
	data: [event]!
	has_more: Boolean!
	object: NotificationEventList_object!
	url: String!
}

type event {
	account: String
	api_version: String
	created: Int!
	data: notification_event_data!
	id: String!
	livemode: Boolean!
	object: event_object!
	pending_webhooks: Int!
	request: NotificationEventRequest
	type: String!
}

type notification_event_data

enum event_object {
	EVENT
}

type NotificationEventRequest {
	id: String
	idempotency_key: String
}

enum NotificationEventList_object {
	LIST
}

type ExchangeRateList {
	data: [exchange_rate]!
	has_more: Boolean!
	object: ExchangeRateList_object!
	url: String!
}

type exchange_rate {
	id: String!
	object: exchange_rate_object!
	rates: JSON!
}

enum exchange_rate_object {
	EXCHANGE_RATE
}

enum ExchangeRateList_object {
	LIST
}

type FileFileLinkList {
	data: [file_link]!
	has_more: Boolean!
	object: FileFileLinkList_object!
	url: String!
}

type file_link {
	created: Int!
	expired: Boolean!
	expires_at: Int
	file: String!
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: file_link_object!
	url: String
}

enum file_link_object {
	FILE_LINK
}

enum FileFileLinkList_object {
	LIST
}

input PostV1FileLinksInput {
	expand: [String]
	expires_at: Int
	file: String!
	metadata: JSON
}

input PostV1FileLinksLinkInput {
	expand: [String]
	expires_at: PostV1FileLinksLinkInput_expires_at
	metadata: JSON
}

enum PostV1FileLinksLinkInput_expires_at {
	NOW
}

type FileFileList {
	data: [file]!
	has_more: Boolean!
	object: FileFileList_object!
	url: String!
}

type file {
	created: Int!
	expires_at: Int
	filename: String
	id: String!
	links: FileFileLinkList
	object: file_object!
	purpose: file_purpose!
	size: Int!
	title: String
	type: String
	url: String
}

enum file_object {
	FILE
}

enum file_purpose {
	ACCOUNT_REQUIREMENT
	ADDITIONAL_VERIFICATION
	BUSINESS_ICON
	BUSINESS_LOGO
	CUSTOMER_SIGNATURE
	DISPUTE_EVIDENCE
	DOCUMENT_PROVIDER_IDENTITY_DOCUMENT
	FINANCE_REPORT_RUN
	IDENTITY_DOCUMENT
	IDENTITY_DOCUMENT_DOWNLOADABLE
	PCI_DOCUMENT
	SELFIE
	SIGMA_SCHEDULED_QUERY
	TAX_DOCUMENT_USER_UPLOAD
	TERMINAL_READER_SPLASHSCREEN
}

enum FileFileList_object {
	LIST
}

enum GetFiles_purpose {
	ACCOUNT_REQUIREMENT
	ADDITIONAL_VERIFICATION
	BUSINESS_ICON
	BUSINESS_LOGO
	CUSTOMER_SIGNATURE
	DISPUTE_EVIDENCE
	DOCUMENT_PROVIDER_IDENTITY_DOCUMENT
	FINANCE_REPORT_RUN
	IDENTITY_DOCUMENT
	IDENTITY_DOCUMENT_DOWNLOADABLE
	PCI_DOCUMENT
	SELFIE
	SIGMA_SCHEDULED_QUERY
	TAX_DOCUMENT_USER_UPLOAD
	TERMINAL_READER_SPLASHSCREEN
}

type BankConnectionsResourceLinkedAccountList {
	has_more: Boolean!
	object: BankConnectionsResourceLinkedAccountList_object!
	url: String!
}

enum BankConnectionsResourceLinkedAccountList_object {
	LIST
}

input accountholder_params {
	account: String
	customer: String
}

input PostV1FinancialConnectionsAccountsAccountDisconnectInput {
	expand: [String]
}

type BankConnectionsResourceOwnerList {
	has_more: Boolean!
	object: BankConnectionsResourceOwnerList_object!
	url: String!
}

enum BankConnectionsResourceOwnerList_object {
	LIST
}

input PostV1FinancialConnectionsAccountsAccountRefreshInput {
	expand: [String]
	features: [PostV1FinancialConnectionsAccountsAccountRefreshInput_features]!
}

enum PostV1FinancialConnectionsAccountsAccountRefreshInput_features {
	BALANCE
	OWNERSHIP
}

input PostV1FinancialConnectionsSessionsInput {
	account_holder: AccountholderParamsInput!
	expand: [String]
	filters: FiltersParamsInput
	permissions: [PostV1FinancialConnectionsSessionsInput_permissions]!
	return_url: String
}

input AccountholderParamsInput {
	account: String
	customer: String
	type: AccountholderParamsInput_type!
}

enum AccountholderParamsInput_type {
	ACCOUNT
	CUSTOMER
}

input FiltersParamsInput {
	countries: [String]!
}

enum PostV1FinancialConnectionsSessionsInput_permissions {
	BALANCES
	OWNERSHIP
	PAYMENT_METHOD
	TRANSACTIONS
}

type GelatoVerificationReportList {
	has_more: Boolean!
	object: GelatoVerificationReportList_object!
	url: String!
}

enum GelatoVerificationReportList_object {
	LIST
}

enum GetIdentityVerificationReports_type {
	DOCUMENT
	ID_NUMBER
}

type GelatoVerificationSessionList {
	has_more: Boolean!
	object: GelatoVerificationSessionList_object!
	url: String!
}

enum GelatoVerificationSessionList_object {
	LIST
}

enum GetIdentityVerificationSessions_status {
	CANCELED
	PROCESSING
	REQUIRES_INPUT
	VERIFIED
}

input PostV1IdentityVerificationSessionsInput {
	expand: [String]
	metadata: JSON
	options: SessionOptionsParamInput
	return_url: String
	type: PostV1IdentityVerificationSessionsInput_type!
}

input SessionOptionsParamInput {
	document: DocumentOptionsInput
}

input DocumentOptionsInput {
	allowed_types: [DocumentOptionsInput_allowed_types]
	require_id_number: Boolean
	require_live_capture: Boolean
	require_matching_selfie: Boolean
}

enum DocumentOptionsInput_allowed_types {
	DRIVING_LICENSE
	ID_CARD
	PASSPORT
}

enum PostV1IdentityVerificationSessionsInput_type {
	DOCUMENT
	ID_NUMBER
}

input PostV1IdentityVerificationSessionsSessionInput {
	expand: [String]
	metadata: JSON
	options: SessionOptionsParamInput
	type: PostV1IdentityVerificationSessionsSessionInput_type
}

enum PostV1IdentityVerificationSessionsSessionInput_type {
	DOCUMENT
	ID_NUMBER
}

input PostV1IdentityVerificationSessionsSessionCancelInput {
	expand: [String]
}

input PostV1IdentityVerificationSessionsSessionRedactInput {
	expand: [String]
}

type InvoicesItemsList {
	data: [invoiceitem]!
	has_more: Boolean!
	object: InvoicesItemsList_object!
	url: String!
}

type invoiceitem {
	amount: Int!
	currency: String!
	customer: String!
	date: Int!
	description: String
	discountable: Boolean!
	discounts: [String]
	id: String!
	invoice: String
	livemode: Boolean!
	metadata: JSON
	object: invoiceitem_object!
	period: invoice_line_item_period!
	price: Price
	proration: Boolean!
	quantity: Int!
	subscription: String
	subscription_item: String
	tax_rates: [tax_rate]
	test_clock: String
	unit_amount: Int
	unit_amount_decimal: String
}

enum invoiceitem_object {
	INVOICEITEM
}

type invoice_line_item_period {
	end: Int!
	start: Int!
}

enum InvoicesItemsList_object {
	LIST
}

input PostV1InvoiceitemsInput {
	amount: Int
	currency: String
	customer: String!
	description: String
	discountable: Boolean
	discounts: [DiscountsDataParamInput]
	expand: [String]
	invoice: String
	metadata: JSON
	period: PeriodInput
	price: String
	price_data: OneTimePriceDataInput
	quantity: Int
	subscription: String
	tax_behavior: PostV1InvoiceitemsInput_tax_behavior
	tax_code: String
	tax_rates: [String]
	unit_amount: Int
	unit_amount_decimal: String
}

input DiscountsDataParamInput {
	coupon: String
	discount: String
}

input PeriodInput {
	end: Int!
	start: Int!
}

input OneTimePriceDataInput {
	currency: String!
	product: String!
	tax_behavior: OneTimePriceDataInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

enum OneTimePriceDataInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum PostV1InvoiceitemsInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

input PostV1InvoiceitemsInvoiceitemInput {
	amount: Int
	description: String
	discountable: Boolean
	discounts: [DiscountsDataParamInput]
	expand: [String]
	metadata: JSON
	period: PeriodInput
	price: String
	price_data: OneTimePriceDataInput
	quantity: Int
	tax_behavior: PostV1InvoiceitemsInvoiceitemInput_tax_behavior
	tax_code: String
	tax_rates: [String]
	unit_amount: Int
	unit_amount_decimal: String
}

enum PostV1InvoiceitemsInvoiceitemInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

type deleted_invoiceitem {
	deleted: Boolean!
	id: String!
	object: deleted_invoiceitem_object!
}

enum deleted_invoiceitem_object {
	INVOICEITEM
}

type InvoicesList {
	data: [invoice]!
	has_more: Boolean!
	object: InvoicesList_object!
	url: String!
}

type invoice {
	account_country: String
	account_name: String
	account_tax_ids: [String]
	amount_due: Int!
	amount_paid: Int!
	amount_remaining: Int!
	application: String
	application_fee_amount: Int
	attempt_count: Int!
	attempted: Boolean!
	auto_advance: Boolean
	automatic_tax: automatic_tax!
	billing_reason: invoice_billing_reason
	charge: String
	collection_method: invoice_collection_method!
	created: Int!
	currency: String!
	custom_fields: [invoice_setting_custom_field]
	customer: String
	customer_address: Address
	customer_email: String
	customer_name: String
	customer_phone: String
	customer_shipping: Shipping
	customer_tax_exempt: invoice_customer_tax_exempt
	customer_tax_ids: [invoices_resource_invoice_tax_id]
	default_payment_method: String
	default_source: String
	default_tax_rates: [tax_rate]!
	description: String
	discount: Discount
	discounts: [String]
	due_date: Int
	ending_balance: Int
	footer: String
	from_invoice: InvoicesFromInvoice
	hosted_invoice_url: String
	id: String
	invoice_pdf: String
	last_finalization_error: ApiErrors
	latest_revision: String
	lines: InvoiceLinesList!
	livemode: Boolean!
	metadata: JSON
	next_payment_attempt: Int
	number: String
	object: invoice_object!
	on_behalf_of: String
	paid: Boolean!
	paid_out_of_band: Boolean!
	payment_intent: String
	payment_settings: invoices_payment_settings!
	period_end: Int!
	period_start: Int!
	post_payment_credit_notes_amount: Int!
	pre_payment_credit_notes_amount: Int!
	quote: String
	receipt_number: String
	rendering_options: InvoiceSettingRenderingOptions
	starting_balance: Int!
	statement_descriptor: String
	status: invoice_status
	status_transitions: invoices_status_transitions!
	subscription: String
	subscription_proration_date: Int
	subtotal: Int!
	subtotal_excluding_tax: Int
	tax: Int
	test_clock: String
	threshold_reason: invoice_threshold_reason
	total: Int!
	total_discount_amounts: [discounts_resource_discount_amount]
	total_excluding_tax: Int
	total_tax_amounts: [invoice_tax_amount]!
	transfer_data: InvoiceTransferData
	webhooks_delivered_at: Int
}

type automatic_tax {
	enabled: Boolean!
	status: automatic_tax_status
}

enum automatic_tax_status {
	COMPLETE
	FAILED
	REQUIRES_LOCATION_INPUTS
}

enum invoice_billing_reason {
	AUTOMATIC_PENDING_INVOICE_ITEM_INVOICE
	MANUAL
	QUOTE_ACCEPT
	SUBSCRIPTION
	SUBSCRIPTION_CREATE
	SUBSCRIPTION_CYCLE
	SUBSCRIPTION_THRESHOLD
	SUBSCRIPTION_UPDATE
	UPCOMING
}

enum invoice_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

enum invoice_customer_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

type invoices_resource_invoice_tax_id {
	type: invoices_resource_invoice_tax_id_type!
	value: String
}

enum invoices_resource_invoice_tax_id_type {
	AE_TRN
	AU_ABN
	AU_ARN
	BG_UIC
	BR_CNPJ
	BR_CPF
	CA_BN
	CA_GST_HST
	CA_PST_BC
	CA_PST_MB
	CA_PST_SK
	CA_QST
	CH_VAT
	CL_TIN
	EG_TIN
	ES_CIF
	EU_OSS_VAT
	EU_VAT
	GB_VAT
	GE_VAT
	HK_BR
	HU_TIN
	ID_NPWP
	IL_VAT
	IN_GST
	IS_VAT
	JP_CN
	JP_RN
	JP_TRN
	KE_PIN
	KR_BRN
	LI_UID
	MX_RFC
	MY_FRP
	MY_ITN
	MY_SST
	NO_VAT
	NZ_GST
	PH_TIN
	RU_INN
	RU_KPP
	SA_VAT
	SG_GST
	SG_UEN
	SI_TIN
	TH_VAT
	TR_TIN
	TW_VAT
	UA_VAT
	UNKNOWN
	US_EIN
	ZA_VAT
}

type InvoicesFromInvoice {
	action: String!
	invoice: String!
}

type ApiErrors {
	charge: String
	code: String
	decline_code: String
	doc_url: String
	message: String
	param: String
	payment_intent: payment_intent
	payment_method: payment_method
	payment_method_type: String
	request_log_url: String
	setup_intent: setup_intent
	source: BankAccount
	type: ApiErrors_type!
}

type payment_intent {
	amount: Int!
	amount_capturable: Int
	amount_details: payment_flows_amount_details
	amount_received: Int
	application: String
	application_fee_amount: Int
	automatic_payment_methods: PaymentFlowsAutomaticPaymentMethodsPaymentIntent
	canceled_at: Int
	cancellation_reason: payment_intent_cancellation_reason
	capture_method: payment_intent_capture_method!
	client_secret: String
	confirmation_method: payment_intent_confirmation_method!
	created: Int!
	currency: String!
	customer: String
	description: String
	id: String!
	invoice: String
	last_payment_error: ApiErrors
	latest_charge: String
	livemode: Boolean!
	metadata: JSON
	next_action: PaymentIntentNextAction
	object: payment_intent_object!
	on_behalf_of: String
	payment_method: String
	payment_method_options: PaymentIntentPaymentMethodOptions
	payment_method_types: [String]!
	processing: PaymentIntentProcessing
	receipt_email: String
	review: String
	setup_future_usage: payment_intent_setup_future_usage
	shipping: Shipping
	statement_descriptor: String
	statement_descriptor_suffix: String
	status: payment_intent_status!
	transfer_data: TransferData
	transfer_group: String
}

type payment_flows_amount_details {
	tip: payment_flows_amount_details_resource_tip
}

type payment_flows_amount_details_resource_tip {
	amount: Int
}

type PaymentFlowsAutomaticPaymentMethodsPaymentIntent {
	enabled: Boolean!
}

enum payment_intent_cancellation_reason {
	ABANDONED
	AUTOMATIC
	DUPLICATE
	FAILED_INVOICE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
	VOID_INVOICE
}

enum payment_intent_capture_method {
	AUTOMATIC
	MANUAL
}

enum payment_intent_confirmation_method {
	AUTOMATIC
	MANUAL
}

type PaymentIntentNextAction {
	alipay_handle_redirect: payment_intent_next_action_alipay_handle_redirect
	boleto_display_details: payment_intent_next_action_boleto
	card_await_notification: payment_intent_next_action_card_await_notification
	display_bank_transfer_instructions: payment_intent_next_action_display_bank_transfer_instructions
	konbini_display_details: payment_intent_next_action_konbini
	oxxo_display_details: payment_intent_next_action_display_oxxo_details
	paynow_display_qr_code: payment_intent_next_action_paynow_display_qr_code
	pix_display_qr_code: payment_intent_next_action_pix_display_qr_code
	promptpay_display_qr_code: payment_intent_next_action_promptpay_display_qr_code
	redirect_to_url: payment_intent_next_action_redirect_to_url
	type: String!
	verify_with_microdeposits: payment_intent_next_action_verify_with_microdeposits
	wechat_pay_display_qr_code: payment_intent_next_action_wechat_pay_display_qr_code
	wechat_pay_redirect_to_android_app: payment_intent_next_action_wechat_pay_redirect_to_android_app
	wechat_pay_redirect_to_ios_app: payment_intent_next_action_wechat_pay_redirect_to_ios_app
}

type payment_intent_next_action_alipay_handle_redirect {
	native_data: String
	native_url: String
	return_url: String
	url: String
}

type payment_intent_next_action_boleto {
	expires_at: Int
	hosted_voucher_url: String
	number: String
	pdf: String
}

type payment_intent_next_action_card_await_notification {
	charge_attempt_at: Int
	customer_approval_required: Boolean
}

type payment_intent_next_action_display_bank_transfer_instructions {
	amount_remaining: Int
	currency: String
	financial_addresses: [funding_instructions_bank_transfer_financial_address]
	hosted_instructions_url: String
	reference: String
	type: payment_intent_next_action_display_bank_transfer_instructions_type!
}

enum payment_intent_next_action_display_bank_transfer_instructions_type {
	EU_BANK_TRANSFER
	GB_BANK_TRANSFER
	JP_BANK_TRANSFER
	MX_BANK_TRANSFER
}

type payment_intent_next_action_konbini {
	expires_at: Int!
	hosted_voucher_url: String
	stores: payment_intent_next_action_konbini_stores!
}

type payment_intent_next_action_konbini_stores {
	familymart: PaymentIntentNextActionKonbiniFamilymart
	lawson: PaymentIntentNextActionKonbiniLawson
	ministop: PaymentIntentNextActionKonbiniMinistop
	seicomart: PaymentIntentNextActionKonbiniSeicomart
}

type PaymentIntentNextActionKonbiniFamilymart {
	confirmation_number: String
	payment_code: String!
}

type PaymentIntentNextActionKonbiniLawson {
	confirmation_number: String
	payment_code: String!
}

type PaymentIntentNextActionKonbiniMinistop {
	confirmation_number: String
	payment_code: String!
}

type PaymentIntentNextActionKonbiniSeicomart {
	confirmation_number: String
	payment_code: String!
}

type payment_intent_next_action_display_oxxo_details {
	expires_after: Int
	hosted_voucher_url: String
	number: String
}

type payment_intent_next_action_paynow_display_qr_code {
	data: String!
	hosted_instructions_url: String
	image_url_png: String!
	image_url_svg: String!
}

type payment_intent_next_action_pix_display_qr_code {
	data: String
	expires_at: Int
	hosted_instructions_url: String
	image_url_png: String
	image_url_svg: String
}

type payment_intent_next_action_promptpay_display_qr_code {
	data: String!
	hosted_instructions_url: String!
	image_url_png: String!
	image_url_svg: String!
}

type payment_intent_next_action_redirect_to_url {
	return_url: String
	url: String
}

type payment_intent_next_action_verify_with_microdeposits {
	arrival_date: Int!
	hosted_verification_url: String!
	microdeposit_type: payment_intent_next_action_verify_with_microdeposits_microdeposit_type
}

enum payment_intent_next_action_verify_with_microdeposits_microdeposit_type {
	AMOUNTS
	DESCRIPTOR_CODE
}

type payment_intent_next_action_wechat_pay_display_qr_code {
	data: String!
	hosted_instructions_url: String!
	image_data_url: String!
	image_url_png: String!
	image_url_svg: String!
}

type payment_intent_next_action_wechat_pay_redirect_to_android_app {
	app_id: String!
	nonce_str: String!
	package: String!
	partner_id: String!
	prepay_id: String!
	sign: String!
	timestamp: String!
}

type payment_intent_next_action_wechat_pay_redirect_to_ios_app {
	native_url: String!
}

enum payment_intent_object {
	PAYMENT_INTENT
}

type PaymentIntentPaymentMethodOptions {
	acss_debit: PaymentIntentPaymentMethodOptionsAcssDebit
	affirm: PaymentMethodOptionsAffirm
	afterpay_clearpay: PaymentMethodOptionsAfterpayClearpay
	alipay: PaymentMethodOptionsAlipay
	au_becs_debit: PaymentIntentPaymentMethodOptionsAuBecsDebit
	bacs_debit: PaymentMethodOptionsBacsDebit
	bancontact: PaymentMethodOptionsBancontact
	boleto: PaymentMethodOptionsBoleto
	card: PaymentIntentPaymentMethodOptionsCard
	card_present: PaymentMethodOptionsCardPresent
	customer_balance: PaymentMethodOptionsCustomerBalance
	eps: PaymentIntentPaymentMethodOptionsEps
	fpx: PaymentMethodOptionsFpx
	giropay: PaymentMethodOptionsGiropay
	grabpay: PaymentMethodOptionsGrabpay
	ideal: PaymentMethodOptionsIdeal
	klarna: PaymentMethodOptionsKlarna
	konbini: PaymentMethodOptionsKonbini
	link: PaymentIntentPaymentMethodOptionsLink
	oxxo: PaymentMethodOptionsOxxo
	p24: PaymentMethodOptionsP24
	paynow: PaymentMethodOptionsPaynow
	pix: PaymentMethodOptionsPix
	promptpay: PaymentMethodOptionsPromptpay
	sepa_debit: PaymentIntentPaymentMethodOptionsSepaDebit
	sofort: PaymentMethodOptionsSofort
	us_bank_account: PaymentIntentPaymentMethodOptionsUsBankAccount
	wechat_pay: PaymentMethodOptionsWechatPay
}

type PaymentIntentPaymentMethodOptionsAcssDebit {
	mandate_options: payment_intent_payment_method_options_mandate_options_acss_debit
	setup_future_usage: PaymentIntentPaymentMethodOptionsAcssDebit_setup_future_usage
	verification_method: PaymentIntentPaymentMethodOptionsAcssDebit_verification_method
}

type payment_intent_payment_method_options_mandate_options_acss_debit {
	custom_mandate_url: String
	interval_description: String
	payment_schedule: payment_intent_payment_method_options_mandate_options_acss_debit_payment_schedule
	transaction_type: payment_intent_payment_method_options_mandate_options_acss_debit_transaction_type
}

enum payment_intent_payment_method_options_mandate_options_acss_debit_payment_schedule {
	COMBINED
	INTERVAL
	SPORADIC
}

enum payment_intent_payment_method_options_mandate_options_acss_debit_transaction_type {
	BUSINESS
	PERSONAL
}

enum PaymentIntentPaymentMethodOptionsAcssDebit_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

enum PaymentIntentPaymentMethodOptionsAcssDebit_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

type PaymentMethodOptionsAffirm {
	capture_method: PaymentMethodOptionsAffirm_capture_method
	setup_future_usage: PaymentMethodOptionsAffirm_setup_future_usage
}

enum PaymentMethodOptionsAffirm_capture_method {
	MANUAL
}

enum PaymentMethodOptionsAffirm_setup_future_usage {
	NONE
}

type PaymentMethodOptionsAfterpayClearpay {
	capture_method: PaymentMethodOptionsAfterpayClearpay_capture_method
	reference: String
	setup_future_usage: PaymentMethodOptionsAfterpayClearpay_setup_future_usage
}

enum PaymentMethodOptionsAfterpayClearpay_capture_method {
	MANUAL
}

enum PaymentMethodOptionsAfterpayClearpay_setup_future_usage {
	NONE
}

type PaymentMethodOptionsAlipay {
	setup_future_usage: PaymentMethodOptionsAlipay_setup_future_usage
}

enum PaymentMethodOptionsAlipay_setup_future_usage {
	NONE
	OFF_SESSION
}

type PaymentIntentPaymentMethodOptionsAuBecsDebit {
	setup_future_usage: PaymentIntentPaymentMethodOptionsAuBecsDebit_setup_future_usage
}

enum PaymentIntentPaymentMethodOptionsAuBecsDebit_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

type PaymentMethodOptionsBacsDebit {
	setup_future_usage: PaymentMethodOptionsBacsDebit_setup_future_usage
}

enum PaymentMethodOptionsBacsDebit_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

type PaymentMethodOptionsBancontact {
	preferred_language: PaymentMethodOptionsBancontact_preferred_language!
	setup_future_usage: PaymentMethodOptionsBancontact_setup_future_usage
}

enum PaymentMethodOptionsBancontact_preferred_language {
	DE
	EN
	FR
	NL
}

enum PaymentMethodOptionsBancontact_setup_future_usage {
	NONE
	OFF_SESSION
}

type PaymentMethodOptionsBoleto {
	expires_after_days: Int!
	setup_future_usage: PaymentMethodOptionsBoleto_setup_future_usage
}

enum PaymentMethodOptionsBoleto_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

type PaymentIntentPaymentMethodOptionsCard {
	capture_method: PaymentIntentPaymentMethodOptionsCard_capture_method
	installments: PaymentMethodOptionsCardInstallments
	mandate_options: PaymentMethodOptionsCardMandateOptions
	network: PaymentIntentPaymentMethodOptionsCard_network
	request_three_d_secure: PaymentIntentPaymentMethodOptionsCard_request_three_d_secure
	setup_future_usage: PaymentIntentPaymentMethodOptionsCard_setup_future_usage
	statement_descriptor_suffix_kana: String
	statement_descriptor_suffix_kanji: String
}

enum PaymentIntentPaymentMethodOptionsCard_capture_method {
	MANUAL
}

type PaymentMethodOptionsCardInstallments {
	available_plans: [payment_method_details_card_installments_plan]
	enabled: Boolean!
	plan: PaymentMethodDetailsCardInstallmentsPlan
}

type payment_method_details_card_installments_plan {
	count: Int
	interval: payment_method_details_card_installments_plan_interval
	type: payment_method_details_card_installments_plan_type!
}

enum payment_method_details_card_installments_plan_interval {
	MONTH
}

enum payment_method_details_card_installments_plan_type {
	FIXED_COUNT
}

type PaymentMethodOptionsCardMandateOptions {
	amount: Int!
	amount_type: PaymentMethodOptionsCardMandateOptions_amount_type!
	description: String
	end_date: Int
	interval: PaymentMethodOptionsCardMandateOptions_interval!
	interval_count: Int
	reference: String!
	start_date: Int!
	supported_types: [PaymentMethodOptionsCardMandateOptions_supported_types]
}

enum PaymentMethodOptionsCardMandateOptions_amount_type {
	FIXED
	MAXIMUM
}

enum PaymentMethodOptionsCardMandateOptions_interval {
	DAY
	MONTH
	SPORADIC
	WEEK
	YEAR
}

enum PaymentMethodOptionsCardMandateOptions_supported_types {
	INDIA
}

enum PaymentIntentPaymentMethodOptionsCard_network {
	AMEX
	CARTES_BANCAIRES
	DINERS
	DISCOVER
	INTERAC
	JCB
	MASTERCARD
	UNIONPAY
	UNKNOWN
	VISA
}

enum PaymentIntentPaymentMethodOptionsCard_request_three_d_secure {
	ANY
	AUTOMATIC
	CHALLENGE_ONLY
}

enum PaymentIntentPaymentMethodOptionsCard_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

type PaymentMethodOptionsCardPresent {
	request_extended_authorization: Boolean
	request_incremental_authorization_support: Boolean
}

type PaymentMethodOptionsCustomerBalance {
	bank_transfer: payment_method_options_customer_balance_bank_transfer
	funding_type: PaymentMethodOptionsCustomerBalance_funding_type
	setup_future_usage: PaymentMethodOptionsCustomerBalance_setup_future_usage
}

type payment_method_options_customer_balance_bank_transfer {
	eu_bank_transfer: payment_method_options_customer_balance_eu_bank_account
	requested_address_types: [payment_method_options_customer_balance_bank_transfer_requested_address_types]
	type: payment_method_options_customer_balance_bank_transfer_type
}

type payment_method_options_customer_balance_eu_bank_account {
	country: payment_method_options_customer_balance_eu_bank_account_country!
}

enum payment_method_options_customer_balance_eu_bank_account_country {
	DE
	ES
	FR
	IE
	NL
}

enum payment_method_options_customer_balance_bank_transfer_requested_address_types {
	IBAN
	SEPA
	SORT_CODE
	SPEI
	ZENGIN
}

enum payment_method_options_customer_balance_bank_transfer_type {
	EU_BANK_TRANSFER
	GB_BANK_TRANSFER
	JP_BANK_TRANSFER
	MX_BANK_TRANSFER
}

enum PaymentMethodOptionsCustomerBalance_funding_type {
	BANK_TRANSFER
}

enum PaymentMethodOptionsCustomerBalance_setup_future_usage {
	NONE
}

type PaymentIntentPaymentMethodOptionsEps {
	setup_future_usage: PaymentIntentPaymentMethodOptionsEps_setup_future_usage
}

enum PaymentIntentPaymentMethodOptionsEps_setup_future_usage {
	NONE
}

type PaymentMethodOptionsFpx {
	setup_future_usage: PaymentMethodOptionsFpx_setup_future_usage
}

enum PaymentMethodOptionsFpx_setup_future_usage {
	NONE
}

type PaymentMethodOptionsGiropay {
	setup_future_usage: PaymentMethodOptionsGiropay_setup_future_usage
}

enum PaymentMethodOptionsGiropay_setup_future_usage {
	NONE
}

type PaymentMethodOptionsGrabpay {
	setup_future_usage: PaymentMethodOptionsGrabpay_setup_future_usage
}

enum PaymentMethodOptionsGrabpay_setup_future_usage {
	NONE
}

type PaymentMethodOptionsIdeal {
	setup_future_usage: PaymentMethodOptionsIdeal_setup_future_usage
}

enum PaymentMethodOptionsIdeal_setup_future_usage {
	NONE
	OFF_SESSION
}

type PaymentMethodOptionsKlarna {
	capture_method: PaymentMethodOptionsKlarna_capture_method
	preferred_locale: String
	setup_future_usage: PaymentMethodOptionsKlarna_setup_future_usage
}

enum PaymentMethodOptionsKlarna_capture_method {
	MANUAL
}

enum PaymentMethodOptionsKlarna_setup_future_usage {
	NONE
}

type PaymentMethodOptionsKonbini {
	confirmation_number: String
	expires_after_days: Int
	expires_at: Int
	product_description: String
	setup_future_usage: PaymentMethodOptionsKonbini_setup_future_usage
}

enum PaymentMethodOptionsKonbini_setup_future_usage {
	NONE
}

type PaymentIntentPaymentMethodOptionsLink {
	capture_method: PaymentIntentPaymentMethodOptionsLink_capture_method
	persistent_token: String
	setup_future_usage: PaymentIntentPaymentMethodOptionsLink_setup_future_usage
}

enum PaymentIntentPaymentMethodOptionsLink_capture_method {
	MANUAL
}

enum PaymentIntentPaymentMethodOptionsLink_setup_future_usage {
	NONE
	OFF_SESSION
}

type PaymentMethodOptionsOxxo {
	expires_after_days: Int!
	setup_future_usage: PaymentMethodOptionsOxxo_setup_future_usage
}

enum PaymentMethodOptionsOxxo_setup_future_usage {
	NONE
}

type PaymentMethodOptionsP24 {
	setup_future_usage: PaymentMethodOptionsP24_setup_future_usage
}

enum PaymentMethodOptionsP24_setup_future_usage {
	NONE
}

type PaymentMethodOptionsPaynow {
	setup_future_usage: PaymentMethodOptionsPaynow_setup_future_usage
}

enum PaymentMethodOptionsPaynow_setup_future_usage {
	NONE
}

type PaymentMethodOptionsPix {
	expires_after_seconds: Int
	expires_at: Int
	setup_future_usage: PaymentMethodOptionsPix_setup_future_usage
}

enum PaymentMethodOptionsPix_setup_future_usage {
	NONE
}

type PaymentMethodOptionsPromptpay {
	setup_future_usage: PaymentMethodOptionsPromptpay_setup_future_usage
}

enum PaymentMethodOptionsPromptpay_setup_future_usage {
	NONE
}

type PaymentIntentPaymentMethodOptionsSepaDebit {
	mandate_options: payment_intent_payment_method_options_mandate_options_sepa_debit
	setup_future_usage: PaymentIntentPaymentMethodOptionsSepaDebit_setup_future_usage
}

type payment_intent_payment_method_options_mandate_options_sepa_debit

enum PaymentIntentPaymentMethodOptionsSepaDebit_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

type PaymentMethodOptionsSofort {
	preferred_language: PaymentMethodOptionsSofort_preferred_language
	setup_future_usage: PaymentMethodOptionsSofort_setup_future_usage
}

enum PaymentMethodOptionsSofort_preferred_language {
	DE
	EN
	ES
	FR
	IT
	NL
	PL
}

enum PaymentMethodOptionsSofort_setup_future_usage {
	NONE
	OFF_SESSION
}

type PaymentIntentPaymentMethodOptionsUsBankAccount {
	financial_connections: linked_account_options_us_bank_account
	setup_future_usage: PaymentIntentPaymentMethodOptionsUsBankAccount_setup_future_usage
	verification_method: PaymentIntentPaymentMethodOptionsUsBankAccount_verification_method
}

type linked_account_options_us_bank_account {
	permissions: [linked_account_options_us_bank_account_permissions]
	return_url: String
}

enum linked_account_options_us_bank_account_permissions {
	BALANCES
	OWNERSHIP
	PAYMENT_METHOD
	TRANSACTIONS
}

enum PaymentIntentPaymentMethodOptionsUsBankAccount_setup_future_usage {
	NONE
	OFF_SESSION
	ON_SESSION
}

enum PaymentIntentPaymentMethodOptionsUsBankAccount_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

type PaymentMethodOptionsWechatPay {
	app_id: String
	client: PaymentMethodOptionsWechatPay_client
	setup_future_usage: PaymentMethodOptionsWechatPay_setup_future_usage
}

enum PaymentMethodOptionsWechatPay_client {
	ANDROID
	IOS
	WEB
}

enum PaymentMethodOptionsWechatPay_setup_future_usage {
	NONE
}

type PaymentIntentProcessing {
	card: payment_intent_card_processing
	type: PaymentIntentProcessing_type!
}

type payment_intent_card_processing {
	customer_notification: payment_intent_processing_customer_notification
}

type payment_intent_processing_customer_notification {
	approval_requested: Boolean
	completes_at: Int
}

enum PaymentIntentProcessing_type {
	CARD
}

enum payment_intent_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

enum payment_intent_status {
	CANCELED
	PROCESSING
	REQUIRES_ACTION
	REQUIRES_CAPTURE
	REQUIRES_CONFIRMATION
	REQUIRES_PAYMENT_METHOD
	SUCCEEDED
}

type TransferData {
	amount: Int
	destination: String!
}

type setup_intent {
	application: String
	attach_to_self: Boolean
	cancellation_reason: setup_intent_cancellation_reason
	client_secret: String
	created: Int!
	customer: String
	description: String
	flow_directions: [setup_intent_flow_directions]
	id: String!
	last_setup_error: ApiErrors
	latest_attempt: String
	livemode: Boolean!
	mandate: String
	metadata: JSON
	next_action: SetupIntentNextAction
	object: setup_intent_object!
	on_behalf_of: String
	payment_method: String
	payment_method_options: SetupIntentPaymentMethodOptions
	payment_method_types: [String]!
	single_use_mandate: String
	status: setup_intent_status!
	usage: String!
}

enum setup_intent_cancellation_reason {
	ABANDONED
	DUPLICATE
	REQUESTED_BY_CUSTOMER
}

enum setup_intent_flow_directions {
	INBOUND
	OUTBOUND
}

type SetupIntentNextAction {
	redirect_to_url: setup_intent_next_action_redirect_to_url
	type: String!
	verify_with_microdeposits: setup_intent_next_action_verify_with_microdeposits
}

type setup_intent_next_action_redirect_to_url {
	return_url: String
	url: String
}

type setup_intent_next_action_verify_with_microdeposits {
	arrival_date: Int!
	hosted_verification_url: String!
	microdeposit_type: setup_intent_next_action_verify_with_microdeposits_microdeposit_type
}

enum setup_intent_next_action_verify_with_microdeposits_microdeposit_type {
	AMOUNTS
	DESCRIPTOR_CODE
}

enum setup_intent_object {
	SETUP_INTENT
}

type SetupIntentPaymentMethodOptions {
	acss_debit: SetupIntentPaymentMethodOptionsAcssDebit
	blik: SetupIntentPaymentMethodOptionsBlik
	card: setup_intent_payment_method_options_card
	link: SetupIntentPaymentMethodOptionsLink
	sepa_debit: SetupIntentPaymentMethodOptionsSepaDebit
	us_bank_account: SetupIntentPaymentMethodOptionsUsBankAccount
}

type SetupIntentPaymentMethodOptionsAcssDebit {
	currency: SetupIntentPaymentMethodOptionsAcssDebit_currency
	mandate_options: setup_intent_payment_method_options_mandate_options_acss_debit
	verification_method: SetupIntentPaymentMethodOptionsAcssDebit_verification_method
}

enum SetupIntentPaymentMethodOptionsAcssDebit_currency {
	CAD
	USD
}

type setup_intent_payment_method_options_mandate_options_acss_debit {
	custom_mandate_url: String
	default_for: [setup_intent_payment_method_options_mandate_options_acss_debit_default_for]
	interval_description: String
	payment_schedule: setup_intent_payment_method_options_mandate_options_acss_debit_payment_schedule
	transaction_type: setup_intent_payment_method_options_mandate_options_acss_debit_transaction_type
}

enum setup_intent_payment_method_options_mandate_options_acss_debit_default_for {
	INVOICE
	SUBSCRIPTION
}

enum setup_intent_payment_method_options_mandate_options_acss_debit_payment_schedule {
	COMBINED
	INTERVAL
	SPORADIC
}

enum setup_intent_payment_method_options_mandate_options_acss_debit_transaction_type {
	BUSINESS
	PERSONAL
}

enum SetupIntentPaymentMethodOptionsAcssDebit_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

type SetupIntentPaymentMethodOptionsBlik {
	mandate_options: setup_intent_payment_method_options_mandate_options_blik
}

type setup_intent_payment_method_options_mandate_options_blik {
	expires_after: Int
	off_session: mandate_options_off_session_details_blik
	type: setup_intent_payment_method_options_mandate_options_blik_type
}

type mandate_options_off_session_details_blik {
	amount: Int
	currency: String
	interval: mandate_options_off_session_details_blik_interval
	interval_count: Int
}

enum mandate_options_off_session_details_blik_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum setup_intent_payment_method_options_mandate_options_blik_type {
	OFF_SESSION
	ON_SESSION
}

type setup_intent_payment_method_options_card {
	mandate_options: SetupIntentPaymentMethodOptionsCardMandateOptions
	network: setup_intent_payment_method_options_card_network
	request_three_d_secure: setup_intent_payment_method_options_card_request_three_d_secure
}

type SetupIntentPaymentMethodOptionsCardMandateOptions {
	amount: Int!
	amount_type: SetupIntentPaymentMethodOptionsCardMandateOptions_amount_type!
	currency: String!
	description: String
	end_date: Int
	interval: SetupIntentPaymentMethodOptionsCardMandateOptions_interval!
	interval_count: Int
	reference: String!
	start_date: Int!
	supported_types: [SetupIntentPaymentMethodOptionsCardMandateOptions_supported_types]
}

enum SetupIntentPaymentMethodOptionsCardMandateOptions_amount_type {
	FIXED
	MAXIMUM
}

enum SetupIntentPaymentMethodOptionsCardMandateOptions_interval {
	DAY
	MONTH
	SPORADIC
	WEEK
	YEAR
}

enum SetupIntentPaymentMethodOptionsCardMandateOptions_supported_types {
	INDIA
}

enum setup_intent_payment_method_options_card_network {
	AMEX
	CARTES_BANCAIRES
	DINERS
	DISCOVER
	INTERAC
	JCB
	MASTERCARD
	UNIONPAY
	UNKNOWN
	VISA
}

enum setup_intent_payment_method_options_card_request_three_d_secure {
	ANY
	AUTOMATIC
	CHALLENGE_ONLY
}

type SetupIntentPaymentMethodOptionsLink {
	persistent_token: String
}

type SetupIntentPaymentMethodOptionsSepaDebit {
	mandate_options: setup_intent_payment_method_options_mandate_options_sepa_debit
}

type setup_intent_payment_method_options_mandate_options_sepa_debit

type SetupIntentPaymentMethodOptionsUsBankAccount {
	financial_connections: linked_account_options_us_bank_account
	verification_method: SetupIntentPaymentMethodOptionsUsBankAccount_verification_method
}

enum SetupIntentPaymentMethodOptionsUsBankAccount_verification_method {
	AUTOMATIC
	INSTANT
	MICRODEPOSITS
}

enum setup_intent_status {
	CANCELED
	PROCESSING
	REQUIRES_ACTION
	REQUIRES_CONFIRMATION
	REQUIRES_PAYMENT_METHOD
	SUCCEEDED
}

enum ApiErrors_type {
	API_ERROR
	CARD_ERROR
	IDEMPOTENCY_ERROR
	INVALID_REQUEST_ERROR
}

type InvoiceLinesList {
	data: [line_item]!
	has_more: Boolean!
	object: InvoiceLinesList_object!
	url: String!
}

type line_item {
	amount: Int!
	amount_excluding_tax: Int
	currency: String!
	description: String
	discount_amounts: [discounts_resource_discount_amount]
	discountable: Boolean!
	discounts: [String]
	id: String!
	invoice_item: String
	livemode: Boolean!
	metadata: JSON!
	object: line_item_object!
	period: invoice_line_item_period!
	price: Price
	proration: Boolean!
	proration_details: InvoicesLineItemsProrationDetails
	quantity: Int
	subscription: String
	subscription_item: String
	tax_amounts: [invoice_tax_amount]
	tax_rates: [tax_rate]
	type: line_item_type!
	unit_amount_excluding_tax: String
}

enum line_item_object {
	LINE_ITEM
}

type InvoicesLineItemsProrationDetails {
	credited_items: InvoicesLineItemsCreditedItems
}

type InvoicesLineItemsCreditedItems {
	invoice: String!
	invoice_line_items: [String]!
}

type invoice_tax_amount {
	amount: Int!
	inclusive: Boolean!
	tax_rate: String!
}

enum line_item_type {
	INVOICEITEM
	SUBSCRIPTION
}

enum InvoiceLinesList_object {
	LIST
}

enum invoice_object {
	INVOICE
}

type invoices_payment_settings {
	default_mandate: String
	payment_method_options: InvoicesPaymentMethodOptions
	payment_method_types: [invoices_payment_settings_payment_method_types]
}

type InvoicesPaymentMethodOptions {
	acss_debit: InvoicePaymentMethodOptionsAcssDebit
	bancontact: InvoicePaymentMethodOptionsBancontact
	card: InvoicePaymentMethodOptionsCard
	customer_balance: InvoicePaymentMethodOptionsCustomerBalance
	us_bank_account: InvoicePaymentMethodOptionsUsBankAccount
}

type InvoicePaymentMethodOptionsCard {
	installments: invoice_installments_card
	request_three_d_secure: InvoicePaymentMethodOptionsCard_request_three_d_secure
}

type invoice_installments_card {
	enabled: Boolean
}

enum InvoicePaymentMethodOptionsCard_request_three_d_secure {
	ANY
	AUTOMATIC
}

enum invoices_payment_settings_payment_method_types {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ACSS_DEBIT
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BOLETO
	CARD
	CUSTOMER_BALANCE
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KONBINI
	LINK
	PAYNOW
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

enum invoice_status {
	DELETED
	DRAFT
	OPEN
	PAID
	UNCOLLECTIBLE
	VOID
}

type invoices_status_transitions {
	finalized_at: Int
	marked_uncollectible_at: Int
	paid_at: Int
	voided_at: Int
}

type invoice_threshold_reason {
	amount_gte: Int
	item_reasons: [invoice_item_threshold_reason]!
}

type invoice_item_threshold_reason {
	line_item_ids: [String]!
	usage_gte: Int!
}

type InvoiceTransferData {
	amount: Int
	destination: String!
}

enum InvoicesList_object {
	LIST
}

enum GetInvoices_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

enum GetInvoices_status {
	DRAFT
	OPEN
	PAID
	UNCOLLECTIBLE
	VOID
}

input PostV1InvoicesInput {
	account_tax_ids: [String]
	application_fee_amount: Int
	auto_advance: Boolean
	automatic_tax: AutomaticTaxParamInput
	collection_method: PostV1InvoicesInput_collection_method
	currency: String
	custom_fields: [CustomFieldParamsInput]
	customer: String
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	description: String
	discounts: [DiscountsDataParamInput]
	due_date: Int
	expand: [String]
	footer: String
	from_invoice: FromInvoiceInput
	metadata: JSON
	on_behalf_of: String
	payment_settings: PaymentSettingsInput
	pending_invoice_items_behavior: PostV1InvoicesInput_pending_invoice_items_behavior
	rendering_options: RenderingOptionsParamInput
	statement_descriptor: String
	subscription: String
	transfer_data: TransferDataSpecsInput
}

input AutomaticTaxParamInput {
	enabled: Boolean!
}

enum PostV1InvoicesInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input FromInvoiceInput {
	action: FromInvoiceInput_action!
	invoice: String!
}

enum FromInvoiceInput_action {
	REVISION
}

enum PostV1InvoicesInput_pending_invoice_items_behavior {
	EXCLUDE
	INCLUDE
	INCLUDE_AND_REQUIRE
}

input automatic_tax_paramInput {
	enabled: Boolean!
}

input customer_details_paramInput {
	address: OptionalFieldsAddressInput
	shipping: CustomerShippingInput
	tax: TaxParamInput
	tax_exempt: customer_details_paramInput_tax_exempt
	tax_ids: [DataParamsInput]
}

enum customer_details_paramInput_tax_exempt {
	EXEMPT
	NONE
	REVERSE
}

input discounts_data_paramInput {
	coupon: String
	discount: String
}

input invoice_item_preview_params {
	amount: Int
	currency: String
	description: String
	discountable: Boolean
	discounts: [DiscountsDataParamInput]
	invoiceitem: String
	metadata: JSON
	period: PeriodInput
	price: String
	price_data: OneTimePriceDataInput
	quantity: Int
	tax_behavior: invoice_item_preview_params_tax_behavior
	tax_code: String
	tax_rates: [String]
	unit_amount: Int
	unit_amount_decimal: String
}

enum invoice_item_preview_params_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum GetInvoicesUpcoming_subscription_billing_cycle_anchor {
	NOW
	UNCHANGED
}

input subscription_item_update_params {
	billing_thresholds: ItemBillingThresholdsParamInput
	clear_usage: Boolean
	deleted: Boolean
	id: String
	metadata: JSON
	price: String
	price_data: RecurringPriceDataInput
	quantity: Int
	tax_rates: [String]
}

enum GetInvoicesUpcoming_subscription_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum GetInvoicesUpcoming_subscription_trial_end {
	NOW
}

enum GetInvoicesUpcomingLines_subscription_billing_cycle_anchor {
	NOW
	UNCHANGED
}

enum GetInvoicesUpcomingLines_subscription_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum GetInvoicesUpcomingLines_subscription_trial_end {
	NOW
}

input PostV1InvoicesInvoiceInput {
	account_tax_ids: [String]
	application_fee_amount: Int
	auto_advance: Boolean
	automatic_tax: AutomaticTaxParamInput
	collection_method: PostV1InvoicesInvoiceInput_collection_method
	custom_fields: [CustomFieldParamsInput]
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	description: String
	discounts: [DiscountsDataParamInput]
	due_date: Int
	expand: [String]
	footer: String
	metadata: JSON
	on_behalf_of: String
	payment_settings: PaymentSettingsInput
	rendering_options: RenderingOptionsParamInput
	statement_descriptor: String
	transfer_data: TransferDataSpecsInput
}

enum PostV1InvoicesInvoiceInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

type deleted_invoice {
	deleted: Boolean!
	id: String!
	object: deleted_invoice_object!
}

enum deleted_invoice_object {
	INVOICE
}

input PostV1InvoicesInvoiceFinalizeInput {
	auto_advance: Boolean
	expand: [String]
}

input PostV1InvoicesInvoiceMarkUncollectibleInput {
	expand: [String]
}

input PostV1InvoicesInvoicePayInput {
	expand: [String]
	forgive: Boolean
	mandate: String
	off_session: Boolean
	paid_out_of_band: Boolean
	payment_method: String
	source: String
}

input PostV1InvoicesInvoiceSendInput {
	expand: [String]
}

input PostV1InvoicesInvoiceVoidInput {
	expand: [String]
}

type IssuingAuthorizationList {
	has_more: Boolean!
	object: IssuingAuthorizationList_object!
	url: String!
}

enum IssuingAuthorizationList_object {
	LIST
}

enum GetIssuingAuthorizations_status {
	CLOSED
	PENDING
	REVERSED
}

input PostV1IssuingAuthorizationsAuthorizationInput {
	expand: [String]
	metadata: JSON
}

input PostV1IssuingAuthorizationsAuthorizationApproveInput {
	amount: Int
	expand: [String]
	metadata: JSON
}

input PostV1IssuingAuthorizationsAuthorizationDeclineInput {
	expand: [String]
	metadata: JSON
}

type IssuingCardholderList {
	has_more: Boolean!
	object: IssuingCardholderList_object!
	url: String!
}

enum IssuingCardholderList_object {
	LIST
}

enum GetIssuingCardholders_status {
	ACTIVE
	BLOCKED
	INACTIVE
}

enum GetIssuingCardholders_type {
	COMPANY
	INDIVIDUAL
}

input PostV1IssuingCardholdersInput {
	billing: BillingSpecsInput!
	company: CompanyParamInput
	email: String
	expand: [String]
	individual: IndividualParamInput
	metadata: JSON
	name: String!
	phone_number: String
	spending_controls: AuthorizationControlsParamV2Input
	status: PostV1IssuingCardholdersInput_status
	type: PostV1IssuingCardholdersInput_type!
}

input BillingSpecsInput {
	address: RequiredAddressInput!
}

input RequiredAddressInput {
	city: String!
	country: String!
	line1: String!
	line2: String
	postal_code: String!
	state: String
}

input CompanyParamInput {
	tax_id: String
}

input IndividualParamInput {
	dob: DateOfBirthSpecsInput
	first_name: String!
	last_name: String!
	verification: PersonVerificationParamInput
}

input PersonVerificationParamInput {
	document: PersonVerificationDocumentParamInput
}

input PersonVerificationDocumentParamInput {
	back: String
	front: String
}

input AuthorizationControlsParamV2Input {
	allowed_categories: [AuthorizationControlsParamV2Input_allowed_categories]
	blocked_categories: [AuthorizationControlsParamV2Input_blocked_categories]
	spending_limits: [SpendingLimitsParamInput]
	spending_limits_currency: String
}

enum AuthorizationControlsParamV2Input_allowed_categories {
	AC_REFRIGERATION_REPAIR
	ACCOUNTING_BOOKKEEPING_SERVICES
	ADVERTISING_SERVICES
	AGRICULTURAL_COOPERATIVE
	AIRLINES_AIR_CARRIERS
	AIRPORTS_FLYING_FIELDS
	AMBULANCE_SERVICES
	AMUSEMENT_PARKS_CARNIVALS
	ANTIQUE_REPRODUCTIONS
	ANTIQUE_SHOPS
	AQUARIUMS
	ARCHITECTURAL_SURVEYING_SERVICES
	ART_DEALERS_AND_GALLERIES
	ARTISTS_SUPPLY_AND_CRAFT_SHOPS
	AUTO_AND_HOME_SUPPLY_STORES
	AUTO_BODY_REPAIR_SHOPS
	AUTO_PAINT_SHOPS
	AUTO_SERVICE_SHOPS
	AUTOMATED_CASH_DISBURSE
	AUTOMATED_FUEL_DISPENSERS
	AUTOMOBILE_ASSOCIATIONS
	AUTOMOTIVE_PARTS_AND_ACCESSORIES_STORES
	AUTOMOTIVE_TIRE_STORES
	BAIL_AND_BOND_PAYMENTS
	BAKERIES
	BANDS_ORCHESTRAS
	BARBER_AND_BEAUTY_SHOPS
	BETTING_CASINO_GAMBLING
	BICYCLE_SHOPS
	BILLIARD_POOL_ESTABLISHMENTS
	BOAT_DEALERS
	BOAT_RENTALS_AND_LEASES
	BOOK_STORES
	BOOKS_PERIODICALS_AND_NEWSPAPERS
	BOWLING_ALLEYS
	BUS_LINES
	BUSINESS_SECRETARIAL_SCHOOLS
	BUYING_SHOPPING_SERVICES
	CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO
	CAMERA_AND_PHOTOGRAPHIC_SUPPLY_STORES
	CANDY_NUT_AND_CONFECTIONERY_STORES
	CAR_AND_TRUCK_DEALERS_NEW_USED
	CAR_AND_TRUCK_DEALERS_USED_ONLY
	CAR_RENTAL_AGENCIES
	CAR_WASHES
	CARPENTRY_SERVICES
	CARPET_UPHOLSTERY_CLEANING
	CATERERS
	CHARITABLE_AND_SOCIAL_SERVICE_ORGANIZATIONS_FUNDRAISING
	CHEMICALS_AND_ALLIED_PRODUCTS
	CHILD_CARE_SERVICES
	CHILDRENS_AND_INFANTS_WEAR_STORES
	CHIROPODISTS_PODIATRISTS
	CHIROPRACTORS
	CIGAR_STORES_AND_STANDS
	CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
	CLEANING_AND_MAINTENANCE
	CLOTHING_RENTAL
	COLLEGES_UNIVERSITIES
	COMMERCIAL_EQUIPMENT
	COMMERCIAL_FOOTWEAR
	COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
	COMMUTER_TRANSPORT_AND_FERRIES
	COMPUTER_NETWORK_SERVICES
	COMPUTER_PROGRAMMING
	COMPUTER_REPAIR
	COMPUTER_SOFTWARE_STORES
	COMPUTERS_PERIPHERALS_AND_SOFTWARE
	CONCRETE_WORK_SERVICES
	CONSTRUCTION_MATERIALS
	CONSULTING_PUBLIC_RELATIONS
	CORRESPONDENCE_SCHOOLS
	COSMETIC_STORES
	COUNSELING_SERVICES
	COUNTRY_CLUBS
	COURIER_SERVICES
	COURT_COSTS
	CREDIT_REPORTING_AGENCIES
	CRUISE_LINES
	DAIRY_PRODUCTS_STORES
	DANCE_HALL_STUDIOS_SCHOOLS
	DATING_ESCORT_SERVICES
	DENTISTS_ORTHODONTISTS
	DEPARTMENT_STORES
	DETECTIVE_AGENCIES
	DIGITAL_GOODS_APPLICATIONS
	DIGITAL_GOODS_GAMES
	DIGITAL_GOODS_LARGE_VOLUME
	DIGITAL_GOODS_MEDIA
	DIRECT_MARKETING_CATALOG_MERCHANT
	DIRECT_MARKETING_COMBINATION_CATALOG_AND_RETAIL_MERCHANT
	DIRECT_MARKETING_INBOUND_TELEMARKETING
	DIRECT_MARKETING_INSURANCE_SERVICES
	DIRECT_MARKETING_OTHER
	DIRECT_MARKETING_OUTBOUND_TELEMARKETING
	DIRECT_MARKETING_SUBSCRIPTION
	DIRECT_MARKETING_TRAVEL
	DISCOUNT_STORES
	DOCTORS
	DOOR_TO_DOOR_SALES
	DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY_STORES
	DRINKING_PLACES
	DRUG_STORES_AND_PHARMACIES
	DRUGS_DRUG_PROPRIETARIES_AND_DRUGGIST_SUNDRIES
	DRY_CLEANERS
	DURABLE_GOODS
	DUTY_FREE_STORES
	EATING_PLACES_RESTAURANTS
	EDUCATIONAL_SERVICES
	ELECTRIC_RAZOR_STORES
	ELECTRICAL_PARTS_AND_EQUIPMENT
	ELECTRICAL_SERVICES
	ELECTRONICS_REPAIR_SHOPS
	ELECTRONICS_STORES
	ELEMENTARY_SECONDARY_SCHOOLS
	EMPLOYMENT_TEMP_AGENCIES
	EQUIPMENT_RENTAL
	EXTERMINATING_SERVICES
	FAMILY_CLOTHING_STORES
	FAST_FOOD_RESTAURANTS
	FINANCIAL_INSTITUTIONS
	FINES_GOVERNMENT_ADMINISTRATIVE_ENTITIES
	FIREPLACE_FIREPLACE_SCREENS_AND_ACCESSORIES_STORES
	FLOOR_COVERING_STORES
	FLORISTS
	FLORISTS_SUPPLIES_NURSERY_STOCK_AND_FLOWERS
	FREEZER_AND_LOCKER_MEAT_PROVISIONERS
	FUEL_DEALERS_NON_AUTOMOTIVE
	FUNERAL_SERVICES_CREMATORIES
	FURNITURE_HOME_FURNISHINGS_AND_EQUIPMENT_STORES_EXCEPT_APPLIANCES
	FURNITURE_REPAIR_REFINISHING
	FURRIERS_AND_FUR_SHOPS
	GENERAL_SERVICES
	GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
	GLASS_PAINT_AND_WALLPAPER_STORES
	GLASSWARE_CRYSTAL_STORES
	GOLF_COURSES_PUBLIC
	GOVERNMENT_SERVICES
	GROCERY_STORES_SUPERMARKETS
	HARDWARE_EQUIPMENT_AND_SUPPLIES
	HARDWARE_STORES
	HEALTH_AND_BEAUTY_SPAS
	HEARING_AIDS_SALES_AND_SUPPLIES
	HEATING_PLUMBING_A_C
	HOBBY_TOY_AND_GAME_SHOPS
	HOME_SUPPLY_WAREHOUSE_STORES
	HOSPITALS
	HOTELS_MOTELS_AND_RESORTS
	HOUSEHOLD_APPLIANCE_STORES
	INDUSTRIAL_SUPPLIES
	INFORMATION_RETRIEVAL_SERVICES
	INSURANCE_DEFAULT
	INSURANCE_UNDERWRITING_PREMIUMS
	INTRA_COMPANY_PURCHASES
	JEWELRY_STORES_WATCHES_CLOCKS_AND_SILVERWARE_STORES
	LANDSCAPING_SERVICES
	LAUNDRIES
	LAUNDRY_CLEANING_SERVICES
	LEGAL_SERVICES_ATTORNEYS
	LUGGAGE_AND_LEATHER_GOODS_STORES
	LUMBER_BUILDING_MATERIALS_STORES
	MANUAL_CASH_DISBURSE
	MARINAS_SERVICE_AND_SUPPLIES
	MASONRY_STONEWORK_AND_PLASTER
	MASSAGE_PARLORS
	MEDICAL_AND_DENTAL_LABS
	MEDICAL_DENTAL_OPHTHALMIC_AND_HOSPITAL_EQUIPMENT_AND_SUPPLIES
	MEDICAL_SERVICES
	MEMBERSHIP_ORGANIZATIONS
	MENS_AND_BOYS_CLOTHING_AND_ACCESSORIES_STORES
	MENS_WOMENS_CLOTHING_STORES
	METAL_SERVICE_CENTERS
	MISCELLANEOUS
	MISCELLANEOUS_APPAREL_AND_ACCESSORY_SHOPS
	MISCELLANEOUS_AUTO_DEALERS
	MISCELLANEOUS_BUSINESS_SERVICES
	MISCELLANEOUS_FOOD_STORES
	MISCELLANEOUS_GENERAL_MERCHANDISE
	MISCELLANEOUS_GENERAL_SERVICES
	MISCELLANEOUS_HOME_FURNISHING_SPECIALTY_STORES
	MISCELLANEOUS_PUBLISHING_AND_PRINTING
	MISCELLANEOUS_RECREATION_SERVICES
	MISCELLANEOUS_REPAIR_SHOPS
	MISCELLANEOUS_SPECIALTY_RETAIL
	MOBILE_HOME_DEALERS
	MOTION_PICTURE_THEATERS
	MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
	MOTOR_HOMES_DEALERS
	MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
	MOTORCYCLE_SHOPS_AND_DEALERS
	MOTORCYCLE_SHOPS_DEALERS
	MUSIC_STORES_MUSICAL_INSTRUMENTS_PIANOS_AND_SHEET_MUSIC
	NEWS_DEALERS_AND_NEWSSTANDS
	NON_FI_MONEY_ORDERS
	NON_FI_STORED_VALUE_CARD_PURCHASE_LOAD
	NONDURABLE_GOODS
	NURSERIES_LAWN_AND_GARDEN_SUPPLY_STORES
	NURSING_PERSONAL_CARE
	OFFICE_AND_COMMERCIAL_FURNITURE
	OPTICIANS_EYEGLASSES
	OPTOMETRISTS_OPHTHALMOLOGIST
	ORTHOPEDIC_GOODS_PROSTHETIC_DEVICES
	OSTEOPATHS
	PACKAGE_STORES_BEER_WINE_AND_LIQUOR
	PAINTS_VARNISHES_AND_SUPPLIES
	PARKING_LOTS_GARAGES
	PASSENGER_RAILWAYS
	PAWN_SHOPS
	PET_SHOPS_PET_FOOD_AND_SUPPLIES
	PETROLEUM_AND_PETROLEUM_PRODUCTS
	PHOTO_DEVELOPING
	PHOTOGRAPHIC_PHOTOCOPY_MICROFILM_EQUIPMENT_AND_SUPPLIES
	PHOTOGRAPHIC_STUDIOS
	PICTURE_VIDEO_PRODUCTION
	PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
	PLUMBING_HEATING_EQUIPMENT_AND_SUPPLIES
	POLITICAL_ORGANIZATIONS
	POSTAL_SERVICES_GOVERNMENT_ONLY
	PRECIOUS_STONES_AND_METALS_WATCHES_AND_JEWELRY
	PROFESSIONAL_SERVICES
	PUBLIC_WAREHOUSING_AND_STORAGE
	QUICK_COPY_REPRO_AND_BLUEPRINT
	RAILROADS
	REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
	RECORD_STORES
	RECREATIONAL_VEHICLE_RENTALS
	RELIGIOUS_GOODS_STORES
	RELIGIOUS_ORGANIZATIONS
	ROOFING_SIDING_SHEET_METAL
	SECRETARIAL_SUPPORT_SERVICES
	SECURITY_BROKERS_DEALERS
	SERVICE_STATIONS
	SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
	SHOE_REPAIR_HAT_CLEANING
	SHOE_STORES
	SMALL_APPLIANCE_REPAIR
	SNOWMOBILE_DEALERS
	SPECIAL_TRADE_SERVICES
	SPECIALTY_CLEANING
	SPORTING_GOODS_STORES
	SPORTING_RECREATION_CAMPS
	SPORTS_AND_RIDING_APPAREL_STORES
	SPORTS_CLUBS_FIELDS
	STAMP_AND_COIN_STORES
	STATIONARY_OFFICE_SUPPLIES_PRINTING_AND_WRITING_PAPER
	STATIONERY_STORES_OFFICE_AND_SCHOOL_SUPPLY_STORES
	SWIMMING_POOLS_SALES
	T_UI_TRAVEL_GERMANY
	TAILORS_ALTERATIONS
	TAX_PAYMENTS_GOVERNMENT_AGENCIES
	TAX_PREPARATION_SERVICES
	TAXICABS_LIMOUSINES
	TELECOMMUNICATION_EQUIPMENT_AND_TELEPHONE_SALES
	TELECOMMUNICATION_SERVICES
	TELEGRAPH_SERVICES
	TENT_AND_AWNING_SHOPS
	TESTING_LABORATORIES
	THEATRICAL_TICKET_AGENCIES
	TIMESHARES
	TIRE_RETREADING_AND_REPAIR
	TOLLS_BRIDGE_FEES
	TOURIST_ATTRACTIONS_AND_EXHIBITS
	TOWING_SERVICES
	TRAILER_PARKS_CAMPGROUNDS
	TRANSPORTATION_SERVICES
	TRAVEL_AGENCIES_TOUR_OPERATORS
	TRUCK_STOP_ITERATION
	TRUCK_UTILITY_TRAILER_RENTALS
	TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
	TYPEWRITER_STORES
	U_S_FEDERAL_GOVERNMENT_AGENCIES_OR_DEPARTMENTS
	UNIFORMS_COMMERCIAL_CLOTHING
	USED_MERCHANDISE_AND_SECONDHAND_STORES
	UTILITIES
	VARIETY_STORES
	VETERINARY_SERVICES
	VIDEO_AMUSEMENT_GAME_SUPPLIES
	VIDEO_GAME_ARCADES
	VIDEO_TAPE_RENTAL_STORES
	VOCATIONAL_TRADE_SCHOOLS
	WATCH_JEWELRY_REPAIR
	WELDING_REPAIR
	WHOLESALE_CLUBS
	WIG_AND_TOUPEE_STORES
	WIRES_MONEY_ORDERS
	WOMENS_ACCESSORY_AND_SPECIALTY_SHOPS
	WOMENS_READY_TO_WEAR_STORES
	WRECKING_AND_SALVAGE_YARDS
}

enum AuthorizationControlsParamV2Input_blocked_categories {
	AC_REFRIGERATION_REPAIR
	ACCOUNTING_BOOKKEEPING_SERVICES
	ADVERTISING_SERVICES
	AGRICULTURAL_COOPERATIVE
	AIRLINES_AIR_CARRIERS
	AIRPORTS_FLYING_FIELDS
	AMBULANCE_SERVICES
	AMUSEMENT_PARKS_CARNIVALS
	ANTIQUE_REPRODUCTIONS
	ANTIQUE_SHOPS
	AQUARIUMS
	ARCHITECTURAL_SURVEYING_SERVICES
	ART_DEALERS_AND_GALLERIES
	ARTISTS_SUPPLY_AND_CRAFT_SHOPS
	AUTO_AND_HOME_SUPPLY_STORES
	AUTO_BODY_REPAIR_SHOPS
	AUTO_PAINT_SHOPS
	AUTO_SERVICE_SHOPS
	AUTOMATED_CASH_DISBURSE
	AUTOMATED_FUEL_DISPENSERS
	AUTOMOBILE_ASSOCIATIONS
	AUTOMOTIVE_PARTS_AND_ACCESSORIES_STORES
	AUTOMOTIVE_TIRE_STORES
	BAIL_AND_BOND_PAYMENTS
	BAKERIES
	BANDS_ORCHESTRAS
	BARBER_AND_BEAUTY_SHOPS
	BETTING_CASINO_GAMBLING
	BICYCLE_SHOPS
	BILLIARD_POOL_ESTABLISHMENTS
	BOAT_DEALERS
	BOAT_RENTALS_AND_LEASES
	BOOK_STORES
	BOOKS_PERIODICALS_AND_NEWSPAPERS
	BOWLING_ALLEYS
	BUS_LINES
	BUSINESS_SECRETARIAL_SCHOOLS
	BUYING_SHOPPING_SERVICES
	CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO
	CAMERA_AND_PHOTOGRAPHIC_SUPPLY_STORES
	CANDY_NUT_AND_CONFECTIONERY_STORES
	CAR_AND_TRUCK_DEALERS_NEW_USED
	CAR_AND_TRUCK_DEALERS_USED_ONLY
	CAR_RENTAL_AGENCIES
	CAR_WASHES
	CARPENTRY_SERVICES
	CARPET_UPHOLSTERY_CLEANING
	CATERERS
	CHARITABLE_AND_SOCIAL_SERVICE_ORGANIZATIONS_FUNDRAISING
	CHEMICALS_AND_ALLIED_PRODUCTS
	CHILD_CARE_SERVICES
	CHILDRENS_AND_INFANTS_WEAR_STORES
	CHIROPODISTS_PODIATRISTS
	CHIROPRACTORS
	CIGAR_STORES_AND_STANDS
	CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
	CLEANING_AND_MAINTENANCE
	CLOTHING_RENTAL
	COLLEGES_UNIVERSITIES
	COMMERCIAL_EQUIPMENT
	COMMERCIAL_FOOTWEAR
	COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
	COMMUTER_TRANSPORT_AND_FERRIES
	COMPUTER_NETWORK_SERVICES
	COMPUTER_PROGRAMMING
	COMPUTER_REPAIR
	COMPUTER_SOFTWARE_STORES
	COMPUTERS_PERIPHERALS_AND_SOFTWARE
	CONCRETE_WORK_SERVICES
	CONSTRUCTION_MATERIALS
	CONSULTING_PUBLIC_RELATIONS
	CORRESPONDENCE_SCHOOLS
	COSMETIC_STORES
	COUNSELING_SERVICES
	COUNTRY_CLUBS
	COURIER_SERVICES
	COURT_COSTS
	CREDIT_REPORTING_AGENCIES
	CRUISE_LINES
	DAIRY_PRODUCTS_STORES
	DANCE_HALL_STUDIOS_SCHOOLS
	DATING_ESCORT_SERVICES
	DENTISTS_ORTHODONTISTS
	DEPARTMENT_STORES
	DETECTIVE_AGENCIES
	DIGITAL_GOODS_APPLICATIONS
	DIGITAL_GOODS_GAMES
	DIGITAL_GOODS_LARGE_VOLUME
	DIGITAL_GOODS_MEDIA
	DIRECT_MARKETING_CATALOG_MERCHANT
	DIRECT_MARKETING_COMBINATION_CATALOG_AND_RETAIL_MERCHANT
	DIRECT_MARKETING_INBOUND_TELEMARKETING
	DIRECT_MARKETING_INSURANCE_SERVICES
	DIRECT_MARKETING_OTHER
	DIRECT_MARKETING_OUTBOUND_TELEMARKETING
	DIRECT_MARKETING_SUBSCRIPTION
	DIRECT_MARKETING_TRAVEL
	DISCOUNT_STORES
	DOCTORS
	DOOR_TO_DOOR_SALES
	DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY_STORES
	DRINKING_PLACES
	DRUG_STORES_AND_PHARMACIES
	DRUGS_DRUG_PROPRIETARIES_AND_DRUGGIST_SUNDRIES
	DRY_CLEANERS
	DURABLE_GOODS
	DUTY_FREE_STORES
	EATING_PLACES_RESTAURANTS
	EDUCATIONAL_SERVICES
	ELECTRIC_RAZOR_STORES
	ELECTRICAL_PARTS_AND_EQUIPMENT
	ELECTRICAL_SERVICES
	ELECTRONICS_REPAIR_SHOPS
	ELECTRONICS_STORES
	ELEMENTARY_SECONDARY_SCHOOLS
	EMPLOYMENT_TEMP_AGENCIES
	EQUIPMENT_RENTAL
	EXTERMINATING_SERVICES
	FAMILY_CLOTHING_STORES
	FAST_FOOD_RESTAURANTS
	FINANCIAL_INSTITUTIONS
	FINES_GOVERNMENT_ADMINISTRATIVE_ENTITIES
	FIREPLACE_FIREPLACE_SCREENS_AND_ACCESSORIES_STORES
	FLOOR_COVERING_STORES
	FLORISTS
	FLORISTS_SUPPLIES_NURSERY_STOCK_AND_FLOWERS
	FREEZER_AND_LOCKER_MEAT_PROVISIONERS
	FUEL_DEALERS_NON_AUTOMOTIVE
	FUNERAL_SERVICES_CREMATORIES
	FURNITURE_HOME_FURNISHINGS_AND_EQUIPMENT_STORES_EXCEPT_APPLIANCES
	FURNITURE_REPAIR_REFINISHING
	FURRIERS_AND_FUR_SHOPS
	GENERAL_SERVICES
	GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
	GLASS_PAINT_AND_WALLPAPER_STORES
	GLASSWARE_CRYSTAL_STORES
	GOLF_COURSES_PUBLIC
	GOVERNMENT_SERVICES
	GROCERY_STORES_SUPERMARKETS
	HARDWARE_EQUIPMENT_AND_SUPPLIES
	HARDWARE_STORES
	HEALTH_AND_BEAUTY_SPAS
	HEARING_AIDS_SALES_AND_SUPPLIES
	HEATING_PLUMBING_A_C
	HOBBY_TOY_AND_GAME_SHOPS
	HOME_SUPPLY_WAREHOUSE_STORES
	HOSPITALS
	HOTELS_MOTELS_AND_RESORTS
	HOUSEHOLD_APPLIANCE_STORES
	INDUSTRIAL_SUPPLIES
	INFORMATION_RETRIEVAL_SERVICES
	INSURANCE_DEFAULT
	INSURANCE_UNDERWRITING_PREMIUMS
	INTRA_COMPANY_PURCHASES
	JEWELRY_STORES_WATCHES_CLOCKS_AND_SILVERWARE_STORES
	LANDSCAPING_SERVICES
	LAUNDRIES
	LAUNDRY_CLEANING_SERVICES
	LEGAL_SERVICES_ATTORNEYS
	LUGGAGE_AND_LEATHER_GOODS_STORES
	LUMBER_BUILDING_MATERIALS_STORES
	MANUAL_CASH_DISBURSE
	MARINAS_SERVICE_AND_SUPPLIES
	MASONRY_STONEWORK_AND_PLASTER
	MASSAGE_PARLORS
	MEDICAL_AND_DENTAL_LABS
	MEDICAL_DENTAL_OPHTHALMIC_AND_HOSPITAL_EQUIPMENT_AND_SUPPLIES
	MEDICAL_SERVICES
	MEMBERSHIP_ORGANIZATIONS
	MENS_AND_BOYS_CLOTHING_AND_ACCESSORIES_STORES
	MENS_WOMENS_CLOTHING_STORES
	METAL_SERVICE_CENTERS
	MISCELLANEOUS
	MISCELLANEOUS_APPAREL_AND_ACCESSORY_SHOPS
	MISCELLANEOUS_AUTO_DEALERS
	MISCELLANEOUS_BUSINESS_SERVICES
	MISCELLANEOUS_FOOD_STORES
	MISCELLANEOUS_GENERAL_MERCHANDISE
	MISCELLANEOUS_GENERAL_SERVICES
	MISCELLANEOUS_HOME_FURNISHING_SPECIALTY_STORES
	MISCELLANEOUS_PUBLISHING_AND_PRINTING
	MISCELLANEOUS_RECREATION_SERVICES
	MISCELLANEOUS_REPAIR_SHOPS
	MISCELLANEOUS_SPECIALTY_RETAIL
	MOBILE_HOME_DEALERS
	MOTION_PICTURE_THEATERS
	MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
	MOTOR_HOMES_DEALERS
	MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
	MOTORCYCLE_SHOPS_AND_DEALERS
	MOTORCYCLE_SHOPS_DEALERS
	MUSIC_STORES_MUSICAL_INSTRUMENTS_PIANOS_AND_SHEET_MUSIC
	NEWS_DEALERS_AND_NEWSSTANDS
	NON_FI_MONEY_ORDERS
	NON_FI_STORED_VALUE_CARD_PURCHASE_LOAD
	NONDURABLE_GOODS
	NURSERIES_LAWN_AND_GARDEN_SUPPLY_STORES
	NURSING_PERSONAL_CARE
	OFFICE_AND_COMMERCIAL_FURNITURE
	OPTICIANS_EYEGLASSES
	OPTOMETRISTS_OPHTHALMOLOGIST
	ORTHOPEDIC_GOODS_PROSTHETIC_DEVICES
	OSTEOPATHS
	PACKAGE_STORES_BEER_WINE_AND_LIQUOR
	PAINTS_VARNISHES_AND_SUPPLIES
	PARKING_LOTS_GARAGES
	PASSENGER_RAILWAYS
	PAWN_SHOPS
	PET_SHOPS_PET_FOOD_AND_SUPPLIES
	PETROLEUM_AND_PETROLEUM_PRODUCTS
	PHOTO_DEVELOPING
	PHOTOGRAPHIC_PHOTOCOPY_MICROFILM_EQUIPMENT_AND_SUPPLIES
	PHOTOGRAPHIC_STUDIOS
	PICTURE_VIDEO_PRODUCTION
	PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
	PLUMBING_HEATING_EQUIPMENT_AND_SUPPLIES
	POLITICAL_ORGANIZATIONS
	POSTAL_SERVICES_GOVERNMENT_ONLY
	PRECIOUS_STONES_AND_METALS_WATCHES_AND_JEWELRY
	PROFESSIONAL_SERVICES
	PUBLIC_WAREHOUSING_AND_STORAGE
	QUICK_COPY_REPRO_AND_BLUEPRINT
	RAILROADS
	REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
	RECORD_STORES
	RECREATIONAL_VEHICLE_RENTALS
	RELIGIOUS_GOODS_STORES
	RELIGIOUS_ORGANIZATIONS
	ROOFING_SIDING_SHEET_METAL
	SECRETARIAL_SUPPORT_SERVICES
	SECURITY_BROKERS_DEALERS
	SERVICE_STATIONS
	SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
	SHOE_REPAIR_HAT_CLEANING
	SHOE_STORES
	SMALL_APPLIANCE_REPAIR
	SNOWMOBILE_DEALERS
	SPECIAL_TRADE_SERVICES
	SPECIALTY_CLEANING
	SPORTING_GOODS_STORES
	SPORTING_RECREATION_CAMPS
	SPORTS_AND_RIDING_APPAREL_STORES
	SPORTS_CLUBS_FIELDS
	STAMP_AND_COIN_STORES
	STATIONARY_OFFICE_SUPPLIES_PRINTING_AND_WRITING_PAPER
	STATIONERY_STORES_OFFICE_AND_SCHOOL_SUPPLY_STORES
	SWIMMING_POOLS_SALES
	T_UI_TRAVEL_GERMANY
	TAILORS_ALTERATIONS
	TAX_PAYMENTS_GOVERNMENT_AGENCIES
	TAX_PREPARATION_SERVICES
	TAXICABS_LIMOUSINES
	TELECOMMUNICATION_EQUIPMENT_AND_TELEPHONE_SALES
	TELECOMMUNICATION_SERVICES
	TELEGRAPH_SERVICES
	TENT_AND_AWNING_SHOPS
	TESTING_LABORATORIES
	THEATRICAL_TICKET_AGENCIES
	TIMESHARES
	TIRE_RETREADING_AND_REPAIR
	TOLLS_BRIDGE_FEES
	TOURIST_ATTRACTIONS_AND_EXHIBITS
	TOWING_SERVICES
	TRAILER_PARKS_CAMPGROUNDS
	TRANSPORTATION_SERVICES
	TRAVEL_AGENCIES_TOUR_OPERATORS
	TRUCK_STOP_ITERATION
	TRUCK_UTILITY_TRAILER_RENTALS
	TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
	TYPEWRITER_STORES
	U_S_FEDERAL_GOVERNMENT_AGENCIES_OR_DEPARTMENTS
	UNIFORMS_COMMERCIAL_CLOTHING
	USED_MERCHANDISE_AND_SECONDHAND_STORES
	UTILITIES
	VARIETY_STORES
	VETERINARY_SERVICES
	VIDEO_AMUSEMENT_GAME_SUPPLIES
	VIDEO_GAME_ARCADES
	VIDEO_TAPE_RENTAL_STORES
	VOCATIONAL_TRADE_SCHOOLS
	WATCH_JEWELRY_REPAIR
	WELDING_REPAIR
	WHOLESALE_CLUBS
	WIG_AND_TOUPEE_STORES
	WIRES_MONEY_ORDERS
	WOMENS_ACCESSORY_AND_SPECIALTY_SHOPS
	WOMENS_READY_TO_WEAR_STORES
	WRECKING_AND_SALVAGE_YARDS
}

input SpendingLimitsParamInput {
	amount: Int!
	categories: [SpendingLimitsParamInput_categories]
	interval: SpendingLimitsParamInput_interval!
}

enum SpendingLimitsParamInput_categories {
	AC_REFRIGERATION_REPAIR
	ACCOUNTING_BOOKKEEPING_SERVICES
	ADVERTISING_SERVICES
	AGRICULTURAL_COOPERATIVE
	AIRLINES_AIR_CARRIERS
	AIRPORTS_FLYING_FIELDS
	AMBULANCE_SERVICES
	AMUSEMENT_PARKS_CARNIVALS
	ANTIQUE_REPRODUCTIONS
	ANTIQUE_SHOPS
	AQUARIUMS
	ARCHITECTURAL_SURVEYING_SERVICES
	ART_DEALERS_AND_GALLERIES
	ARTISTS_SUPPLY_AND_CRAFT_SHOPS
	AUTO_AND_HOME_SUPPLY_STORES
	AUTO_BODY_REPAIR_SHOPS
	AUTO_PAINT_SHOPS
	AUTO_SERVICE_SHOPS
	AUTOMATED_CASH_DISBURSE
	AUTOMATED_FUEL_DISPENSERS
	AUTOMOBILE_ASSOCIATIONS
	AUTOMOTIVE_PARTS_AND_ACCESSORIES_STORES
	AUTOMOTIVE_TIRE_STORES
	BAIL_AND_BOND_PAYMENTS
	BAKERIES
	BANDS_ORCHESTRAS
	BARBER_AND_BEAUTY_SHOPS
	BETTING_CASINO_GAMBLING
	BICYCLE_SHOPS
	BILLIARD_POOL_ESTABLISHMENTS
	BOAT_DEALERS
	BOAT_RENTALS_AND_LEASES
	BOOK_STORES
	BOOKS_PERIODICALS_AND_NEWSPAPERS
	BOWLING_ALLEYS
	BUS_LINES
	BUSINESS_SECRETARIAL_SCHOOLS
	BUYING_SHOPPING_SERVICES
	CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO
	CAMERA_AND_PHOTOGRAPHIC_SUPPLY_STORES
	CANDY_NUT_AND_CONFECTIONERY_STORES
	CAR_AND_TRUCK_DEALERS_NEW_USED
	CAR_AND_TRUCK_DEALERS_USED_ONLY
	CAR_RENTAL_AGENCIES
	CAR_WASHES
	CARPENTRY_SERVICES
	CARPET_UPHOLSTERY_CLEANING
	CATERERS
	CHARITABLE_AND_SOCIAL_SERVICE_ORGANIZATIONS_FUNDRAISING
	CHEMICALS_AND_ALLIED_PRODUCTS
	CHILD_CARE_SERVICES
	CHILDRENS_AND_INFANTS_WEAR_STORES
	CHIROPODISTS_PODIATRISTS
	CHIROPRACTORS
	CIGAR_STORES_AND_STANDS
	CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
	CLEANING_AND_MAINTENANCE
	CLOTHING_RENTAL
	COLLEGES_UNIVERSITIES
	COMMERCIAL_EQUIPMENT
	COMMERCIAL_FOOTWEAR
	COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
	COMMUTER_TRANSPORT_AND_FERRIES
	COMPUTER_NETWORK_SERVICES
	COMPUTER_PROGRAMMING
	COMPUTER_REPAIR
	COMPUTER_SOFTWARE_STORES
	COMPUTERS_PERIPHERALS_AND_SOFTWARE
	CONCRETE_WORK_SERVICES
	CONSTRUCTION_MATERIALS
	CONSULTING_PUBLIC_RELATIONS
	CORRESPONDENCE_SCHOOLS
	COSMETIC_STORES
	COUNSELING_SERVICES
	COUNTRY_CLUBS
	COURIER_SERVICES
	COURT_COSTS
	CREDIT_REPORTING_AGENCIES
	CRUISE_LINES
	DAIRY_PRODUCTS_STORES
	DANCE_HALL_STUDIOS_SCHOOLS
	DATING_ESCORT_SERVICES
	DENTISTS_ORTHODONTISTS
	DEPARTMENT_STORES
	DETECTIVE_AGENCIES
	DIGITAL_GOODS_APPLICATIONS
	DIGITAL_GOODS_GAMES
	DIGITAL_GOODS_LARGE_VOLUME
	DIGITAL_GOODS_MEDIA
	DIRECT_MARKETING_CATALOG_MERCHANT
	DIRECT_MARKETING_COMBINATION_CATALOG_AND_RETAIL_MERCHANT
	DIRECT_MARKETING_INBOUND_TELEMARKETING
	DIRECT_MARKETING_INSURANCE_SERVICES
	DIRECT_MARKETING_OTHER
	DIRECT_MARKETING_OUTBOUND_TELEMARKETING
	DIRECT_MARKETING_SUBSCRIPTION
	DIRECT_MARKETING_TRAVEL
	DISCOUNT_STORES
	DOCTORS
	DOOR_TO_DOOR_SALES
	DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY_STORES
	DRINKING_PLACES
	DRUG_STORES_AND_PHARMACIES
	DRUGS_DRUG_PROPRIETARIES_AND_DRUGGIST_SUNDRIES
	DRY_CLEANERS
	DURABLE_GOODS
	DUTY_FREE_STORES
	EATING_PLACES_RESTAURANTS
	EDUCATIONAL_SERVICES
	ELECTRIC_RAZOR_STORES
	ELECTRICAL_PARTS_AND_EQUIPMENT
	ELECTRICAL_SERVICES
	ELECTRONICS_REPAIR_SHOPS
	ELECTRONICS_STORES
	ELEMENTARY_SECONDARY_SCHOOLS
	EMPLOYMENT_TEMP_AGENCIES
	EQUIPMENT_RENTAL
	EXTERMINATING_SERVICES
	FAMILY_CLOTHING_STORES
	FAST_FOOD_RESTAURANTS
	FINANCIAL_INSTITUTIONS
	FINES_GOVERNMENT_ADMINISTRATIVE_ENTITIES
	FIREPLACE_FIREPLACE_SCREENS_AND_ACCESSORIES_STORES
	FLOOR_COVERING_STORES
	FLORISTS
	FLORISTS_SUPPLIES_NURSERY_STOCK_AND_FLOWERS
	FREEZER_AND_LOCKER_MEAT_PROVISIONERS
	FUEL_DEALERS_NON_AUTOMOTIVE
	FUNERAL_SERVICES_CREMATORIES
	FURNITURE_HOME_FURNISHINGS_AND_EQUIPMENT_STORES_EXCEPT_APPLIANCES
	FURNITURE_REPAIR_REFINISHING
	FURRIERS_AND_FUR_SHOPS
	GENERAL_SERVICES
	GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
	GLASS_PAINT_AND_WALLPAPER_STORES
	GLASSWARE_CRYSTAL_STORES
	GOLF_COURSES_PUBLIC
	GOVERNMENT_SERVICES
	GROCERY_STORES_SUPERMARKETS
	HARDWARE_EQUIPMENT_AND_SUPPLIES
	HARDWARE_STORES
	HEALTH_AND_BEAUTY_SPAS
	HEARING_AIDS_SALES_AND_SUPPLIES
	HEATING_PLUMBING_A_C
	HOBBY_TOY_AND_GAME_SHOPS
	HOME_SUPPLY_WAREHOUSE_STORES
	HOSPITALS
	HOTELS_MOTELS_AND_RESORTS
	HOUSEHOLD_APPLIANCE_STORES
	INDUSTRIAL_SUPPLIES
	INFORMATION_RETRIEVAL_SERVICES
	INSURANCE_DEFAULT
	INSURANCE_UNDERWRITING_PREMIUMS
	INTRA_COMPANY_PURCHASES
	JEWELRY_STORES_WATCHES_CLOCKS_AND_SILVERWARE_STORES
	LANDSCAPING_SERVICES
	LAUNDRIES
	LAUNDRY_CLEANING_SERVICES
	LEGAL_SERVICES_ATTORNEYS
	LUGGAGE_AND_LEATHER_GOODS_STORES
	LUMBER_BUILDING_MATERIALS_STORES
	MANUAL_CASH_DISBURSE
	MARINAS_SERVICE_AND_SUPPLIES
	MASONRY_STONEWORK_AND_PLASTER
	MASSAGE_PARLORS
	MEDICAL_AND_DENTAL_LABS
	MEDICAL_DENTAL_OPHTHALMIC_AND_HOSPITAL_EQUIPMENT_AND_SUPPLIES
	MEDICAL_SERVICES
	MEMBERSHIP_ORGANIZATIONS
	MENS_AND_BOYS_CLOTHING_AND_ACCESSORIES_STORES
	MENS_WOMENS_CLOTHING_STORES
	METAL_SERVICE_CENTERS
	MISCELLANEOUS
	MISCELLANEOUS_APPAREL_AND_ACCESSORY_SHOPS
	MISCELLANEOUS_AUTO_DEALERS
	MISCELLANEOUS_BUSINESS_SERVICES
	MISCELLANEOUS_FOOD_STORES
	MISCELLANEOUS_GENERAL_MERCHANDISE
	MISCELLANEOUS_GENERAL_SERVICES
	MISCELLANEOUS_HOME_FURNISHING_SPECIALTY_STORES
	MISCELLANEOUS_PUBLISHING_AND_PRINTING
	MISCELLANEOUS_RECREATION_SERVICES
	MISCELLANEOUS_REPAIR_SHOPS
	MISCELLANEOUS_SPECIALTY_RETAIL
	MOBILE_HOME_DEALERS
	MOTION_PICTURE_THEATERS
	MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
	MOTOR_HOMES_DEALERS
	MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
	MOTORCYCLE_SHOPS_AND_DEALERS
	MOTORCYCLE_SHOPS_DEALERS
	MUSIC_STORES_MUSICAL_INSTRUMENTS_PIANOS_AND_SHEET_MUSIC
	NEWS_DEALERS_AND_NEWSSTANDS
	NON_FI_MONEY_ORDERS
	NON_FI_STORED_VALUE_CARD_PURCHASE_LOAD
	NONDURABLE_GOODS
	NURSERIES_LAWN_AND_GARDEN_SUPPLY_STORES
	NURSING_PERSONAL_CARE
	OFFICE_AND_COMMERCIAL_FURNITURE
	OPTICIANS_EYEGLASSES
	OPTOMETRISTS_OPHTHALMOLOGIST
	ORTHOPEDIC_GOODS_PROSTHETIC_DEVICES
	OSTEOPATHS
	PACKAGE_STORES_BEER_WINE_AND_LIQUOR
	PAINTS_VARNISHES_AND_SUPPLIES
	PARKING_LOTS_GARAGES
	PASSENGER_RAILWAYS
	PAWN_SHOPS
	PET_SHOPS_PET_FOOD_AND_SUPPLIES
	PETROLEUM_AND_PETROLEUM_PRODUCTS
	PHOTO_DEVELOPING
	PHOTOGRAPHIC_PHOTOCOPY_MICROFILM_EQUIPMENT_AND_SUPPLIES
	PHOTOGRAPHIC_STUDIOS
	PICTURE_VIDEO_PRODUCTION
	PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
	PLUMBING_HEATING_EQUIPMENT_AND_SUPPLIES
	POLITICAL_ORGANIZATIONS
	POSTAL_SERVICES_GOVERNMENT_ONLY
	PRECIOUS_STONES_AND_METALS_WATCHES_AND_JEWELRY
	PROFESSIONAL_SERVICES
	PUBLIC_WAREHOUSING_AND_STORAGE
	QUICK_COPY_REPRO_AND_BLUEPRINT
	RAILROADS
	REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
	RECORD_STORES
	RECREATIONAL_VEHICLE_RENTALS
	RELIGIOUS_GOODS_STORES
	RELIGIOUS_ORGANIZATIONS
	ROOFING_SIDING_SHEET_METAL
	SECRETARIAL_SUPPORT_SERVICES
	SECURITY_BROKERS_DEALERS
	SERVICE_STATIONS
	SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
	SHOE_REPAIR_HAT_CLEANING
	SHOE_STORES
	SMALL_APPLIANCE_REPAIR
	SNOWMOBILE_DEALERS
	SPECIAL_TRADE_SERVICES
	SPECIALTY_CLEANING
	SPORTING_GOODS_STORES
	SPORTING_RECREATION_CAMPS
	SPORTS_AND_RIDING_APPAREL_STORES
	SPORTS_CLUBS_FIELDS
	STAMP_AND_COIN_STORES
	STATIONARY_OFFICE_SUPPLIES_PRINTING_AND_WRITING_PAPER
	STATIONERY_STORES_OFFICE_AND_SCHOOL_SUPPLY_STORES
	SWIMMING_POOLS_SALES
	T_UI_TRAVEL_GERMANY
	TAILORS_ALTERATIONS
	TAX_PAYMENTS_GOVERNMENT_AGENCIES
	TAX_PREPARATION_SERVICES
	TAXICABS_LIMOUSINES
	TELECOMMUNICATION_EQUIPMENT_AND_TELEPHONE_SALES
	TELECOMMUNICATION_SERVICES
	TELEGRAPH_SERVICES
	TENT_AND_AWNING_SHOPS
	TESTING_LABORATORIES
	THEATRICAL_TICKET_AGENCIES
	TIMESHARES
	TIRE_RETREADING_AND_REPAIR
	TOLLS_BRIDGE_FEES
	TOURIST_ATTRACTIONS_AND_EXHIBITS
	TOWING_SERVICES
	TRAILER_PARKS_CAMPGROUNDS
	TRANSPORTATION_SERVICES
	TRAVEL_AGENCIES_TOUR_OPERATORS
	TRUCK_STOP_ITERATION
	TRUCK_UTILITY_TRAILER_RENTALS
	TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
	TYPEWRITER_STORES
	U_S_FEDERAL_GOVERNMENT_AGENCIES_OR_DEPARTMENTS
	UNIFORMS_COMMERCIAL_CLOTHING
	USED_MERCHANDISE_AND_SECONDHAND_STORES
	UTILITIES
	VARIETY_STORES
	VETERINARY_SERVICES
	VIDEO_AMUSEMENT_GAME_SUPPLIES
	VIDEO_GAME_ARCADES
	VIDEO_TAPE_RENTAL_STORES
	VOCATIONAL_TRADE_SCHOOLS
	WATCH_JEWELRY_REPAIR
	WELDING_REPAIR
	WHOLESALE_CLUBS
	WIG_AND_TOUPEE_STORES
	WIRES_MONEY_ORDERS
	WOMENS_ACCESSORY_AND_SPECIALTY_SHOPS
	WOMENS_READY_TO_WEAR_STORES
	WRECKING_AND_SALVAGE_YARDS
}

enum SpendingLimitsParamInput_interval {
	ALL_TIME
	DAILY
	MONTHLY
	PER_AUTHORIZATION
	WEEKLY
	YEARLY
}

enum PostV1IssuingCardholdersInput_status {
	ACTIVE
	INACTIVE
}

enum PostV1IssuingCardholdersInput_type {
	COMPANY
	INDIVIDUAL
}

input PostV1IssuingCardholdersCardholderInput {
	billing: BillingSpecsInput
	company: CompanyParamInput
	email: String
	expand: [String]
	individual: IndividualParamInput
	metadata: JSON
	phone_number: String
	spending_controls: AuthorizationControlsParamV2Input
	status: PostV1IssuingCardholdersCardholderInput_status
}

enum PostV1IssuingCardholdersCardholderInput_status {
	ACTIVE
	INACTIVE
}

type IssuingCardList {
	has_more: Boolean!
	object: IssuingCardList_object!
	url: String!
}

enum IssuingCardList_object {
	LIST
}

enum GetIssuingCards_status {
	ACTIVE
	CANCELED
	INACTIVE
}

enum GetIssuingCards_type {
	PHYSICAL
	VIRTUAL
}

input PostV1IssuingCardsInput {
	cardholder: String
	currency: String!
	expand: [String]
	financial_account: String
	metadata: JSON
	replacement_for: String
	replacement_reason: PostV1IssuingCardsInput_replacement_reason
	shipping: ShippingSpecsInput
	spending_controls: AuthorizationControlsParamInput
	status: PostV1IssuingCardsInput_status
	type: PostV1IssuingCardsInput_type!
}

enum PostV1IssuingCardsInput_replacement_reason {
	DAMAGED
	EXPIRED
	LOST
	STOLEN
}

input ShippingSpecsInput {
	address: RequiredAddressInput!
	customs: CustomsParamInput
	name: String!
	phone_number: String
	require_signature: Boolean
	service: ShippingSpecsInput_service
	type: ShippingSpecsInput_type
}

input CustomsParamInput {
	eori_number: String
}

enum ShippingSpecsInput_service {
	EXPRESS
	PRIORITY
	STANDARD
}

enum ShippingSpecsInput_type {
	BULK
	INDIVIDUAL
}

input AuthorizationControlsParamInput {
	allowed_categories: [AuthorizationControlsParamInput_allowed_categories]
	blocked_categories: [AuthorizationControlsParamInput_blocked_categories]
	spending_limits: [SpendingLimitsParamInput]
}

enum AuthorizationControlsParamInput_allowed_categories {
	AC_REFRIGERATION_REPAIR
	ACCOUNTING_BOOKKEEPING_SERVICES
	ADVERTISING_SERVICES
	AGRICULTURAL_COOPERATIVE
	AIRLINES_AIR_CARRIERS
	AIRPORTS_FLYING_FIELDS
	AMBULANCE_SERVICES
	AMUSEMENT_PARKS_CARNIVALS
	ANTIQUE_REPRODUCTIONS
	ANTIQUE_SHOPS
	AQUARIUMS
	ARCHITECTURAL_SURVEYING_SERVICES
	ART_DEALERS_AND_GALLERIES
	ARTISTS_SUPPLY_AND_CRAFT_SHOPS
	AUTO_AND_HOME_SUPPLY_STORES
	AUTO_BODY_REPAIR_SHOPS
	AUTO_PAINT_SHOPS
	AUTO_SERVICE_SHOPS
	AUTOMATED_CASH_DISBURSE
	AUTOMATED_FUEL_DISPENSERS
	AUTOMOBILE_ASSOCIATIONS
	AUTOMOTIVE_PARTS_AND_ACCESSORIES_STORES
	AUTOMOTIVE_TIRE_STORES
	BAIL_AND_BOND_PAYMENTS
	BAKERIES
	BANDS_ORCHESTRAS
	BARBER_AND_BEAUTY_SHOPS
	BETTING_CASINO_GAMBLING
	BICYCLE_SHOPS
	BILLIARD_POOL_ESTABLISHMENTS
	BOAT_DEALERS
	BOAT_RENTALS_AND_LEASES
	BOOK_STORES
	BOOKS_PERIODICALS_AND_NEWSPAPERS
	BOWLING_ALLEYS
	BUS_LINES
	BUSINESS_SECRETARIAL_SCHOOLS
	BUYING_SHOPPING_SERVICES
	CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO
	CAMERA_AND_PHOTOGRAPHIC_SUPPLY_STORES
	CANDY_NUT_AND_CONFECTIONERY_STORES
	CAR_AND_TRUCK_DEALERS_NEW_USED
	CAR_AND_TRUCK_DEALERS_USED_ONLY
	CAR_RENTAL_AGENCIES
	CAR_WASHES
	CARPENTRY_SERVICES
	CARPET_UPHOLSTERY_CLEANING
	CATERERS
	CHARITABLE_AND_SOCIAL_SERVICE_ORGANIZATIONS_FUNDRAISING
	CHEMICALS_AND_ALLIED_PRODUCTS
	CHILD_CARE_SERVICES
	CHILDRENS_AND_INFANTS_WEAR_STORES
	CHIROPODISTS_PODIATRISTS
	CHIROPRACTORS
	CIGAR_STORES_AND_STANDS
	CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
	CLEANING_AND_MAINTENANCE
	CLOTHING_RENTAL
	COLLEGES_UNIVERSITIES
	COMMERCIAL_EQUIPMENT
	COMMERCIAL_FOOTWEAR
	COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
	COMMUTER_TRANSPORT_AND_FERRIES
	COMPUTER_NETWORK_SERVICES
	COMPUTER_PROGRAMMING
	COMPUTER_REPAIR
	COMPUTER_SOFTWARE_STORES
	COMPUTERS_PERIPHERALS_AND_SOFTWARE
	CONCRETE_WORK_SERVICES
	CONSTRUCTION_MATERIALS
	CONSULTING_PUBLIC_RELATIONS
	CORRESPONDENCE_SCHOOLS
	COSMETIC_STORES
	COUNSELING_SERVICES
	COUNTRY_CLUBS
	COURIER_SERVICES
	COURT_COSTS
	CREDIT_REPORTING_AGENCIES
	CRUISE_LINES
	DAIRY_PRODUCTS_STORES
	DANCE_HALL_STUDIOS_SCHOOLS
	DATING_ESCORT_SERVICES
	DENTISTS_ORTHODONTISTS
	DEPARTMENT_STORES
	DETECTIVE_AGENCIES
	DIGITAL_GOODS_APPLICATIONS
	DIGITAL_GOODS_GAMES
	DIGITAL_GOODS_LARGE_VOLUME
	DIGITAL_GOODS_MEDIA
	DIRECT_MARKETING_CATALOG_MERCHANT
	DIRECT_MARKETING_COMBINATION_CATALOG_AND_RETAIL_MERCHANT
	DIRECT_MARKETING_INBOUND_TELEMARKETING
	DIRECT_MARKETING_INSURANCE_SERVICES
	DIRECT_MARKETING_OTHER
	DIRECT_MARKETING_OUTBOUND_TELEMARKETING
	DIRECT_MARKETING_SUBSCRIPTION
	DIRECT_MARKETING_TRAVEL
	DISCOUNT_STORES
	DOCTORS
	DOOR_TO_DOOR_SALES
	DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY_STORES
	DRINKING_PLACES
	DRUG_STORES_AND_PHARMACIES
	DRUGS_DRUG_PROPRIETARIES_AND_DRUGGIST_SUNDRIES
	DRY_CLEANERS
	DURABLE_GOODS
	DUTY_FREE_STORES
	EATING_PLACES_RESTAURANTS
	EDUCATIONAL_SERVICES
	ELECTRIC_RAZOR_STORES
	ELECTRICAL_PARTS_AND_EQUIPMENT
	ELECTRICAL_SERVICES
	ELECTRONICS_REPAIR_SHOPS
	ELECTRONICS_STORES
	ELEMENTARY_SECONDARY_SCHOOLS
	EMPLOYMENT_TEMP_AGENCIES
	EQUIPMENT_RENTAL
	EXTERMINATING_SERVICES
	FAMILY_CLOTHING_STORES
	FAST_FOOD_RESTAURANTS
	FINANCIAL_INSTITUTIONS
	FINES_GOVERNMENT_ADMINISTRATIVE_ENTITIES
	FIREPLACE_FIREPLACE_SCREENS_AND_ACCESSORIES_STORES
	FLOOR_COVERING_STORES
	FLORISTS
	FLORISTS_SUPPLIES_NURSERY_STOCK_AND_FLOWERS
	FREEZER_AND_LOCKER_MEAT_PROVISIONERS
	FUEL_DEALERS_NON_AUTOMOTIVE
	FUNERAL_SERVICES_CREMATORIES
	FURNITURE_HOME_FURNISHINGS_AND_EQUIPMENT_STORES_EXCEPT_APPLIANCES
	FURNITURE_REPAIR_REFINISHING
	FURRIERS_AND_FUR_SHOPS
	GENERAL_SERVICES
	GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
	GLASS_PAINT_AND_WALLPAPER_STORES
	GLASSWARE_CRYSTAL_STORES
	GOLF_COURSES_PUBLIC
	GOVERNMENT_SERVICES
	GROCERY_STORES_SUPERMARKETS
	HARDWARE_EQUIPMENT_AND_SUPPLIES
	HARDWARE_STORES
	HEALTH_AND_BEAUTY_SPAS
	HEARING_AIDS_SALES_AND_SUPPLIES
	HEATING_PLUMBING_A_C
	HOBBY_TOY_AND_GAME_SHOPS
	HOME_SUPPLY_WAREHOUSE_STORES
	HOSPITALS
	HOTELS_MOTELS_AND_RESORTS
	HOUSEHOLD_APPLIANCE_STORES
	INDUSTRIAL_SUPPLIES
	INFORMATION_RETRIEVAL_SERVICES
	INSURANCE_DEFAULT
	INSURANCE_UNDERWRITING_PREMIUMS
	INTRA_COMPANY_PURCHASES
	JEWELRY_STORES_WATCHES_CLOCKS_AND_SILVERWARE_STORES
	LANDSCAPING_SERVICES
	LAUNDRIES
	LAUNDRY_CLEANING_SERVICES
	LEGAL_SERVICES_ATTORNEYS
	LUGGAGE_AND_LEATHER_GOODS_STORES
	LUMBER_BUILDING_MATERIALS_STORES
	MANUAL_CASH_DISBURSE
	MARINAS_SERVICE_AND_SUPPLIES
	MASONRY_STONEWORK_AND_PLASTER
	MASSAGE_PARLORS
	MEDICAL_AND_DENTAL_LABS
	MEDICAL_DENTAL_OPHTHALMIC_AND_HOSPITAL_EQUIPMENT_AND_SUPPLIES
	MEDICAL_SERVICES
	MEMBERSHIP_ORGANIZATIONS
	MENS_AND_BOYS_CLOTHING_AND_ACCESSORIES_STORES
	MENS_WOMENS_CLOTHING_STORES
	METAL_SERVICE_CENTERS
	MISCELLANEOUS
	MISCELLANEOUS_APPAREL_AND_ACCESSORY_SHOPS
	MISCELLANEOUS_AUTO_DEALERS
	MISCELLANEOUS_BUSINESS_SERVICES
	MISCELLANEOUS_FOOD_STORES
	MISCELLANEOUS_GENERAL_MERCHANDISE
	MISCELLANEOUS_GENERAL_SERVICES
	MISCELLANEOUS_HOME_FURNISHING_SPECIALTY_STORES
	MISCELLANEOUS_PUBLISHING_AND_PRINTING
	MISCELLANEOUS_RECREATION_SERVICES
	MISCELLANEOUS_REPAIR_SHOPS
	MISCELLANEOUS_SPECIALTY_RETAIL
	MOBILE_HOME_DEALERS
	MOTION_PICTURE_THEATERS
	MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
	MOTOR_HOMES_DEALERS
	MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
	MOTORCYCLE_SHOPS_AND_DEALERS
	MOTORCYCLE_SHOPS_DEALERS
	MUSIC_STORES_MUSICAL_INSTRUMENTS_PIANOS_AND_SHEET_MUSIC
	NEWS_DEALERS_AND_NEWSSTANDS
	NON_FI_MONEY_ORDERS
	NON_FI_STORED_VALUE_CARD_PURCHASE_LOAD
	NONDURABLE_GOODS
	NURSERIES_LAWN_AND_GARDEN_SUPPLY_STORES
	NURSING_PERSONAL_CARE
	OFFICE_AND_COMMERCIAL_FURNITURE
	OPTICIANS_EYEGLASSES
	OPTOMETRISTS_OPHTHALMOLOGIST
	ORTHOPEDIC_GOODS_PROSTHETIC_DEVICES
	OSTEOPATHS
	PACKAGE_STORES_BEER_WINE_AND_LIQUOR
	PAINTS_VARNISHES_AND_SUPPLIES
	PARKING_LOTS_GARAGES
	PASSENGER_RAILWAYS
	PAWN_SHOPS
	PET_SHOPS_PET_FOOD_AND_SUPPLIES
	PETROLEUM_AND_PETROLEUM_PRODUCTS
	PHOTO_DEVELOPING
	PHOTOGRAPHIC_PHOTOCOPY_MICROFILM_EQUIPMENT_AND_SUPPLIES
	PHOTOGRAPHIC_STUDIOS
	PICTURE_VIDEO_PRODUCTION
	PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
	PLUMBING_HEATING_EQUIPMENT_AND_SUPPLIES
	POLITICAL_ORGANIZATIONS
	POSTAL_SERVICES_GOVERNMENT_ONLY
	PRECIOUS_STONES_AND_METALS_WATCHES_AND_JEWELRY
	PROFESSIONAL_SERVICES
	PUBLIC_WAREHOUSING_AND_STORAGE
	QUICK_COPY_REPRO_AND_BLUEPRINT
	RAILROADS
	REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
	RECORD_STORES
	RECREATIONAL_VEHICLE_RENTALS
	RELIGIOUS_GOODS_STORES
	RELIGIOUS_ORGANIZATIONS
	ROOFING_SIDING_SHEET_METAL
	SECRETARIAL_SUPPORT_SERVICES
	SECURITY_BROKERS_DEALERS
	SERVICE_STATIONS
	SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
	SHOE_REPAIR_HAT_CLEANING
	SHOE_STORES
	SMALL_APPLIANCE_REPAIR
	SNOWMOBILE_DEALERS
	SPECIAL_TRADE_SERVICES
	SPECIALTY_CLEANING
	SPORTING_GOODS_STORES
	SPORTING_RECREATION_CAMPS
	SPORTS_AND_RIDING_APPAREL_STORES
	SPORTS_CLUBS_FIELDS
	STAMP_AND_COIN_STORES
	STATIONARY_OFFICE_SUPPLIES_PRINTING_AND_WRITING_PAPER
	STATIONERY_STORES_OFFICE_AND_SCHOOL_SUPPLY_STORES
	SWIMMING_POOLS_SALES
	T_UI_TRAVEL_GERMANY
	TAILORS_ALTERATIONS
	TAX_PAYMENTS_GOVERNMENT_AGENCIES
	TAX_PREPARATION_SERVICES
	TAXICABS_LIMOUSINES
	TELECOMMUNICATION_EQUIPMENT_AND_TELEPHONE_SALES
	TELECOMMUNICATION_SERVICES
	TELEGRAPH_SERVICES
	TENT_AND_AWNING_SHOPS
	TESTING_LABORATORIES
	THEATRICAL_TICKET_AGENCIES
	TIMESHARES
	TIRE_RETREADING_AND_REPAIR
	TOLLS_BRIDGE_FEES
	TOURIST_ATTRACTIONS_AND_EXHIBITS
	TOWING_SERVICES
	TRAILER_PARKS_CAMPGROUNDS
	TRANSPORTATION_SERVICES
	TRAVEL_AGENCIES_TOUR_OPERATORS
	TRUCK_STOP_ITERATION
	TRUCK_UTILITY_TRAILER_RENTALS
	TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
	TYPEWRITER_STORES
	U_S_FEDERAL_GOVERNMENT_AGENCIES_OR_DEPARTMENTS
	UNIFORMS_COMMERCIAL_CLOTHING
	USED_MERCHANDISE_AND_SECONDHAND_STORES
	UTILITIES
	VARIETY_STORES
	VETERINARY_SERVICES
	VIDEO_AMUSEMENT_GAME_SUPPLIES
	VIDEO_GAME_ARCADES
	VIDEO_TAPE_RENTAL_STORES
	VOCATIONAL_TRADE_SCHOOLS
	WATCH_JEWELRY_REPAIR
	WELDING_REPAIR
	WHOLESALE_CLUBS
	WIG_AND_TOUPEE_STORES
	WIRES_MONEY_ORDERS
	WOMENS_ACCESSORY_AND_SPECIALTY_SHOPS
	WOMENS_READY_TO_WEAR_STORES
	WRECKING_AND_SALVAGE_YARDS
}

enum AuthorizationControlsParamInput_blocked_categories {
	AC_REFRIGERATION_REPAIR
	ACCOUNTING_BOOKKEEPING_SERVICES
	ADVERTISING_SERVICES
	AGRICULTURAL_COOPERATIVE
	AIRLINES_AIR_CARRIERS
	AIRPORTS_FLYING_FIELDS
	AMBULANCE_SERVICES
	AMUSEMENT_PARKS_CARNIVALS
	ANTIQUE_REPRODUCTIONS
	ANTIQUE_SHOPS
	AQUARIUMS
	ARCHITECTURAL_SURVEYING_SERVICES
	ART_DEALERS_AND_GALLERIES
	ARTISTS_SUPPLY_AND_CRAFT_SHOPS
	AUTO_AND_HOME_SUPPLY_STORES
	AUTO_BODY_REPAIR_SHOPS
	AUTO_PAINT_SHOPS
	AUTO_SERVICE_SHOPS
	AUTOMATED_CASH_DISBURSE
	AUTOMATED_FUEL_DISPENSERS
	AUTOMOBILE_ASSOCIATIONS
	AUTOMOTIVE_PARTS_AND_ACCESSORIES_STORES
	AUTOMOTIVE_TIRE_STORES
	BAIL_AND_BOND_PAYMENTS
	BAKERIES
	BANDS_ORCHESTRAS
	BARBER_AND_BEAUTY_SHOPS
	BETTING_CASINO_GAMBLING
	BICYCLE_SHOPS
	BILLIARD_POOL_ESTABLISHMENTS
	BOAT_DEALERS
	BOAT_RENTALS_AND_LEASES
	BOOK_STORES
	BOOKS_PERIODICALS_AND_NEWSPAPERS
	BOWLING_ALLEYS
	BUS_LINES
	BUSINESS_SECRETARIAL_SCHOOLS
	BUYING_SHOPPING_SERVICES
	CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO
	CAMERA_AND_PHOTOGRAPHIC_SUPPLY_STORES
	CANDY_NUT_AND_CONFECTIONERY_STORES
	CAR_AND_TRUCK_DEALERS_NEW_USED
	CAR_AND_TRUCK_DEALERS_USED_ONLY
	CAR_RENTAL_AGENCIES
	CAR_WASHES
	CARPENTRY_SERVICES
	CARPET_UPHOLSTERY_CLEANING
	CATERERS
	CHARITABLE_AND_SOCIAL_SERVICE_ORGANIZATIONS_FUNDRAISING
	CHEMICALS_AND_ALLIED_PRODUCTS
	CHILD_CARE_SERVICES
	CHILDRENS_AND_INFANTS_WEAR_STORES
	CHIROPODISTS_PODIATRISTS
	CHIROPRACTORS
	CIGAR_STORES_AND_STANDS
	CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS
	CLEANING_AND_MAINTENANCE
	CLOTHING_RENTAL
	COLLEGES_UNIVERSITIES
	COMMERCIAL_EQUIPMENT
	COMMERCIAL_FOOTWEAR
	COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
	COMMUTER_TRANSPORT_AND_FERRIES
	COMPUTER_NETWORK_SERVICES
	COMPUTER_PROGRAMMING
	COMPUTER_REPAIR
	COMPUTER_SOFTWARE_STORES
	COMPUTERS_PERIPHERALS_AND_SOFTWARE
	CONCRETE_WORK_SERVICES
	CONSTRUCTION_MATERIALS
	CONSULTING_PUBLIC_RELATIONS
	CORRESPONDENCE_SCHOOLS
	COSMETIC_STORES
	COUNSELING_SERVICES
	COUNTRY_CLUBS
	COURIER_SERVICES
	COURT_COSTS
	CREDIT_REPORTING_AGENCIES
	CRUISE_LINES
	DAIRY_PRODUCTS_STORES
	DANCE_HALL_STUDIOS_SCHOOLS
	DATING_ESCORT_SERVICES
	DENTISTS_ORTHODONTISTS
	DEPARTMENT_STORES
	DETECTIVE_AGENCIES
	DIGITAL_GOODS_APPLICATIONS
	DIGITAL_GOODS_GAMES
	DIGITAL_GOODS_LARGE_VOLUME
	DIGITAL_GOODS_MEDIA
	DIRECT_MARKETING_CATALOG_MERCHANT
	DIRECT_MARKETING_COMBINATION_CATALOG_AND_RETAIL_MERCHANT
	DIRECT_MARKETING_INBOUND_TELEMARKETING
	DIRECT_MARKETING_INSURANCE_SERVICES
	DIRECT_MARKETING_OTHER
	DIRECT_MARKETING_OUTBOUND_TELEMARKETING
	DIRECT_MARKETING_SUBSCRIPTION
	DIRECT_MARKETING_TRAVEL
	DISCOUNT_STORES
	DOCTORS
	DOOR_TO_DOOR_SALES
	DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY_STORES
	DRINKING_PLACES
	DRUG_STORES_AND_PHARMACIES
	DRUGS_DRUG_PROPRIETARIES_AND_DRUGGIST_SUNDRIES
	DRY_CLEANERS
	DURABLE_GOODS
	DUTY_FREE_STORES
	EATING_PLACES_RESTAURANTS
	EDUCATIONAL_SERVICES
	ELECTRIC_RAZOR_STORES
	ELECTRICAL_PARTS_AND_EQUIPMENT
	ELECTRICAL_SERVICES
	ELECTRONICS_REPAIR_SHOPS
	ELECTRONICS_STORES
	ELEMENTARY_SECONDARY_SCHOOLS
	EMPLOYMENT_TEMP_AGENCIES
	EQUIPMENT_RENTAL
	EXTERMINATING_SERVICES
	FAMILY_CLOTHING_STORES
	FAST_FOOD_RESTAURANTS
	FINANCIAL_INSTITUTIONS
	FINES_GOVERNMENT_ADMINISTRATIVE_ENTITIES
	FIREPLACE_FIREPLACE_SCREENS_AND_ACCESSORIES_STORES
	FLOOR_COVERING_STORES
	FLORISTS
	FLORISTS_SUPPLIES_NURSERY_STOCK_AND_FLOWERS
	FREEZER_AND_LOCKER_MEAT_PROVISIONERS
	FUEL_DEALERS_NON_AUTOMOTIVE
	FUNERAL_SERVICES_CREMATORIES
	FURNITURE_HOME_FURNISHINGS_AND_EQUIPMENT_STORES_EXCEPT_APPLIANCES
	FURNITURE_REPAIR_REFINISHING
	FURRIERS_AND_FUR_SHOPS
	GENERAL_SERVICES
	GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
	GLASS_PAINT_AND_WALLPAPER_STORES
	GLASSWARE_CRYSTAL_STORES
	GOLF_COURSES_PUBLIC
	GOVERNMENT_SERVICES
	GROCERY_STORES_SUPERMARKETS
	HARDWARE_EQUIPMENT_AND_SUPPLIES
	HARDWARE_STORES
	HEALTH_AND_BEAUTY_SPAS
	HEARING_AIDS_SALES_AND_SUPPLIES
	HEATING_PLUMBING_A_C
	HOBBY_TOY_AND_GAME_SHOPS
	HOME_SUPPLY_WAREHOUSE_STORES
	HOSPITALS
	HOTELS_MOTELS_AND_RESORTS
	HOUSEHOLD_APPLIANCE_STORES
	INDUSTRIAL_SUPPLIES
	INFORMATION_RETRIEVAL_SERVICES
	INSURANCE_DEFAULT
	INSURANCE_UNDERWRITING_PREMIUMS
	INTRA_COMPANY_PURCHASES
	JEWELRY_STORES_WATCHES_CLOCKS_AND_SILVERWARE_STORES
	LANDSCAPING_SERVICES
	LAUNDRIES
	LAUNDRY_CLEANING_SERVICES
	LEGAL_SERVICES_ATTORNEYS
	LUGGAGE_AND_LEATHER_GOODS_STORES
	LUMBER_BUILDING_MATERIALS_STORES
	MANUAL_CASH_DISBURSE
	MARINAS_SERVICE_AND_SUPPLIES
	MASONRY_STONEWORK_AND_PLASTER
	MASSAGE_PARLORS
	MEDICAL_AND_DENTAL_LABS
	MEDICAL_DENTAL_OPHTHALMIC_AND_HOSPITAL_EQUIPMENT_AND_SUPPLIES
	MEDICAL_SERVICES
	MEMBERSHIP_ORGANIZATIONS
	MENS_AND_BOYS_CLOTHING_AND_ACCESSORIES_STORES
	MENS_WOMENS_CLOTHING_STORES
	METAL_SERVICE_CENTERS
	MISCELLANEOUS
	MISCELLANEOUS_APPAREL_AND_ACCESSORY_SHOPS
	MISCELLANEOUS_AUTO_DEALERS
	MISCELLANEOUS_BUSINESS_SERVICES
	MISCELLANEOUS_FOOD_STORES
	MISCELLANEOUS_GENERAL_MERCHANDISE
	MISCELLANEOUS_GENERAL_SERVICES
	MISCELLANEOUS_HOME_FURNISHING_SPECIALTY_STORES
	MISCELLANEOUS_PUBLISHING_AND_PRINTING
	MISCELLANEOUS_RECREATION_SERVICES
	MISCELLANEOUS_REPAIR_SHOPS
	MISCELLANEOUS_SPECIALTY_RETAIL
	MOBILE_HOME_DEALERS
	MOTION_PICTURE_THEATERS
	MOTOR_FREIGHT_CARRIERS_AND_TRUCKING
	MOTOR_HOMES_DEALERS
	MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS
	MOTORCYCLE_SHOPS_AND_DEALERS
	MOTORCYCLE_SHOPS_DEALERS
	MUSIC_STORES_MUSICAL_INSTRUMENTS_PIANOS_AND_SHEET_MUSIC
	NEWS_DEALERS_AND_NEWSSTANDS
	NON_FI_MONEY_ORDERS
	NON_FI_STORED_VALUE_CARD_PURCHASE_LOAD
	NONDURABLE_GOODS
	NURSERIES_LAWN_AND_GARDEN_SUPPLY_STORES
	NURSING_PERSONAL_CARE
	OFFICE_AND_COMMERCIAL_FURNITURE
	OPTICIANS_EYEGLASSES
	OPTOMETRISTS_OPHTHALMOLOGIST
	ORTHOPEDIC_GOODS_PROSTHETIC_DEVICES
	OSTEOPATHS
	PACKAGE_STORES_BEER_WINE_AND_LIQUOR
	PAINTS_VARNISHES_AND_SUPPLIES
	PARKING_LOTS_GARAGES
	PASSENGER_RAILWAYS
	PAWN_SHOPS
	PET_SHOPS_PET_FOOD_AND_SUPPLIES
	PETROLEUM_AND_PETROLEUM_PRODUCTS
	PHOTO_DEVELOPING
	PHOTOGRAPHIC_PHOTOCOPY_MICROFILM_EQUIPMENT_AND_SUPPLIES
	PHOTOGRAPHIC_STUDIOS
	PICTURE_VIDEO_PRODUCTION
	PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS
	PLUMBING_HEATING_EQUIPMENT_AND_SUPPLIES
	POLITICAL_ORGANIZATIONS
	POSTAL_SERVICES_GOVERNMENT_ONLY
	PRECIOUS_STONES_AND_METALS_WATCHES_AND_JEWELRY
	PROFESSIONAL_SERVICES
	PUBLIC_WAREHOUSING_AND_STORAGE
	QUICK_COPY_REPRO_AND_BLUEPRINT
	RAILROADS
	REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS
	RECORD_STORES
	RECREATIONAL_VEHICLE_RENTALS
	RELIGIOUS_GOODS_STORES
	RELIGIOUS_ORGANIZATIONS
	ROOFING_SIDING_SHEET_METAL
	SECRETARIAL_SUPPORT_SERVICES
	SECURITY_BROKERS_DEALERS
	SERVICE_STATIONS
	SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES
	SHOE_REPAIR_HAT_CLEANING
	SHOE_STORES
	SMALL_APPLIANCE_REPAIR
	SNOWMOBILE_DEALERS
	SPECIAL_TRADE_SERVICES
	SPECIALTY_CLEANING
	SPORTING_GOODS_STORES
	SPORTING_RECREATION_CAMPS
	SPORTS_AND_RIDING_APPAREL_STORES
	SPORTS_CLUBS_FIELDS
	STAMP_AND_COIN_STORES
	STATIONARY_OFFICE_SUPPLIES_PRINTING_AND_WRITING_PAPER
	STATIONERY_STORES_OFFICE_AND_SCHOOL_SUPPLY_STORES
	SWIMMING_POOLS_SALES
	T_UI_TRAVEL_GERMANY
	TAILORS_ALTERATIONS
	TAX_PAYMENTS_GOVERNMENT_AGENCIES
	TAX_PREPARATION_SERVICES
	TAXICABS_LIMOUSINES
	TELECOMMUNICATION_EQUIPMENT_AND_TELEPHONE_SALES
	TELECOMMUNICATION_SERVICES
	TELEGRAPH_SERVICES
	TENT_AND_AWNING_SHOPS
	TESTING_LABORATORIES
	THEATRICAL_TICKET_AGENCIES
	TIMESHARES
	TIRE_RETREADING_AND_REPAIR
	TOLLS_BRIDGE_FEES
	TOURIST_ATTRACTIONS_AND_EXHIBITS
	TOWING_SERVICES
	TRAILER_PARKS_CAMPGROUNDS
	TRANSPORTATION_SERVICES
	TRAVEL_AGENCIES_TOUR_OPERATORS
	TRUCK_STOP_ITERATION
	TRUCK_UTILITY_TRAILER_RENTALS
	TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES
	TYPEWRITER_STORES
	U_S_FEDERAL_GOVERNMENT_AGENCIES_OR_DEPARTMENTS
	UNIFORMS_COMMERCIAL_CLOTHING
	USED_MERCHANDISE_AND_SECONDHAND_STORES
	UTILITIES
	VARIETY_STORES
	VETERINARY_SERVICES
	VIDEO_AMUSEMENT_GAME_SUPPLIES
	VIDEO_GAME_ARCADES
	VIDEO_TAPE_RENTAL_STORES
	VOCATIONAL_TRADE_SCHOOLS
	WATCH_JEWELRY_REPAIR
	WELDING_REPAIR
	WHOLESALE_CLUBS
	WIG_AND_TOUPEE_STORES
	WIRES_MONEY_ORDERS
	WOMENS_ACCESSORY_AND_SPECIALTY_SHOPS
	WOMENS_READY_TO_WEAR_STORES
	WRECKING_AND_SALVAGE_YARDS
}

enum PostV1IssuingCardsInput_status {
	ACTIVE
	INACTIVE
}

enum PostV1IssuingCardsInput_type {
	PHYSICAL
	VIRTUAL
}

input PostV1IssuingCardsCardInput {
	cancellation_reason: PostV1IssuingCardsCardInput_cancellation_reason
	expand: [String]
	metadata: JSON
	pin: EncryptedPinParamInput
	spending_controls: AuthorizationControlsParamInput
	status: PostV1IssuingCardsCardInput_status
}

enum PostV1IssuingCardsCardInput_cancellation_reason {
	LOST
	STOLEN
}

input EncryptedPinParamInput {
	encrypted_number: String
}

enum PostV1IssuingCardsCardInput_status {
	ACTIVE
	CANCELED
	INACTIVE
}

type IssuingDisputeList {
	has_more: Boolean!
	object: IssuingDisputeList_object!
	url: String!
}

enum IssuingDisputeList_object {
	LIST
}

enum GetIssuingDisputes_status {
	EXPIRED
	LOST
	SUBMITTED
	UNSUBMITTED
	WON
}

input PostV1IssuingDisputesInput {
	amount: Int
	evidence: EvidenceParamInput
	expand: [String]
	metadata: JSON
	transaction: String
	treasury: TreasuryParamInput
}

input EvidenceParamInput {
	canceled: CanceledInput
	duplicate: DuplicateInput
	fraudulent: FraudulentInput
	merchandise_not_as_described: MerchandiseNotAsDescribedInput
	not_received: NotReceivedInput
	other: OtherInput
	reason: EvidenceParamInput_reason
	service_not_as_described: ServiceNotAsDescribedInput
}

input CanceledInput {
	additional_documentation: String
	canceled_at: Int
	cancellation_policy_provided: Boolean
	cancellation_reason: String
	expected_at: Int
	explanation: String
	product_description: String
	product_type: CanceledInput_product_type
	return_status: CanceledInput_return_status
	returned_at: Int
}

enum CanceledInput_product_type {
	MERCHANDISE
	SERVICE
}

enum CanceledInput_return_status {
	MERCHANT_REJECTED
	SUCCESSFUL
}

input DuplicateInput {
	additional_documentation: String
	card_statement: String
	cash_receipt: String
	check_image: String
	explanation: String
	original_transaction: String
}

input FraudulentInput {
	additional_documentation: String
	explanation: String
}

input MerchandiseNotAsDescribedInput {
	additional_documentation: String
	explanation: String
	received_at: Int
	return_description: String
	return_status: MerchandiseNotAsDescribedInput_return_status
	returned_at: Int
}

enum MerchandiseNotAsDescribedInput_return_status {
	MERCHANT_REJECTED
	SUCCESSFUL
}

input NotReceivedInput {
	additional_documentation: String
	expected_at: Int
	explanation: String
	product_description: String
	product_type: NotReceivedInput_product_type
}

enum NotReceivedInput_product_type {
	MERCHANDISE
	SERVICE
}

input OtherInput {
	additional_documentation: String
	explanation: String
	product_description: String
	product_type: OtherInput_product_type
}

enum OtherInput_product_type {
	MERCHANDISE
	SERVICE
}

enum EvidenceParamInput_reason {
	CANCELED
	DUPLICATE
	FRAUDULENT
	MERCHANDISE_NOT_AS_DESCRIBED
	NOT_RECEIVED
	OTHER
	SERVICE_NOT_AS_DESCRIBED
}

input ServiceNotAsDescribedInput {
	additional_documentation: String
	canceled_at: Int
	cancellation_reason: String
	explanation: String
	received_at: Int
}

input TreasuryParamInput {
	received_debit: String!
}

input PostV1IssuingDisputesDisputeInput {
	amount: Int
	evidence: EvidenceParamInput
	expand: [String]
	metadata: JSON
}

input PostV1IssuingDisputesDisputeSubmitInput {
	expand: [String]
	metadata: JSON
}

type IssuingSettlementList {
	has_more: Boolean!
	object: IssuingSettlementList_object!
	url: String!
}

enum IssuingSettlementList_object {
	LIST
}

input PostV1IssuingSettlementsSettlementInput {
	expand: [String]
	metadata: JSON
}

type IssuingTransactionList {
	has_more: Boolean!
	object: IssuingTransactionList_object!
	url: String!
}

enum IssuingTransactionList_object {
	LIST
}

enum GetIssuingTransactions_type {
	CAPTURE
	REFUND
}

input PostV1IssuingTransactionsTransactionInput {
	expand: [String]
	metadata: JSON
}

input PostV1LinkAccountSessionsInput {
	account_holder: AccountholderParamsInput!
	expand: [String]
	filters: FiltersParamsInput
	permissions: [PostV1LinkAccountSessionsInput_permissions]!
	return_url: String
}

enum PostV1LinkAccountSessionsInput_permissions {
	BALANCES
	OWNERSHIP
	PAYMENT_METHOD
	TRANSACTIONS
}

input PostV1LinkedAccountsAccountDisconnectInput {
	expand: [String]
}

input PostV1LinkedAccountsAccountRefreshInput {
	expand: [String]
	features: [PostV1LinkedAccountsAccountRefreshInput_features]!
}

enum PostV1LinkedAccountsAccountRefreshInput_features {
	BALANCE
	OWNERSHIP
}

type mandate {
	customer_acceptance: customer_acceptance!
	id: String!
	livemode: Boolean!
	multi_use: mandate_multi_use
	object: mandate_object!
	payment_method: String!
	payment_method_details: mandate_payment_method_details!
	single_use: mandate_single_use
	status: mandate_status!
	type: mandate_type!
}

type customer_acceptance {
	accepted_at: Int
	offline: offline_acceptance
	online: online_acceptance
	type: customer_acceptance_type!
}

type offline_acceptance

type online_acceptance {
	ip_address: String
	user_agent: String
}

enum customer_acceptance_type {
	OFFLINE
	ONLINE
}

type mandate_multi_use

enum mandate_object {
	MANDATE
}

type mandate_payment_method_details {
	acss_debit: mandate_acss_debit
	au_becs_debit: mandate_au_becs_debit
	bacs_debit: mandate_bacs_debit
	blik: mandate_blik
	card: card_mandate_payment_method_details
	link: mandate_link
	sepa_debit: mandate_sepa_debit
	type: String!
	us_bank_account: mandate_us_bank_account
}

type mandate_acss_debit {
	default_for: [mandate_acss_debit_default_for]
	interval_description: String
	payment_schedule: mandate_acss_debit_payment_schedule!
	transaction_type: mandate_acss_debit_transaction_type!
}

enum mandate_acss_debit_default_for {
	INVOICE
	SUBSCRIPTION
}

enum mandate_acss_debit_payment_schedule {
	COMBINED
	INTERVAL
	SPORADIC
}

enum mandate_acss_debit_transaction_type {
	BUSINESS
	PERSONAL
}

type mandate_au_becs_debit {
	url: String!
}

type mandate_bacs_debit {
	network_status: mandate_bacs_debit_network_status!
	reference: String!
	url: String!
}

enum mandate_bacs_debit_network_status {
	ACCEPTED
	PENDING
	REFUSED
	REVOKED
}

type mandate_blik {
	expires_after: Int
	off_session: mandate_options_off_session_details_blik
	type: mandate_blik_type
}

enum mandate_blik_type {
	OFF_SESSION
	ON_SESSION
}

type card_mandate_payment_method_details

type mandate_link

type mandate_sepa_debit {
	reference: String!
	url: String!
}

type mandate_us_bank_account

type mandate_single_use {
	amount: Int!
	currency: String!
}

enum mandate_status {
	ACTIVE
	INACTIVE
	PENDING
}

enum mandate_type {
	MULTI_USE
	SINGLE_USE
}

type PaymentFlowsPaymentIntentList {
	data: [payment_intent]!
	has_more: Boolean!
	object: PaymentFlowsPaymentIntentList_object!
	url: String!
}

enum PaymentFlowsPaymentIntentList_object {
	LIST
}

input PostV1PaymentIntentsInput {
	amount: Int!
	application_fee_amount: Int
	automatic_payment_methods: AutomaticPaymentMethodsParamInput
	capture_method: PostV1PaymentIntentsInput_capture_method
	confirm: Boolean
	confirmation_method: PostV1PaymentIntentsInput_confirmation_method
	currency: String!
	customer: String
	description: String
	error_on_requires_action: Boolean
	expand: [String]
	mandate: String
	mandate_data: SecretKeyParamInput
	metadata: JSON
	off_session: Boolean
	on_behalf_of: String
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [String]
	radar_options: RadarOptionsInput
	receipt_email: String
	return_url: String
	setup_future_usage: PostV1PaymentIntentsInput_setup_future_usage
	shipping: OptionalFieldsShippingInput
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataCreationParamsInput
	transfer_group: String
	use_stripe_sdk: Boolean
}

input AutomaticPaymentMethodsParamInput {
	enabled: Boolean!
}

enum PostV1PaymentIntentsInput_capture_method {
	AUTOMATIC
	MANUAL
}

enum PostV1PaymentIntentsInput_confirmation_method {
	AUTOMATIC
	MANUAL
}

input SecretKeyParamInput {
	customer_acceptance: CustomerAcceptanceParamInput!
}

input CustomerAcceptanceParamInput {
	accepted_at: Int
	online: OnlineParamInput
	type: CustomerAcceptanceParamInput_type!
}

input OnlineParamInput {
	ip_address: String!
	user_agent: String!
}

enum CustomerAcceptanceParamInput_type {
	OFFLINE
	ONLINE
}

input PaymentMethodDataParamsInput {
	acss_debit: PaymentMethodParamInput
	au_becs_debit: ParamInput
	bacs_debit: ParamInput
	billing_details: BillingDetailsInnerParamsInput
	boleto: ParamInput
	eps: ParamInput
	fpx: ParamInput
	ideal: ParamInput
	klarna: ParamInput
	metadata: JSON
	p24: ParamInput
	radar_options: RadarOptionsInput
	sepa_debit: ParamInput
	sofort: ParamInput
	type: PaymentMethodDataParamsInput_type!
	us_bank_account: PaymentMethodParamInput
}

input PaymentMethodParamInput {
	account_number: String!
	institution_number: String!
	transit_number: String!
}

input ParamInput {
	account_number: String!
	bsb_number: String!
}

input BillingDetailsInnerParamsInput {
	address: BillingDetailsAddressInput
	email: String
	name: String
	phone: String
}

input BillingDetailsAddressInput {
	city: String
	country: String
	line1: String
	line2: String
	postal_code: String
	state: String
}

enum PaymentMethodDataParamsInput_type {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	LINK
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

enum PostV1PaymentIntentsInput_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

input TransferDataCreationParamsInput {
	amount: Int
	destination: String!
}

input PostV1PaymentIntentsIntentInput {
	amount: Int
	application_fee_amount: Int
	capture_method: PostV1PaymentIntentsIntentInput_capture_method
	currency: String
	customer: String
	description: String
	expand: [String]
	metadata: JSON
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [String]
	receipt_email: String
	setup_future_usage: PostV1PaymentIntentsIntentInput_setup_future_usage
	shipping: OptionalFieldsShippingInput
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataUpdateParamsInput
	transfer_group: String
}

enum PostV1PaymentIntentsIntentInput_capture_method {
	AUTOMATIC
	MANUAL
}

enum PostV1PaymentIntentsIntentInput_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

input TransferDataUpdateParamsInput {
	amount: Int
}

input PostV1PaymentIntentsIntentApplyCustomerBalanceInput {
	amount: Int
	currency: String
	expand: [String]
}

input PostV1PaymentIntentsIntentCancelInput {
	cancellation_reason: PostV1PaymentIntentsIntentCancelInput_cancellation_reason
	expand: [String]
}

enum PostV1PaymentIntentsIntentCancelInput_cancellation_reason {
	ABANDONED
	DUPLICATE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
}

input PostV1PaymentIntentsIntentCaptureInput {
	amount_to_capture: Int
	application_fee_amount: Int
	expand: [String]
	statement_descriptor: String
	statement_descriptor_suffix: String
	transfer_data: TransferDataUpdateParamsInput
}

input PostV1PaymentIntentsIntentConfirmInput {
	capture_method: PostV1PaymentIntentsIntentConfirmInput_capture_method
	client_secret: String
	error_on_requires_action: Boolean
	expand: [String]
	mandate: String
	mandate_data: SecretKeyParamInput
	off_session: Boolean
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [String]
	radar_options: RadarOptionsInput
	receipt_email: String
	return_url: String
	setup_future_usage: PostV1PaymentIntentsIntentConfirmInput_setup_future_usage
	shipping: OptionalFieldsShippingInput
	use_stripe_sdk: Boolean
}

enum PostV1PaymentIntentsIntentConfirmInput_capture_method {
	AUTOMATIC
	MANUAL
}

enum PostV1PaymentIntentsIntentConfirmInput_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

input PostV1PaymentIntentsIntentIncrementAuthorizationInput {
	amount: Int!
	application_fee_amount: Int
	description: String
	expand: [String]
	metadata: JSON
	statement_descriptor: String
	transfer_data: TransferDataUpdateParamsInput
}

input PostV1PaymentIntentsIntentVerifyMicrodepositsInput {
	amounts: [Int]
	client_secret: String
	descriptor_code: String
	expand: [String]
}

type PaymentLinksResourcePaymentLinkList {
	data: [payment_link]!
	has_more: Boolean!
	object: PaymentLinksResourcePaymentLinkList_object!
	url: String!
}

type payment_link {
	active: Boolean!
	after_completion: payment_links_resource_after_completion!
	allow_promotion_codes: Boolean!
	application_fee_amount: Int
	application_fee_percent: Int
	automatic_tax: payment_links_resource_automatic_tax!
	billing_address_collection: payment_link_billing_address_collection!
	consent_collection: PaymentLinksResourceConsentCollection
	currency: String!
	custom_text: payment_links_resource_custom_text!
	customer_creation: payment_link_customer_creation!
	id: String!
	line_items: PaymentLinksResourceListLineItems
	livemode: Boolean!
	metadata: JSON!
	object: payment_link_object!
	on_behalf_of: String
	payment_intent_data: PaymentLinksResourcePaymentIntentData
	payment_method_collection: payment_link_payment_method_collection!
	payment_method_types: [payment_link_payment_method_types]
	phone_number_collection: payment_links_resource_phone_number_collection!
	shipping_address_collection: PaymentLinksResourceShippingAddressCollection
	shipping_options: [payment_links_resource_shipping_option]!
	submit_type: payment_link_submit_type!
	subscription_data: PaymentLinksResourceSubscriptionData
	tax_id_collection: payment_links_resource_tax_id_collection!
	transfer_data: PaymentLinksResourceTransferData
	url: String!
}

type payment_links_resource_after_completion {
	hosted_confirmation: payment_links_resource_completion_behavior_confirmation_page
	redirect: payment_links_resource_completion_behavior_redirect
	type: payment_links_resource_after_completion_type!
}

type payment_links_resource_completion_behavior_confirmation_page {
	custom_message: String
}

type payment_links_resource_completion_behavior_redirect {
	url: String!
}

enum payment_links_resource_after_completion_type {
	HOSTED_CONFIRMATION
	REDIRECT
}

type payment_links_resource_automatic_tax {
	enabled: Boolean!
}

enum payment_link_billing_address_collection {
	AUTO
	REQUIRED
}

type PaymentLinksResourceConsentCollection {
	promotions: PaymentLinksResourceConsentCollection_promotions
	terms_of_service: PaymentLinksResourceConsentCollection_terms_of_service
}

enum PaymentLinksResourceConsentCollection_promotions {
	AUTO
	NONE
}

enum PaymentLinksResourceConsentCollection_terms_of_service {
	NONE
	REQUIRED
}

type payment_links_resource_custom_text {
	shipping_address: PaymentLinksResourceCustomTextPosition
	submit: PaymentLinksResourceCustomTextPosition
}

type PaymentLinksResourceCustomTextPosition {
	message: String!
}

enum payment_link_customer_creation {
	ALWAYS
	IF_REQUIRED
}

type PaymentLinksResourceListLineItems {
	data: [item]!
	has_more: Boolean!
	object: PaymentLinksResourceListLineItems_object!
	url: String!
}

enum PaymentLinksResourceListLineItems_object {
	LIST
}

enum payment_link_object {
	PAYMENT_LINK
}

type PaymentLinksResourcePaymentIntentData {
	capture_method: PaymentLinksResourcePaymentIntentData_capture_method
	setup_future_usage: PaymentLinksResourcePaymentIntentData_setup_future_usage
}

enum PaymentLinksResourcePaymentIntentData_capture_method {
	AUTOMATIC
	MANUAL
}

enum PaymentLinksResourcePaymentIntentData_setup_future_usage {
	OFF_SESSION
	ON_SESSION
}

enum payment_link_payment_method_collection {
	ALWAYS
	IF_REQUIRED
}

enum payment_link_payment_method_types {
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

type payment_links_resource_phone_number_collection {
	enabled: Boolean!
}

type PaymentLinksResourceShippingAddressCollection {
	allowed_countries: [PaymentLinksResourceShippingAddressCollection_allowed_countries]!
}

enum PaymentLinksResourceShippingAddressCollection_allowed_countries {
	AC
	AD
	AE
	AF
	AG
	AI
	AL
	AM
	AO
	AQ
	AR
	AT
	AU
	AW
	AX
	AZ
	BA
	BB
	BD
	BE
	BF
	BG
	BH
	BI
	BJ
	BL
	BM
	BN
	BO
	BQ
	BR
	BS
	BT
	BV
	BW
	BY
	BZ
	CA
	CD
	CF
	CG
	CH
	CI
	CK
	CL
	CM
	CN
	CO
	CR
	CV
	CW
	CY
	CZ
	DE
	DJ
	DK
	DM
	DO
	DZ
	EC
	EE
	EG
	EH
	ER
	ES
	ET
	FI
	FJ
	FK
	FO
	FR
	GA
	GB
	GD
	GE
	GF
	GG
	GH
	GI
	GL
	GM
	GN
	GP
	GQ
	GR
	GS
	GT
	GU
	GW
	GY
	HK
	HN
	HR
	HT
	HU
	ID
	IE
	IL
	IM
	IN
	IO
	IQ
	IS
	IT
	JE
	JM
	JO
	JP
	KE
	KG
	KH
	KI
	KM
	KN
	KR
	KW
	KY
	KZ
	LA
	LB
	LC
	LI
	LK
	LR
	LS
	LT
	LU
	LV
	LY
	MA
	MC
	MD
	ME
	MF
	MG
	MK
	ML
	MM
	MN
	MO
	MQ
	MR
	MS
	MT
	MU
	MV
	MW
	MX
	MY
	MZ
	NA
	NC
	NE
	NG
	NI
	NL
	NO
	NP
	NR
	NU
	NZ
	OM
	PA
	PE
	PF
	PG
	PH
	PK
	PL
	PM
	PN
	PR
	PS
	PT
	PY
	QA
	RE
	RO
	RS
	RU
	RW
	SA
	SB
	SC
	SE
	SG
	SH
	SI
	SJ
	SK
	SL
	SM
	SN
	SO
	SR
	SS
	ST
	SV
	SX
	SZ
	TA
	TC
	TD
	TF
	TG
	TH
	TJ
	TK
	TL
	TM
	TN
	TO
	TR
	TT
	TV
	TW
	TZ
	UA
	UG
	US
	UY
	UZ
	VA
	VC
	VE
	VG
	VN
	VU
	WF
	WS
	XK
	YE
	YT
	ZA
	ZM
	ZW
	ZZ
}

type payment_links_resource_shipping_option {
	shipping_amount: Int!
	shipping_rate: String!
}

enum payment_link_submit_type {
	AUTO
	BOOK
	DONATE
	PAY
}

type PaymentLinksResourceSubscriptionData {
	description: String
	trial_period_days: Int
}

type payment_links_resource_tax_id_collection {
	enabled: Boolean!
}

type PaymentLinksResourceTransferData {
	amount: Int
	destination: String!
}

enum PaymentLinksResourcePaymentLinkList_object {
	LIST
}

input PostV1PaymentLinksInput {
	after_completion: AfterCompletionParamsInput
	allow_promotion_codes: Boolean
	application_fee_amount: Int
	application_fee_percent: Int
	automatic_tax: AutomaticTaxParamsInput
	billing_address_collection: PostV1PaymentLinksInput_billing_address_collection
	consent_collection: ConsentCollectionParamsInput
	currency: String
	custom_text: CustomTextParamInput
	customer_creation: PostV1PaymentLinksInput_customer_creation
	expand: [String]
	line_items: [LineItemsCreateParamsInput]!
	metadata: JSON
	on_behalf_of: String
	payment_intent_data: PaymentIntentDataParamsInput
	payment_method_collection: PostV1PaymentLinksInput_payment_method_collection
	payment_method_types: [PostV1PaymentLinksInput_payment_method_types]
	phone_number_collection: PhoneNumberCollectionParamsInput
	shipping_address_collection: ShippingAddressCollectionParamsInput
	shipping_options: [ShippingOptionParamsInput]
	submit_type: PostV1PaymentLinksInput_submit_type
	subscription_data: SubscriptionDataParamsInput
	tax_id_collection: TaxIdCollectionParamsInput
	transfer_data: TransferDataParamsInput
}

input AfterCompletionParamsInput {
	hosted_confirmation: AfterCompletionConfirmationPageParamsInput
	redirect: AfterCompletionRedirectParamsInput
	type: AfterCompletionParamsInput_type!
}

input AfterCompletionConfirmationPageParamsInput {
	custom_message: String
}

input AfterCompletionRedirectParamsInput {
	url: String!
}

enum AfterCompletionParamsInput_type {
	HOSTED_CONFIRMATION
	REDIRECT
}

enum PostV1PaymentLinksInput_billing_address_collection {
	AUTO
	REQUIRED
}

enum PostV1PaymentLinksInput_customer_creation {
	ALWAYS
	IF_REQUIRED
}

input LineItemsCreateParamsInput {
	adjustable_quantity: AdjustableQuantityParamsInput
	price: String!
	quantity: Int!
}

enum PostV1PaymentLinksInput_payment_method_collection {
	ALWAYS
	IF_REQUIRED
}

enum PostV1PaymentLinksInput_payment_method_types {
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

enum PostV1PaymentLinksInput_submit_type {
	AUTO
	BOOK
	DONATE
	PAY
}

input PostV1PaymentLinksPaymentLinkInput {
	active: Boolean
	after_completion: AfterCompletionParamsInput
	allow_promotion_codes: Boolean
	automatic_tax: AutomaticTaxParamsInput
	billing_address_collection: PostV1PaymentLinksPaymentLinkInput_billing_address_collection
	custom_text: CustomTextParamInput
	customer_creation: PostV1PaymentLinksPaymentLinkInput_customer_creation
	expand: [String]
	line_items: [LineItemsUpdateParamsInput]
	metadata: JSON
	payment_method_collection: PostV1PaymentLinksPaymentLinkInput_payment_method_collection
	payment_method_types: [PostV1PaymentLinksPaymentLinkInput_payment_method_types]
	shipping_address_collection: ShippingAddressCollectionParamsInput
}

enum PostV1PaymentLinksPaymentLinkInput_billing_address_collection {
	AUTO
	REQUIRED
}

enum PostV1PaymentLinksPaymentLinkInput_customer_creation {
	ALWAYS
	IF_REQUIRED
}

input LineItemsUpdateParamsInput {
	adjustable_quantity: AdjustableQuantityParamsInput
	id: String!
	quantity: Int
}

enum PostV1PaymentLinksPaymentLinkInput_payment_method_collection {
	ALWAYS
	IF_REQUIRED
}

enum PostV1PaymentLinksPaymentLinkInput_payment_method_types {
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

type PaymentFlowsPaymentMethodList {
	data: [payment_method]!
	has_more: Boolean!
	object: PaymentFlowsPaymentMethodList_object!
	url: String!
}

enum PaymentFlowsPaymentMethodList_object {
	LIST
}

enum GetPaymentMethods_type {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	LINK
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

input PostV1PaymentMethodsInput {
	acss_debit: PaymentMethodParamInput
	au_becs_debit: ParamInput
	bacs_debit: ParamInput
	billing_details: BillingDetailsInnerParamsInput
	boleto: ParamInput
	card: CardDetailsParamsInput
	customer: String
	eps: ParamInput
	expand: [String]
	fpx: ParamInput
	ideal: ParamInput
	klarna: ParamInput
	metadata: JSON
	p24: ParamInput
	payment_method: String
	radar_options: RadarOptionsInput
	sepa_debit: ParamInput
	sofort: ParamInput
	type: PostV1PaymentMethodsInput_type
	us_bank_account: PaymentMethodParamInput
}

input CardDetailsParamsInput {
	cvc: String
	exp_month: Int!
	exp_year: Int!
	number: String!
}

enum PostV1PaymentMethodsInput_type {
	ACSS_DEBIT
	AFFIRM
	AFTERPAY_CLEARPAY
	ALIPAY
	AU_BECS_DEBIT
	BACS_DEBIT
	BANCONTACT
	BLIK
	BOLETO
	CARD
	CUSTOMER_BALANCE
	EPS
	FPX
	GIROPAY
	GRABPAY
	IDEAL
	KLARNA
	KONBINI
	LINK
	OXXO
	P24
	PAYNOW
	PIX
	PROMPTPAY
	SEPA_DEBIT
	SOFORT
	US_BANK_ACCOUNT
	WECHAT_PAY
}

input PostV1PaymentMethodsPaymentMethodInput {
	billing_details: BillingDetailsInnerParamsInput
	card: UpdateApiParamInput
	expand: [String]
	metadata: JSON
	us_bank_account: UpdateParamInput
}

input UpdateApiParamInput {
	exp_month: Int
	exp_year: Int
}

input UpdateParamInput {
	account_holder_type: UpdateParamInput_account_holder_type
}

enum UpdateParamInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

input PostV1PaymentMethodsPaymentMethodAttachInput {
	customer: String!
	expand: [String]
}

input PostV1PaymentMethodsPaymentMethodDetachInput {
	expand: [String]
}

type PayoutList {
	data: [payout]!
	has_more: Boolean!
	object: PayoutList_object!
	url: String!
}

type payout {
	amount: Int!
	arrival_date: Int!
	automatic: Boolean!
	balance_transaction: String
	created: Int!
	currency: String!
	description: String
	destination: String
	failure_balance_transaction: String
	failure_code: String
	failure_message: String
	id: String!
	livemode: Boolean!
	metadata: JSON
	method: String!
	object: payout_object!
	original_payout: String
	reversed_by: String
	source_type: String!
	statement_descriptor: String
	status: String!
	type: payout_type!
}

enum payout_object {
	PAYOUT
}

enum payout_type {
	BANK_ACCOUNT
	CARD
}

enum PayoutList_object {
	LIST
}

input PostV1PayoutsInput {
	amount: Int!
	currency: String!
	description: String
	destination: String
	expand: [String]
	metadata: JSON
	method: PostV1PayoutsInput_method
	source_type: PostV1PayoutsInput_source_type
	statement_descriptor: String
}

enum PostV1PayoutsInput_method {
	INSTANT
	STANDARD
}

enum PostV1PayoutsInput_source_type {
	BANK_ACCOUNT
	CARD
	FPX
}

input PostV1PayoutsPayoutInput {
	expand: [String]
	metadata: JSON
}

input PostV1PayoutsPayoutCancelInput {
	expand: [String]
}

input PostV1PayoutsPayoutReverseInput {
	expand: [String]
	metadata: JSON
}

type PlanList {
	data: [plan]!
	has_more: Boolean!
	object: PlanList_object!
	url: String!
}

type plan {
	active: Boolean!
	aggregate_usage: plan_aggregate_usage
	amount: Int
	amount_decimal: String
	billing_scheme: plan_billing_scheme!
	created: Int!
	currency: String!
	id: String!
	interval: plan_interval!
	interval_count: Int!
	livemode: Boolean!
	metadata: JSON
	nickname: String
	object: plan_object!
	product: String
	tiers: [plan_tier]
	tiers_mode: plan_tiers_mode
	transform_usage: TransformUsage
	trial_period_days: Int
	usage_type: plan_usage_type!
}

enum plan_aggregate_usage {
	LAST_DURING_PERIOD
	LAST_EVER
	MAX
	SUM
}

enum plan_billing_scheme {
	PER_UNIT
	TIERED
}

enum plan_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum plan_object {
	PLAN
}

type plan_tier {
	flat_amount: Int
	flat_amount_decimal: String
	unit_amount: Int
	unit_amount_decimal: String
	up_to: Int
}

enum plan_tiers_mode {
	GRADUATED
	VOLUME
}

type TransformUsage {
	divide_by: Int!
	round: TransformUsage_round!
}

enum TransformUsage_round {
	DOWN
	UP
}

enum plan_usage_type {
	LICENSED
	METERED
}

enum PlanList_object {
	LIST
}

input PostV1PlansInput {
	active: Boolean
	aggregate_usage: PostV1PlansInput_aggregate_usage
	amount: Int
	amount_decimal: String
	billing_scheme: PostV1PlansInput_billing_scheme
	currency: String!
	expand: [String]
	id: String
	interval: PostV1PlansInput_interval!
	interval_count: Int
	metadata: JSON
	nickname: String
	product: InlineProductParamsInput
	tiers: [TierInput]
	tiers_mode: PostV1PlansInput_tiers_mode
	transform_usage: TransformUsageParamInput
	trial_period_days: Int
	usage_type: PostV1PlansInput_usage_type
}

enum PostV1PlansInput_aggregate_usage {
	LAST_DURING_PERIOD
	LAST_EVER
	MAX
	SUM
}

enum PostV1PlansInput_billing_scheme {
	PER_UNIT
	TIERED
}

enum PostV1PlansInput_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

input InlineProductParamsInput {
	active: Boolean
	id: String
	metadata: JSON
	name: String!
	statement_descriptor: String
	tax_code: String
	unit_label: String
}

input TierInput {
	flat_amount: Int
	flat_amount_decimal: String
	unit_amount: Int
	unit_amount_decimal: String
	up_to: TierInput_up_to!
}

enum TierInput_up_to {
	INF
}

enum PostV1PlansInput_tiers_mode {
	GRADUATED
	VOLUME
}

input TransformUsageParamInput {
	divide_by: Int!
	round: TransformUsageParamInput_round!
}

enum TransformUsageParamInput_round {
	DOWN
	UP
}

enum PostV1PlansInput_usage_type {
	LICENSED
	METERED
}

input PostV1PlansPlanInput {
	active: Boolean
	expand: [String]
	metadata: JSON
	nickname: String
	product: String
	trial_period_days: Int
}

type deleted_plan {
	deleted: Boolean!
	id: String!
	object: deleted_plan_object!
}

enum deleted_plan_object {
	PLAN
}

type PriceList {
	data: [price]!
	has_more: Boolean!
	object: PriceList_object!
	url: String!
}

enum PriceList_object {
	LIST
}

input all_prices_recurring_params {
	interval: all_prices_recurring_params_interval
	usage_type: all_prices_recurring_params_usage_type
}

enum all_prices_recurring_params_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum all_prices_recurring_params_usage_type {
	LICENSED
	METERED
}

enum GetPrices_type {
	ONE_TIME
	RECURRING
}

input PostV1PricesInput {
	active: Boolean
	billing_scheme: PostV1PricesInput_billing_scheme
	currency: String!
	currency_options: JSON
	custom_unit_amount: CustomUnitAmountInput
	expand: [String]
	lookup_key: String
	metadata: JSON
	nickname: String
	product: String
	product_data: InlineProductParamsInput
	recurring: RecurringInput
	tax_behavior: PostV1PricesInput_tax_behavior
	tiers: [TierInput]
	tiers_mode: PostV1PricesInput_tiers_mode
	transfer_lookup_key: Boolean
	transform_quantity: TransformUsageParamInput
	unit_amount: Int
	unit_amount_decimal: String
}

enum PostV1PricesInput_billing_scheme {
	PER_UNIT
	TIERED
}

input CustomUnitAmountInput {
	enabled: Boolean!
	maximum: Int
	minimum: Int
	preset: Int
}

input RecurringInput {
	aggregate_usage: RecurringInput_aggregate_usage
	interval: RecurringInput_interval!
	interval_count: Int
	usage_type: RecurringInput_usage_type
}

enum RecurringInput_aggregate_usage {
	LAST_DURING_PERIOD
	LAST_EVER
	MAX
	SUM
}

enum RecurringInput_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

enum RecurringInput_usage_type {
	LICENSED
	METERED
}

enum PostV1PricesInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum PostV1PricesInput_tiers_mode {
	GRADUATED
	VOLUME
}

input PostV1PricesPriceInput {
	active: Boolean
	currency_options: JSON
	expand: [String]
	lookup_key: String
	metadata: JSON
	nickname: String
	tax_behavior: PostV1PricesPriceInput_tax_behavior
	transfer_lookup_key: Boolean
}

enum PostV1PricesPriceInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

type ProductList {
	data: [product]!
	has_more: Boolean!
	object: ProductList_object!
	url: String!
}

type product {
	active: Boolean!
	created: Int!
	default_price: String
	description: String
	id: String!
	images: [String]!
	livemode: Boolean!
	metadata: JSON!
	name: String!
	object: product_object!
	package_dimensions: PackageDimensions
	shippable: Boolean
	statement_descriptor: String
	tax_code: String
	unit_label: String
	updated: Int!
	url: String
}

enum product_object {
	PRODUCT
}

type PackageDimensions {
	height: Int!
	length: Int!
	weight: Int!
	width: Int!
}

enum ProductList_object {
	LIST
}

input PostV1ProductsInput {
	active: Boolean
	default_price_data: PriceDataWithoutProductInput
	description: String
	expand: [String]
	id: String
	images: [String]
	metadata: JSON
	name: String!
	package_dimensions: PackageDimensionsSpecsInput
	shippable: Boolean
	statement_descriptor: String
	tax_code: String
	unit_label: String
	url: String
}

input PriceDataWithoutProductInput {
	currency: String!
	currency_options: JSON
	recurring: RecurringAdhocInput
	tax_behavior: PriceDataWithoutProductInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

enum PriceDataWithoutProductInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

input PackageDimensionsSpecsInput {
	height: Int!
	length: Int!
	weight: Int!
	width: Int!
}

input PostV1ProductsIdInput {
	active: Boolean
	default_price: String
	description: String
	expand: [String]
	images: [String]
	metadata: JSON
	name: String
	package_dimensions: PackageDimensionsSpecsInput
	shippable: Boolean
	statement_descriptor: String
	tax_code: String
	unit_label: String
	url: String
}

type deleted_product {
	deleted: Boolean!
	id: String!
	object: deleted_product_object!
}

enum deleted_product_object {
	PRODUCT
}

type PromotionCodesResourcePromotionCodeList {
	data: [promotion_code]!
	has_more: Boolean!
	object: PromotionCodesResourcePromotionCodeList_object!
	url: String!
}

type promotion_code {
	active: Boolean!
	code: String!
	coupon: coupon!
	created: Int!
	customer: String
	expires_at: Int
	id: String!
	livemode: Boolean!
	max_redemptions: Int
	metadata: JSON
	object: promotion_code_object!
	restrictions: promotion_codes_resource_restrictions!
	times_redeemed: Int!
}

enum promotion_code_object {
	PROMOTION_CODE
}

type promotion_codes_resource_restrictions {
	currency_options: JSON
	first_time_transaction: Boolean!
	minimum_amount: Int
	minimum_amount_currency: String
}

enum PromotionCodesResourcePromotionCodeList_object {
	LIST
}

input PostV1PromotionCodesInput {
	active: Boolean
	code: String
	coupon: String!
	customer: String
	expand: [String]
	expires_at: Int
	max_redemptions: Int
	metadata: JSON
	restrictions: RestrictionsParamsInput
}

input RestrictionsParamsInput {
	currency_options: JSON
	first_time_transaction: Boolean
	minimum_amount: Int
	minimum_amount_currency: String
}

input PostV1PromotionCodesPromotionCodeInput {
	active: Boolean
	expand: [String]
	metadata: JSON
	restrictions: RestrictionsParamsInput
}

type QuotesResourceQuoteList {
	data: [quote]!
	has_more: Boolean!
	object: QuotesResourceQuoteList_object!
	url: String!
}

type quote {
	amount_subtotal: Int!
	amount_total: Int!
	application: String
	application_fee_amount: Int
	application_fee_percent: Int
	automatic_tax: quotes_resource_automatic_tax!
	collection_method: quote_collection_method!
	computed: quotes_resource_computed!
	created: Int!
	currency: String
	customer: String
	default_tax_rates: [String]
	description: String
	discounts: [String]!
	expires_at: Int!
	footer: String
	from_quote: QuotesResourceFromQuote
	header: String
	id: String!
	invoice: String
	invoice_settings: InvoiceSettingQuoteSetting
	line_items: QuotesResourceListLineItems
	livemode: Boolean!
	metadata: JSON!
	number: String
	object: quote_object!
	on_behalf_of: String
	status: quote_status!
	status_transitions: quotes_resource_status_transitions!
	subscription: String
	subscription_data: quotes_resource_subscription_data_subscription_data!
	subscription_schedule: String
	test_clock: String
	total_details: quotes_resource_total_details!
	transfer_data: QuotesResourceTransferData
}

type quotes_resource_automatic_tax {
	enabled: Boolean!
	status: quotes_resource_automatic_tax_status
}

enum quotes_resource_automatic_tax_status {
	COMPLETE
	FAILED
	REQUIRES_LOCATION_INPUTS
}

enum quote_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

type quotes_resource_computed {
	recurring: QuotesResourceRecurring
	upfront: quotes_resource_upfront!
}

type QuotesResourceRecurring {
	amount_subtotal: Int!
	amount_total: Int!
	interval: QuotesResourceRecurring_interval!
	interval_count: Int!
	total_details: quotes_resource_total_details!
}

enum QuotesResourceRecurring_interval {
	DAY
	MONTH
	WEEK
	YEAR
}

type quotes_resource_total_details {
	amount_discount: Int!
	amount_shipping: Int
	amount_tax: Int!
	breakdown: quotes_resource_total_details_resource_breakdown
}

type quotes_resource_total_details_resource_breakdown {
	discounts: [line_items_discount_amount]!
	taxes: [line_items_tax_amount]!
}

type quotes_resource_upfront {
	amount_subtotal: Int!
	amount_total: Int!
	line_items: QuotesResourceListLineItems
	total_details: quotes_resource_total_details!
}

type QuotesResourceListLineItems {
	data: [item]!
	has_more: Boolean!
	object: QuotesResourceListLineItems_object!
	url: String!
}

enum QuotesResourceListLineItems_object {
	LIST
}

type QuotesResourceFromQuote {
	is_revision: Boolean!
	quote: String!
}

type InvoiceSettingQuoteSetting {
	days_until_due: Int
}

enum quote_object {
	QUOTE
}

enum quote_status {
	ACCEPTED
	CANCELED
	DRAFT
	OPEN
}

type quotes_resource_status_transitions {
	accepted_at: Int
	canceled_at: Int
	finalized_at: Int
}

type quotes_resource_subscription_data_subscription_data {
	description: String
	effective_date: Int
	trial_period_days: Int
}

type QuotesResourceTransferData {
	amount: Int
	amount_percent: Int
	destination: String!
}

enum QuotesResourceQuoteList_object {
	LIST
}

enum GetQuotes_status {
	ACCEPTED
	CANCELED
	DRAFT
	OPEN
}

input PostV1QuotesInput {
	application_fee_amount: Int
	application_fee_percent: Int
	automatic_tax: AutomaticTaxParamInput
	collection_method: PostV1QuotesInput_collection_method
	customer: String
	default_tax_rates: [String]
	description: String
	discounts: [DiscountsDataParamInput]
	expand: [String]
	expires_at: Int
	footer: String
	from_quote: FromQuoteParamsInput
	header: String
	invoice_settings: QuoteParamInput
	line_items: [LineItemCreateParamsInput]
	metadata: JSON
	on_behalf_of: String
	subscription_data: SubscriptionDataCreateParamsInput
	test_clock: String
	transfer_data: TransferDataSpecsInput
}

enum PostV1QuotesInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input FromQuoteParamsInput {
	is_revision: Boolean
	quote: String!
}

input QuoteParamInput {
	days_until_due: Int
}

input LineItemCreateParamsInput {
	price: String
	price_data: PriceDataInput
	quantity: Int
	tax_rates: [String]
}

input PriceDataInput {
	currency: String!
	product: String!
	recurring: RecurringAdhocInput
	tax_behavior: PriceDataInput_tax_behavior
	unit_amount: Int
	unit_amount_decimal: String
}

enum PriceDataInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

input SubscriptionDataCreateParamsInput {
	description: String
	effective_date: SubscriptionDataCreateParamsInput_effective_date
	trial_period_days: Int
}

enum SubscriptionDataCreateParamsInput_effective_date {
	CURRENT_PERIOD_END
}

input PostV1QuotesQuoteInput {
	application_fee_amount: Int
	application_fee_percent: Int
	automatic_tax: AutomaticTaxParamInput
	collection_method: PostV1QuotesQuoteInput_collection_method
	customer: String
	default_tax_rates: [String]
	description: String
	discounts: [DiscountsDataParamInput]
	expand: [String]
	expires_at: Int
	footer: String
	header: String
	invoice_settings: QuoteParamInput
	line_items: [LineItemUpdateParamsInput]
	metadata: JSON
	on_behalf_of: String
	subscription_data: SubscriptionDataUpdateParamsInput
	transfer_data: TransferDataSpecsInput
}

enum PostV1QuotesQuoteInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input LineItemUpdateParamsInput {
	id: String
	price: String
	price_data: PriceDataInput
	quantity: Int
	tax_rates: [String]
}

input SubscriptionDataUpdateParamsInput {
	description: String
	effective_date: SubscriptionDataUpdateParamsInput_effective_date
	trial_period_days: Int
}

enum SubscriptionDataUpdateParamsInput_effective_date {
	CURRENT_PERIOD_END
}

input PostV1QuotesQuoteAcceptInput {
	expand: [String]
}

input PostV1QuotesQuoteCancelInput {
	expand: [String]
}

input PostV1QuotesQuoteFinalizeInput {
	expand: [String]
	expires_at: Int
}

type RadarEarlyFraudWarningList {
	has_more: Boolean!
	object: RadarEarlyFraudWarningList_object!
	url: String!
}

enum RadarEarlyFraudWarningList_object {
	LIST
}

type RadarListListItemList {
	has_more: Boolean!
	object: RadarListListItemList_object!
	url: String!
}

enum RadarListListItemList_object {
	LIST
}

input PostV1RadarValueListItemsInput {
	expand: [String]
	value: String!
	value_list: String!
}

type RadarListListList {
	has_more: Boolean!
	object: RadarListListList_object!
	url: String!
}

enum RadarListListList_object {
	LIST
}

input PostV1RadarValueListsInput {
	alias: String!
	expand: [String]
	item_type: PostV1RadarValueListsInput_item_type
	metadata: JSON
	name: String!
}

enum PostV1RadarValueListsInput_item_type {
	CARD_BIN
	CARD_FINGERPRINT
	CASE_SENSITIVE_STRING
	COUNTRY
	CUSTOMER_ID
	EMAIL
	IP_ADDRESS
	STRING
}

input PostV1RadarValueListsValueListInput {
	alias: String
	expand: [String]
	metadata: JSON
	name: String
}

type ApiMethodRefundList {
	data: [refund]!
	has_more: Boolean!
	object: ApiMethodRefundList_object!
	url: String!
}

enum ApiMethodRefundList_object {
	LIST
}

input PostV1RefundsInput {
	amount: Int
	charge: String
	currency: String
	customer: String
	expand: [String]
	instructions_email: String
	metadata: JSON
	origin: PostV1RefundsInput_origin
	payment_intent: String
	reason: PostV1RefundsInput_reason
	refund_application_fee: Boolean
	reverse_transfer: Boolean
}

enum PostV1RefundsInput_origin {
	CUSTOMER_BALANCE
}

enum PostV1RefundsInput_reason {
	DUPLICATE
	FRAUDULENT
	REQUESTED_BY_CUSTOMER
}

input PostV1RefundsRefundInput {
	expand: [String]
	metadata: JSON
}

input PostV1RefundsRefundCancelInput {
	expand: [String]
}

type FinancialReportingFinanceReportRunList {
	has_more: Boolean!
	object: FinancialReportingFinanceReportRunList_object!
	url: String!
}

enum FinancialReportingFinanceReportRunList_object {
	LIST
}

input PostV1ReportingReportRunsInput {
	expand: [String]
	parameters: RunParameterSpecsInput
	report_type: String!
}

input RunParameterSpecsInput {
	columns: [String]
	connected_account: String
	currency: String
	interval_end: Int
	interval_start: Int
	payout: String
	reporting_category: RunParameterSpecsInput_reporting_category
	timezone: RunParameterSpecsInput_timezone
}

enum RunParameterSpecsInput_reporting_category {
	ADVANCE
	ADVANCE_FUNDING
	ANTICIPATION_REPAYMENT
	CHARGE
	CHARGE_FAILURE
	CONNECT_COLLECTION_TRANSFER
	CONNECT_RESERVED_FUNDS
	CONTRIBUTION
	DISPUTE
	DISPUTE_REVERSAL
	FEE
	FINANCING_PAYDOWN
	FINANCING_PAYDOWN_REVERSAL
	FINANCING_PAYOUT
	FINANCING_PAYOUT_REVERSAL
	ISSUING_AUTHORIZATION_HOLD
	ISSUING_AUTHORIZATION_RELEASE
	ISSUING_DISPUTE
	ISSUING_TRANSACTION
	NETWORK_COST
	OTHER_ADJUSTMENT
	PARTIAL_CAPTURE_REVERSAL
	PAYOUT
	PAYOUT_REVERSAL
	PLATFORM_EARNING
	PLATFORM_EARNING_REFUND
	REFUND
	REFUND_FAILURE
	RISK_RESERVED_FUNDS
	TAX
	TOPUP
	TOPUP_REVERSAL
	TRANSFER
	TRANSFER_REVERSAL
}

enum RunParameterSpecsInput_timezone {
	AFRICA_ABIDJAN
	AFRICA_ACCRA
	AFRICA_ADDIS_ABABA
	AFRICA_ALGIERS
	AFRICA_ASMARA
	AFRICA_ASMERA
	AFRICA_BAMAKO
	AFRICA_BANGUI
	AFRICA_BANJUL
	AFRICA_BISSAU
	AFRICA_BLANTYRE
	AFRICA_BRAZZAVILLE
	AFRICA_BUJUMBURA
	AFRICA_CAIRO
	AFRICA_CASABLANCA
	AFRICA_CEUTA
	AFRICA_CONAKRY
	AFRICA_DAKAR
	AFRICA_DAR_ES_SALAAM
	AFRICA_DJIBOUTI
	AFRICA_DOUALA
	AFRICA_EL_AAIUN
	AFRICA_FREETOWN
	AFRICA_GABORONE
	AFRICA_HARARE
	AFRICA_JOHANNESBURG
	AFRICA_JUBA
	AFRICA_KAMPALA
	AFRICA_KHARTOUM
	AFRICA_KIGALI
	AFRICA_KINSHASA
	AFRICA_LAGOS
	AFRICA_LIBREVILLE
	AFRICA_LOME
	AFRICA_LUANDA
	AFRICA_LUBUMBASHI
	AFRICA_LUSAKA
	AFRICA_MALABO
	AFRICA_MAPUTO
	AFRICA_MASERU
	AFRICA_MBABANE
	AFRICA_MOGADISHU
	AFRICA_MONROVIA
	AFRICA_NAIROBI
	AFRICA_NDJAMENA
	AFRICA_NIAMEY
	AFRICA_NOUAKCHOTT
	AFRICA_OUAGADOUGOU
	AFRICA_PORTO_NOVO
	AFRICA_SAO_TOME
	AFRICA_TIMBUKTU
	AFRICA_TRIPOLI
	AFRICA_TUNIS
	AFRICA_WINDHOEK
	AMERICA_ADAK
	AMERICA_ANCHORAGE
	AMERICA_ANGUILLA
	AMERICA_ANTIGUA
	AMERICA_ARAGUAINA
	AMERICA_ARGENTINA_BUENOS_AIRES
	AMERICA_ARGENTINA_CATAMARCA
	AMERICA_ARGENTINA_COMODRIVADAVIA
	AMERICA_ARGENTINA_CORDOBA
	AMERICA_ARGENTINA_JUJUY
	AMERICA_ARGENTINA_LA_RIOJA
	AMERICA_ARGENTINA_MENDOZA
	AMERICA_ARGENTINA_RIO_GALLEGOS
	AMERICA_ARGENTINA_SALTA
	AMERICA_ARGENTINA_SAN_JUAN
	AMERICA_ARGENTINA_SAN_LUIS
	AMERICA_ARGENTINA_TUCUMAN
	AMERICA_ARGENTINA_USHUAIA
	AMERICA_ARUBA
	AMERICA_ASUNCION
	AMERICA_ATIKOKAN
	AMERICA_ATKA
	AMERICA_BAHIA
	AMERICA_BAHIA_BANDERAS
	AMERICA_BARBADOS
	AMERICA_BELEM
	AMERICA_BELIZE
	AMERICA_BLANC_SABLON
	AMERICA_BOA_VISTA
	AMERICA_BOGOTA
	AMERICA_BOISE
	AMERICA_BUENOS_AIRES
	AMERICA_CAMBRIDGE_BAY
	AMERICA_CAMPO_GRANDE
	AMERICA_CANCUN
	AMERICA_CARACAS
	AMERICA_CATAMARCA
	AMERICA_CAYENNE
	AMERICA_CAYMAN
	AMERICA_CHICAGO
	AMERICA_CHIHUAHUA
	AMERICA_CORAL_HARBOUR
	AMERICA_CORDOBA
	AMERICA_COSTA_RICA
	AMERICA_CRESTON
	AMERICA_CUIABA
	AMERICA_CURACAO
	AMERICA_DANMARKSHAVN
	AMERICA_DAWSON
	AMERICA_DAWSON_CREEK
	AMERICA_DENVER
	AMERICA_DETROIT
	AMERICA_DOMINICA
	AMERICA_EDMONTON
	AMERICA_EIRUNEPE
	AMERICA_EL_SALVADOR
	AMERICA_ENSENADA
	AMERICA_FORT_NELSON
	AMERICA_FORT_WAYNE
	AMERICA_FORTALEZA
	AMERICA_GLACE_BAY
	AMERICA_GODTHAB
	AMERICA_GOOSE_BAY
	AMERICA_GRAND_TURK
	AMERICA_GRENADA
	AMERICA_GUADELOUPE
	AMERICA_GUATEMALA
	AMERICA_GUAYAQUIL
	AMERICA_GUYANA
	AMERICA_HALIFAX
	AMERICA_HAVANA
	AMERICA_HERMOSILLO
	AMERICA_INDIANA_INDIANAPOLIS
	AMERICA_INDIANA_KNOX
	AMERICA_INDIANA_MARENGO
	AMERICA_INDIANA_PETERSBURG
	AMERICA_INDIANA_TELL_CITY
	AMERICA_INDIANA_VEVAY
	AMERICA_INDIANA_VINCENNES
	AMERICA_INDIANA_WINAMAC
	AMERICA_INDIANAPOLIS
	AMERICA_INUVIK
	AMERICA_IQALUIT
	AMERICA_JAMAICA
	AMERICA_JUJUY
	AMERICA_JUNEAU
	AMERICA_KENTUCKY_LOUISVILLE
	AMERICA_KENTUCKY_MONTICELLO
	AMERICA_KNOX_IN
	AMERICA_KRALENDIJK
	AMERICA_LA_PAZ
	AMERICA_LIMA
	AMERICA_LOS_ANGELES
	AMERICA_LOUISVILLE
	AMERICA_LOWER_PRINCES
	AMERICA_MACEIO
	AMERICA_MANAGUA
	AMERICA_MANAUS
	AMERICA_MARIGOT
	AMERICA_MARTINIQUE
	AMERICA_MATAMOROS
	AMERICA_MAZATLAN
	AMERICA_MENDOZA
	AMERICA_MENOMINEE
	AMERICA_MERIDA
	AMERICA_METLAKATLA
	AMERICA_MEXICO_CITY
	AMERICA_MIQUELON
	AMERICA_MONCTON
	AMERICA_MONTERREY
	AMERICA_MONTEVIDEO
	AMERICA_MONTREAL
	AMERICA_MONTSERRAT
	AMERICA_NASSAU
	AMERICA_NEW_YORK
	AMERICA_NIPIGON
	AMERICA_NOME
	AMERICA_NORONHA
	AMERICA_NORTH_DAKOTA_BEULAH
	AMERICA_NORTH_DAKOTA_CENTER
	AMERICA_NORTH_DAKOTA_NEW_SALEM
	AMERICA_NUUK
	AMERICA_OJINAGA
	AMERICA_PANAMA
	AMERICA_PANGNIRTUNG
	AMERICA_PARAMARIBO
	AMERICA_PHOENIX
	AMERICA_PORT_AU_PRINCE
	AMERICA_PORT_OF_SPAIN
	AMERICA_PORTO_ACRE
	AMERICA_PORTO_VELHO
	AMERICA_PUERTO_RICO
	AMERICA_PUNTA_ARENAS
	AMERICA_RAINY_RIVER
	AMERICA_RANKIN_INLET
	AMERICA_RECIFE
	AMERICA_REGINA
	AMERICA_RESOLUTE
	AMERICA_RIO_BRANCO
	AMERICA_ROSARIO
	AMERICA_SANTA_ISABEL
	AMERICA_SANTAREM
	AMERICA_SANTIAGO
	AMERICA_SANTO_DOMINGO
	AMERICA_SAO_PAULO
	AMERICA_SCORESBYSUND
	AMERICA_SHIPROCK
	AMERICA_SITKA
	AMERICA_ST_BARTHELEMY
	AMERICA_ST_JOHNS
	AMERICA_ST_KITTS
	AMERICA_ST_LUCIA
	AMERICA_ST_THOMAS
	AMERICA_ST_VINCENT
	AMERICA_SWIFT_CURRENT
	AMERICA_TEGUCIGALPA
	AMERICA_THULE
	AMERICA_THUNDER_BAY
	AMERICA_TIJUANA
	AMERICA_TORONTO
	AMERICA_TORTOLA
	AMERICA_VANCOUVER
	AMERICA_VIRGIN
	AMERICA_WHITEHORSE
	AMERICA_WINNIPEG
	AMERICA_YAKUTAT
	AMERICA_YELLOWKNIFE
	ANTARCTICA_CASEY
	ANTARCTICA_DAVIS
	ANTARCTICA_DUMONTDURVILLE
	ANTARCTICA_MACQUARIE
	ANTARCTICA_MAWSON
	ANTARCTICA_MCMURDO
	ANTARCTICA_PALMER
	ANTARCTICA_ROTHERA
	ANTARCTICA_SOUTH_POLE
	ANTARCTICA_SYOWA
	ANTARCTICA_TROLL
	ANTARCTICA_VOSTOK
	ARCTIC_LONGYEARBYEN
	ASIA_ADEN
	ASIA_ALMATY
	ASIA_AMMAN
	ASIA_ANADYR
	ASIA_AQTAU
	ASIA_AQTOBE
	ASIA_ASHGABAT
	ASIA_ASHKHABAD
	ASIA_ATYRAU
	ASIA_BAGHDAD
	ASIA_BAHRAIN
	ASIA_BAKU
	ASIA_BANGKOK
	ASIA_BARNAUL
	ASIA_BEIRUT
	ASIA_BISHKEK
	ASIA_BRUNEI
	ASIA_CALCUTTA
	ASIA_CHITA
	ASIA_CHOIBALSAN
	ASIA_CHONGQING
	ASIA_CHUNGKING
	ASIA_COLOMBO
	ASIA_DACCA
	ASIA_DAMASCUS
	ASIA_DHAKA
	ASIA_DILI
	ASIA_DUBAI
	ASIA_DUSHANBE
	ASIA_FAMAGUSTA
	ASIA_GAZA
	ASIA_HARBIN
	ASIA_HEBRON
	ASIA_HO_CHI_MINH
	ASIA_HONG_KONG
	ASIA_HOVD
	ASIA_IRKUTSK
	ASIA_ISTANBUL
	ASIA_JAKARTA
	ASIA_JAYAPURA
	ASIA_JERUSALEM
	ASIA_KABUL
	ASIA_KAMCHATKA
	ASIA_KARACHI
	ASIA_KASHGAR
	ASIA_KATHMANDU
	ASIA_KATMANDU
	ASIA_KHANDYGA
	ASIA_KOLKATA
	ASIA_KRASNOYARSK
	ASIA_KUALA_LUMPUR
	ASIA_KUCHING
	ASIA_KUWAIT
	ASIA_MACAO
	ASIA_MACAU
	ASIA_MAGADAN
	ASIA_MAKASSAR
	ASIA_MANILA
	ASIA_MUSCAT
	ASIA_NICOSIA
	ASIA_NOVOKUZNETSK
	ASIA_NOVOSIBIRSK
	ASIA_OMSK
	ASIA_ORAL
	ASIA_PHNOM_PENH
	ASIA_PONTIANAK
	ASIA_PYONGYANG
	ASIA_QATAR
	ASIA_QOSTANAY
	ASIA_QYZYLORDA
	ASIA_RANGOON
	ASIA_RIYADH
	ASIA_SAIGON
	ASIA_SAKHALIN
	ASIA_SAMARKAND
	ASIA_SEOUL
	ASIA_SHANGHAI
	ASIA_SINGAPORE
	ASIA_SREDNEKOLYMSK
	ASIA_TAIPEI
	ASIA_TASHKENT
	ASIA_TBILISI
	ASIA_TEHRAN
	ASIA_TEL_AVIV
	ASIA_THIMBU
	ASIA_THIMPHU
	ASIA_TOKYO
	ASIA_TOMSK
	ASIA_UJUNG_PANDANG
	ASIA_ULAANBAATAR
	ASIA_ULAN_BATOR
	ASIA_URUMQI
	ASIA_UST_NERA
	ASIA_VIENTIANE
	ASIA_VLADIVOSTOK
	ASIA_YAKUTSK
	ASIA_YANGON
	ASIA_YEKATERINBURG
	ASIA_YEREVAN
	ATLANTIC_AZORES
	ATLANTIC_BERMUDA
	ATLANTIC_CANARY
	ATLANTIC_CAPE_VERDE
	ATLANTIC_FAEROE
	ATLANTIC_FAROE
	ATLANTIC_JAN_MAYEN
	ATLANTIC_MADEIRA
	ATLANTIC_REYKJAVIK
	ATLANTIC_SOUTH_GEORGIA
	ATLANTIC_ST_HELENA
	ATLANTIC_STANLEY
	AUSTRALIA_ACT
	AUSTRALIA_ADELAIDE
	AUSTRALIA_BRISBANE
	AUSTRALIA_BROKEN_HILL
	AUSTRALIA_CANBERRA
	AUSTRALIA_CURRIE
	AUSTRALIA_DARWIN
	AUSTRALIA_EUCLA
	AUSTRALIA_HOBART
	AUSTRALIA_LHI
	AUSTRALIA_LINDEMAN
	AUSTRALIA_LORD_HOWE
	AUSTRALIA_MELBOURNE
	AUSTRALIA_NSW
	AUSTRALIA_NORTH
	AUSTRALIA_PERTH
	AUSTRALIA_QUEENSLAND
	AUSTRALIA_SOUTH
	AUSTRALIA_SYDNEY
	AUSTRALIA_TASMANIA
	AUSTRALIA_VICTORIA
	AUSTRALIA_WEST
	AUSTRALIA_YANCOWINNA
	BRAZIL_ACRE
	BRAZIL_DENORONHA
	BRAZIL_EAST
	BRAZIL_WEST
	CET
	CST6CDT
	CANADA_ATLANTIC
	CANADA_CENTRAL
	CANADA_EASTERN
	CANADA_MOUNTAIN
	CANADA_NEWFOUNDLAND
	CANADA_PACIFIC
	CANADA_SASKATCHEWAN
	CANADA_YUKON
	CHILE_CONTINENTAL
	CHILE_EASTERISLAND
	CUBA
	EET
	EST
	EST5EDT
	EGYPT
	EIRE
	ETC_GMT
	ETC_GMT_0
	ETC_GMT_1
	ETC_GMT_10
	ETC_GMT_11
	ETC_GMT_12
	ETC_GMT_2
	ETC_GMT_3
	ETC_GMT_4
	ETC_GMT_5
	ETC_GMT_6
	ETC_GMT_7
	ETC_GMT_8
	ETC_GMT_9
	ETC_GMT_13
	ETC_GMT_14
	ETC_GMT0
	ETC_GREENWICH
	ETC_UCT
	ETC_UTC
	ETC_UNIVERSAL
	ETC_ZULU
	EUROPE_AMSTERDAM
	EUROPE_ANDORRA
	EUROPE_ASTRAKHAN
	EUROPE_ATHENS
	EUROPE_BELFAST
	EUROPE_BELGRADE
	EUROPE_BERLIN
	EUROPE_BRATISLAVA
	EUROPE_BRUSSELS
	EUROPE_BUCHAREST
	EUROPE_BUDAPEST
	EUROPE_BUSINGEN
	EUROPE_CHISINAU
	EUROPE_COPENHAGEN
	EUROPE_DUBLIN
	EUROPE_GIBRALTAR
	EUROPE_GUERNSEY
	EUROPE_HELSINKI
	EUROPE_ISLE_OF_MAN
	EUROPE_ISTANBUL
	EUROPE_JERSEY
	EUROPE_KALININGRAD
	EUROPE_KIEV
	EUROPE_KIROV
	EUROPE_KYIV
	EUROPE_LISBON
	EUROPE_LJUBLJANA
	EUROPE_LONDON
	EUROPE_LUXEMBOURG
	EUROPE_MADRID
	EUROPE_MALTA
	EUROPE_MARIEHAMN
	EUROPE_MINSK
	EUROPE_MONACO
	EUROPE_MOSCOW
	EUROPE_NICOSIA
	EUROPE_OSLO
	EUROPE_PARIS
	EUROPE_PODGORICA
	EUROPE_PRAGUE
	EUROPE_RIGA
	EUROPE_ROME
	EUROPE_SAMARA
	EUROPE_SAN_MARINO
	EUROPE_SARAJEVO
	EUROPE_SARATOV
	EUROPE_SIMFEROPOL
	EUROPE_SKOPJE
	EUROPE_SOFIA
	EUROPE_STOCKHOLM
	EUROPE_TALLINN
	EUROPE_TIRANE
	EUROPE_TIRASPOL
	EUROPE_ULYANOVSK
	EUROPE_UZHGOROD
	EUROPE_VADUZ
	EUROPE_VATICAN
	EUROPE_VIENNA
	EUROPE_VILNIUS
	EUROPE_VOLGOGRAD
	EUROPE_WARSAW
	EUROPE_ZAGREB
	EUROPE_ZAPOROZHYE
	EUROPE_ZURICH
	FACTORY
	GB
	GB_EIRE
	GMT
	GMT_0
	GMT0
	GREENWICH
	HST
	HONGKONG
	ICELAND
	INDIAN_ANTANANARIVO
	INDIAN_CHAGOS
	INDIAN_CHRISTMAS
	INDIAN_COCOS
	INDIAN_COMORO
	INDIAN_KERGUELEN
	INDIAN_MAHE
	INDIAN_MALDIVES
	INDIAN_MAURITIUS
	INDIAN_MAYOTTE
	INDIAN_REUNION
	IRAN
	ISRAEL
	JAMAICA
	JAPAN
	KWAJALEIN
	LIBYA
	MET
	MST
	MST7MDT
	MEXICO_BAJANORTE
	MEXICO_BAJASUR
	MEXICO_GENERAL
	NZ
	NZ_CHAT
	NAVAJO
	PRC
	PST8PDT
	PACIFIC_APIA
	PACIFIC_AUCKLAND
	PACIFIC_BOUGAINVILLE
	PACIFIC_CHATHAM
	PACIFIC_CHUUK
	PACIFIC_EASTER
	PACIFIC_EFATE
	PACIFIC_ENDERBURY
	PACIFIC_FAKAOFO
	PACIFIC_FIJI
	PACIFIC_FUNAFUTI
	PACIFIC_GALAPAGOS
	PACIFIC_GAMBIER
	PACIFIC_GUADALCANAL
	PACIFIC_GUAM
	PACIFIC_HONOLULU
	PACIFIC_JOHNSTON
	PACIFIC_KANTON
	PACIFIC_KIRITIMATI
	PACIFIC_KOSRAE
	PACIFIC_KWAJALEIN
	PACIFIC_MAJURO
	PACIFIC_MARQUESAS
	PACIFIC_MIDWAY
	PACIFIC_NAURU
	PACIFIC_NIUE
	PACIFIC_NORFOLK
	PACIFIC_NOUMEA
	PACIFIC_PAGO_PAGO
	PACIFIC_PALAU
	PACIFIC_PITCAIRN
	PACIFIC_POHNPEI
	PACIFIC_PONAPE
	PACIFIC_PORT_MORESBY
	PACIFIC_RAROTONGA
	PACIFIC_SAIPAN
	PACIFIC_SAMOA
	PACIFIC_TAHITI
	PACIFIC_TARAWA
	PACIFIC_TONGATAPU
	PACIFIC_TRUK
	PACIFIC_WAKE
	PACIFIC_WALLIS
	PACIFIC_YAP
	POLAND
	PORTUGAL
	ROC
	ROK
	SINGAPORE
	TURKEY
	UCT
	US_ALASKA
	US_ALEUTIAN
	US_ARIZONA
	US_CENTRAL
	US_EAST_INDIANA
	US_EASTERN
	US_HAWAII
	US_INDIANA_STARKE
	US_MICHIGAN
	US_MOUNTAIN
	US_PACIFIC
	US_PACIFIC_NEW
	US_SAMOA
	UTC
	UNIVERSAL
	W_SU
	WET
	ZULU
}

type FinancialReportingFinanceReportTypeList {
	has_more: Boolean!
	object: FinancialReportingFinanceReportTypeList_object!
	url: String!
}

enum FinancialReportingFinanceReportTypeList_object {
	LIST
}

type RadarReviewList {
	data: [review]!
	has_more: Boolean!
	object: RadarReviewList_object!
	url: String!
}

type review {
	billing_zip: String
	charge: String
	closed_reason: review_closed_reason
	created: Int!
	id: String!
	ip_address: String
	ip_address_location: RadarReviewResourceLocation
	livemode: Boolean!
	object: review_object!
	open: Boolean!
	opened_reason: review_opened_reason!
	payment_intent: String
	reason: String!
	session: RadarReviewResourceSession
}

enum review_closed_reason {
	APPROVED
	DISPUTED
	REDACTED
	REFUNDED
	REFUNDED_AS_FRAUD
}

type RadarReviewResourceLocation {
	city: String
	country: String
	latitude: Int
	longitude: Int
	region: String
}

enum review_object {
	REVIEW
}

enum review_opened_reason {
	MANUAL
	RULE
}

type RadarReviewResourceSession {
	browser: String
	device: String
	platform: String
	version: String
}

enum RadarReviewList_object {
	LIST
}

input PostV1ReviewsReviewApproveInput {
	expand: [String]
}

type PaymentFlowsSetupIntentSetupAttemptList {
	data: [setup_attempt]!
	has_more: Boolean!
	object: PaymentFlowsSetupIntentSetupAttemptList_object!
	url: String!
}

type setup_attempt {
	application: String
	attach_to_self: Boolean
	created: Int!
	customer: String
	flow_directions: [setup_attempt_flow_directions]
	id: String!
	livemode: Boolean!
	object: setup_attempt_object!
	on_behalf_of: String
	payment_method: String!
	payment_method_details: setup_attempt_payment_method_details!
	setup_error: ApiErrors
	setup_intent: String!
	status: String!
	usage: String!
}

enum setup_attempt_flow_directions {
	INBOUND
	OUTBOUND
}

enum setup_attempt_object {
	SETUP_ATTEMPT
}

type setup_attempt_payment_method_details {
	acss_debit: setup_attempt_payment_method_details_acss_debit
	au_becs_debit: setup_attempt_payment_method_details_au_becs_debit
	bacs_debit: setup_attempt_payment_method_details_bacs_debit
	bancontact: setup_attempt_payment_method_details_bancontact
	blik: setup_attempt_payment_method_details_blik
	boleto: setup_attempt_payment_method_details_boleto
	card: setup_attempt_payment_method_details_card
	card_present: setup_attempt_payment_method_details_card_present
	ideal: setup_attempt_payment_method_details_ideal
	klarna: setup_attempt_payment_method_details_klarna
	link: setup_attempt_payment_method_details_link
	sepa_debit: setup_attempt_payment_method_details_sepa_debit
	sofort: setup_attempt_payment_method_details_sofort
	type: String!
	us_bank_account: setup_attempt_payment_method_details_us_bank_account
}

type setup_attempt_payment_method_details_acss_debit

type setup_attempt_payment_method_details_au_becs_debit

type setup_attempt_payment_method_details_bacs_debit

type setup_attempt_payment_method_details_bancontact {
	bank_code: String
	bank_name: String
	bic: String
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	preferred_language: setup_attempt_payment_method_details_bancontact_preferred_language
	verified_name: String
}

enum setup_attempt_payment_method_details_bancontact_preferred_language {
	DE
	EN
	FR
	NL
}

type setup_attempt_payment_method_details_blik

type setup_attempt_payment_method_details_boleto

type setup_attempt_payment_method_details_card {
	three_d_secure: ThreeDSecureDetails
}

type setup_attempt_payment_method_details_card_present {
	generated_card: String
}

type setup_attempt_payment_method_details_ideal {
	bank: setup_attempt_payment_method_details_ideal_bank
	bic: setup_attempt_payment_method_details_ideal_bic
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	verified_name: String
}

enum setup_attempt_payment_method_details_ideal_bank {
	ABN_AMRO
	ASN_BANK
	BUNQ
	HANDELSBANKEN
	ING
	KNAB
	MONEYOU
	RABOBANK
	REGIOBANK
	REVOLUT
	SNS_BANK
	TRIODOS_BANK
	VAN_LANSCHOT
}

enum setup_attempt_payment_method_details_ideal_bic {
	ABNANL2A
	ASNBNL21
	BUNQNL2A
	FVLBNL22
	HANDNL2A
	INGBNL2A
	KNABNL2H
	MOYONL21
	RABONL2U
	RBRBNL21
	REVOLT21
	SNSBNL2A
	TRIONL2U
}

type setup_attempt_payment_method_details_klarna

type setup_attempt_payment_method_details_link

type setup_attempt_payment_method_details_sepa_debit

type setup_attempt_payment_method_details_sofort {
	bank_code: String
	bank_name: String
	bic: String
	generated_sepa_debit: String
	generated_sepa_debit_mandate: String
	iban_last4: String
	preferred_language: setup_attempt_payment_method_details_sofort_preferred_language
	verified_name: String
}

enum setup_attempt_payment_method_details_sofort_preferred_language {
	DE
	EN
	FR
	NL
}

type setup_attempt_payment_method_details_us_bank_account

enum PaymentFlowsSetupIntentSetupAttemptList_object {
	LIST
}

type PaymentFlowsSetupIntentList {
	data: [setup_intent]!
	has_more: Boolean!
	object: PaymentFlowsSetupIntentList_object!
	url: String!
}

enum PaymentFlowsSetupIntentList_object {
	LIST
}

input PostV1SetupIntentsInput {
	attach_to_self: Boolean
	confirm: Boolean
	customer: String
	description: String
	expand: [String]
	flow_directions: [PostV1SetupIntentsInput_flow_directions]
	mandate_data: SecretKeyParamInput
	metadata: JSON
	on_behalf_of: String
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [String]
	return_url: String
	single_use: SetupIntentSingleUseParamsInput
	usage: PostV1SetupIntentsInput_usage
}

enum PostV1SetupIntentsInput_flow_directions {
	INBOUND
	OUTBOUND
}

input SetupIntentSingleUseParamsInput {
	amount: Int!
	currency: String!
}

enum PostV1SetupIntentsInput_usage {
	OFF_SESSION
	ON_SESSION
}

input PostV1SetupIntentsIntentInput {
	attach_to_self: Boolean
	customer: String
	description: String
	expand: [String]
	flow_directions: [PostV1SetupIntentsIntentInput_flow_directions]
	metadata: JSON
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	payment_method_types: [String]
}

enum PostV1SetupIntentsIntentInput_flow_directions {
	INBOUND
	OUTBOUND
}

input PostV1SetupIntentsIntentCancelInput {
	cancellation_reason: PostV1SetupIntentsIntentCancelInput_cancellation_reason
	expand: [String]
}

enum PostV1SetupIntentsIntentCancelInput_cancellation_reason {
	ABANDONED
	DUPLICATE
	REQUESTED_BY_CUSTOMER
}

input PostV1SetupIntentsIntentConfirmInput {
	client_secret: String
	expand: [String]
	mandate_data: SecretKeyParamInput
	payment_method: String
	payment_method_data: PaymentMethodDataParamsInput
	payment_method_options: PaymentMethodOptionsParamInput
	return_url: String
}

input PostV1SetupIntentsIntentVerifyMicrodepositsInput {
	amounts: [Int]
	client_secret: String
	descriptor_code: String
	expand: [String]
}

type ShippingResourcesShippingRateList {
	data: [shipping_rate]!
	has_more: Boolean!
	object: ShippingResourcesShippingRateList_object!
	url: String!
}

type shipping_rate {
	active: Boolean!
	created: Int!
	delivery_estimate: ShippingRateDeliveryEstimate
	display_name: String
	fixed_amount: shipping_rate_fixed_amount
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: shipping_rate_object!
	tax_behavior: shipping_rate_tax_behavior
	tax_code: String
	type: shipping_rate_type!
}

type ShippingRateDeliveryEstimate {
	maximum: ShippingRateDeliveryEstimateBound
	minimum: ShippingRateDeliveryEstimateBound
}

type ShippingRateDeliveryEstimateBound {
	unit: ShippingRateDeliveryEstimateBound_unit!
	value: Int!
}

enum ShippingRateDeliveryEstimateBound_unit {
	BUSINESS_DAY
	DAY
	HOUR
	MONTH
	WEEK
}

type shipping_rate_fixed_amount {
	amount: Int!
	currency: String!
	currency_options: JSON
}

enum shipping_rate_object {
	SHIPPING_RATE
}

enum shipping_rate_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum shipping_rate_type {
	FIXED_AMOUNT
}

enum ShippingResourcesShippingRateList_object {
	LIST
}

input PostV1ShippingRatesInput {
	delivery_estimate: DeliveryEstimateInput
	display_name: String!
	expand: [String]
	fixed_amount: FixedAmountInput
	metadata: JSON
	tax_behavior: PostV1ShippingRatesInput_tax_behavior
	tax_code: String
	type: PostV1ShippingRatesInput_type
}

enum PostV1ShippingRatesInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

enum PostV1ShippingRatesInput_type {
	FIXED_AMOUNT
}

input PostV1ShippingRatesShippingRateTokenInput {
	active: Boolean
	expand: [String]
	fixed_amount: FixedAmountUpdateInput
	metadata: JSON
	tax_behavior: PostV1ShippingRatesShippingRateTokenInput_tax_behavior
}

input FixedAmountUpdateInput {
	currency_options: JSON
}

enum PostV1ShippingRatesShippingRateTokenInput_tax_behavior {
	EXCLUSIVE
	INCLUSIVE
	UNSPECIFIED
}

type SigmaScheduledQueryRunList {
	data: [scheduled_query_run]!
	has_more: Boolean!
	object: SigmaScheduledQueryRunList_object!
	url: String!
}

type scheduled_query_run {
	created: Int!
	data_load_time: Int!
	error: sigma_scheduled_query_run_error
	file: File
	id: String!
	livemode: Boolean!
	object: scheduled_query_run_object!
	result_available_until: Int!
	sql: String!
	status: String!
	title: String!
}

type sigma_scheduled_query_run_error {
	message: String!
}

type File {
	created: Int!
	expires_at: Int
	filename: String
	id: String!
	links: FileFileLinkList
	object: File_object!
	purpose: File_purpose!
	size: Int!
	title: String
	type: String
	url: String
}

enum File_object {
	FILE
}

enum File_purpose {
	ACCOUNT_REQUIREMENT
	ADDITIONAL_VERIFICATION
	BUSINESS_ICON
	BUSINESS_LOGO
	CUSTOMER_SIGNATURE
	DISPUTE_EVIDENCE
	DOCUMENT_PROVIDER_IDENTITY_DOCUMENT
	FINANCE_REPORT_RUN
	IDENTITY_DOCUMENT
	IDENTITY_DOCUMENT_DOWNLOADABLE
	PCI_DOCUMENT
	SELFIE
	SIGMA_SCHEDULED_QUERY
	TAX_DOCUMENT_USER_UPLOAD
	TERMINAL_READER_SPLASHSCREEN
}

enum scheduled_query_run_object {
	SCHEDULED_QUERY_RUN
}

enum SigmaScheduledQueryRunList_object {
	LIST
}

type source {
	ach_credit_transfer: source_type_ach_credit_transfer
	ach_debit: source_type_ach_debit
	acss_debit: source_type_acss_debit
	alipay: source_type_alipay
	amount: Int
	au_becs_debit: source_type_au_becs_debit
	bancontact: source_type_bancontact
	card: source_type_card
	card_present: source_type_card_present
	client_secret: String!
	code_verification: source_code_verification_flow
	created: Int!
	currency: String
	customer: String
	eps: source_type_eps
	flow: String!
	giropay: source_type_giropay
	id: String!
	ideal: source_type_ideal
	klarna: source_type_klarna
	livemode: Boolean!
	metadata: JSON
	multibanco: source_type_multibanco
	object: source_object!
	owner: SourceOwner
	p24: source_type_p24
	receiver: source_receiver_flow
	redirect: source_redirect_flow
	sepa_debit: source_type_sepa_debit
	sofort: source_type_sofort
	source_order: source_order
	statement_descriptor: String
	status: String!
	three_d_secure: source_type_three_d_secure
	type: source_type!
	usage: String
	wechat: source_type_wechat
}

type source_type_ach_credit_transfer {
	account_number: String
	bank_name: String
	fingerprint: String
	refund_account_holder_name: String
	refund_account_holder_type: String
	refund_routing_number: String
	routing_number: String
	swift_code: String
}

type source_type_ach_debit {
	bank_name: String
	country: String
	fingerprint: String
	last4: String
	routing_number: String
	type: String
}

type source_type_acss_debit {
	bank_address_city: String
	bank_address_line_1: String
	bank_address_line_2: String
	bank_address_postal_code: String
	bank_name: String
	category: String
	country: String
	fingerprint: String
	last4: String
	routing_number: String
}

type source_type_alipay {
	data_string: String
	native_url: String
	statement_descriptor: String
}

type source_type_au_becs_debit {
	bsb_number: String
	fingerprint: String
	last4: String
}

type source_type_bancontact {
	bank_code: String
	bank_name: String
	bic: String
	iban_last4: String
	preferred_language: String
	statement_descriptor: String
}

type source_type_card {
	address_line1_check: String
	address_zip_check: String
	brand: String
	country: String
	cvc_check: String
	dynamic_last4: String
	exp_month: Int
	exp_year: Int
	fingerprint: String
	funding: String
	last4: String
	name: String
	three_d_secure: String
	tokenization_method: String
}

type source_type_card_present {
	application_cryptogram: String
	application_preferred_name: String
	authorization_code: String
	authorization_response_code: String
	brand: String
	country: String
	cvm_type: String
	data_type: String
	dedicated_file_name: String
	emv_auth_data: String
	evidence_customer_signature: String
	evidence_transaction_certificate: String
	exp_month: Int
	exp_year: Int
	fingerprint: String
	funding: String
	last4: String
	pos_device_id: String
	pos_entry_mode: String
	read_method: String
	reader: String
	terminal_verification_results: String
	transaction_status_information: String
}

type source_code_verification_flow {
	attempts_remaining: Int!
	status: String!
}

type source_type_eps {
	reference: String
	statement_descriptor: String
}

type source_type_giropay {
	bank_code: String
	bank_name: String
	bic: String
	statement_descriptor: String
}

type source_type_ideal {
	bank: String
	bic: String
	iban_last4: String
	statement_descriptor: String
}

type source_type_klarna {
	background_image_url: String
	client_token: String
	first_name: String
	last_name: String
	locale: String
	logo_url: String
	page_title: String
	pay_later_asset_urls_descriptive: String
	pay_later_asset_urls_standard: String
	pay_later_name: String
	pay_later_redirect_url: String
	pay_now_asset_urls_descriptive: String
	pay_now_asset_urls_standard: String
	pay_now_name: String
	pay_now_redirect_url: String
	pay_over_time_asset_urls_descriptive: String
	pay_over_time_asset_urls_standard: String
	pay_over_time_name: String
	pay_over_time_redirect_url: String
	payment_method_categories: String
	purchase_country: String
	purchase_type: String
	redirect_url: String
	shipping_delay: Int
	shipping_first_name: String
	shipping_last_name: String
}

type source_type_multibanco {
	entity: String
	reference: String
	refund_account_holder_address_city: String
	refund_account_holder_address_country: String
	refund_account_holder_address_line1: String
	refund_account_holder_address_line2: String
	refund_account_holder_address_postal_code: String
	refund_account_holder_address_state: String
	refund_account_holder_name: String
	refund_iban: String
}

enum source_object {
	SOURCE
}

type SourceOwner {
	address: Address
	email: String
	name: String
	phone: String
	verified_address: Address
	verified_email: String
	verified_name: String
	verified_phone: String
}

type source_type_p24 {
	reference: String
}

type source_receiver_flow {
	address: String
	amount_charged: Int!
	amount_received: Int!
	amount_returned: Int!
	refund_attributes_method: String!
	refund_attributes_status: String!
}

type source_redirect_flow {
	failure_reason: String
	return_url: String!
	status: String!
	url: String!
}

type source_type_sepa_debit {
	bank_code: String
	branch_code: String
	country: String
	fingerprint: String
	last4: String
	mandate_reference: String
	mandate_url: String
}

type source_type_sofort {
	bank_code: String
	bank_name: String
	bic: String
	country: String
	iban_last4: String
	preferred_language: String
	statement_descriptor: String
}

type source_order {
	amount: Int!
	currency: String!
	email: String
	items: [source_order_item]
	shipping: shipping
}

type source_order_item {
	amount: Int
	currency: String
	description: String
	parent: String
	quantity: Int
	type: String
}

type shipping {
	address: address
	carrier: String
	name: String
	phone: String
	tracking_number: String
}

type source_type_three_d_secure {
	address_line1_check: String
	address_zip_check: String
	authenticated: Boolean
	brand: String
	card: String
	country: String
	customer: String
	cvc_check: String
	dynamic_last4: String
	exp_month: Int
	exp_year: Int
	fingerprint: String
	funding: String
	last4: String
	name: String
	three_d_secure: String
	tokenization_method: String
}

enum source_type {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ACSS_DEBIT
	ALIPAY
	AU_BECS_DEBIT
	BANCONTACT
	CARD
	CARD_PRESENT
	EPS
	GIROPAY
	IDEAL
	KLARNA
	MULTIBANCO
	P24
	SEPA_DEBIT
	SOFORT
	THREE_D_SECURE
	WECHAT
}

type source_type_wechat {
	prepay_id: String
	qr_code_url: String
	statement_descriptor: String
}

input PostV1SourcesInput {
	amount: Int
	currency: String
	customer: String
	expand: [String]
	flow: PostV1SourcesInput_flow
	mandate: MandateParamsInput
	metadata: JSON
	original_source: String
	owner: OwnerInput
	receiver: ReceiverParamsInput
	redirect: RedirectParamsInput
	source_order: ShallowOrderSpecsInput
	statement_descriptor: String
	token: String
	type: String
	usage: PostV1SourcesInput_usage
}

enum PostV1SourcesInput_flow {
	CODE_VERIFICATION
	NONE
	RECEIVER
	REDIRECT
}

input MandateParamsInput {
	acceptance: MandateAcceptanceParamsInput
	amount: Int
	currency: String
	interval: MandateParamsInput_interval
	notification_method: MandateParamsInput_notification_method
}

input MandateAcceptanceParamsInput {
	date: Int
	ip: String
	offline: MandateOfflineAcceptanceParamsInput
	online: MandateOnlineAcceptanceParamsInput
	status: MandateAcceptanceParamsInput_status!
	type: MandateAcceptanceParamsInput_type
	user_agent: String
}

input MandateOfflineAcceptanceParamsInput {
	contact_email: String!
}

input MandateOnlineAcceptanceParamsInput {
	date: Int
	ip: String
	user_agent: String
}

enum MandateAcceptanceParamsInput_status {
	ACCEPTED
	PENDING
	REFUSED
	REVOKED
}

enum MandateAcceptanceParamsInput_type {
	OFFLINE
	ONLINE
}

enum MandateParamsInput_interval {
	ONE_TIME
	SCHEDULED
	VARIABLE
}

enum MandateParamsInput_notification_method {
	DEPRECATED_NONE
	EMAIL
	MANUAL
	NONE
	STRIPE_EMAIL
}

input ReceiverParamsInput {
	refund_attributes_method: ReceiverParamsInput_refund_attributes_method
}

enum ReceiverParamsInput_refund_attributes_method {
	EMAIL
	MANUAL
	NONE
}

input RedirectParamsInput {
	return_url: String!
}

input ShallowOrderSpecsInput {
	items: [OrderItemSpecsInput]
	shipping: OrderShippingInput
}

input OrderItemSpecsInput {
	amount: Int
	currency: String
	description: String
	parent: String
	quantity: Int
	type: OrderItemSpecsInput_type
}

enum OrderItemSpecsInput_type {
	DISCOUNT
	SHIPPING
	SKU
	TAX
}

input OrderShippingInput {
	address: AddressInput!
	carrier: String
	name: String
	phone: String
	tracking_number: String
}

enum PostV1SourcesInput_usage {
	REUSABLE
	SINGLE_USE
}

input PostV1SourcesSourceInput {
	amount: Int
	expand: [String]
	mandate: MandateParamsInput
	metadata: JSON
	owner: OwnerInput
	source_order: OrderParamsInput
}

input OrderParamsInput {
	items: [OrderItemSpecsInput]
	shipping: OrderShippingInput
}

type source_mandate_notification {
	acss_debit: source_mandate_notification_acss_debit_data
	amount: Int
	bacs_debit: source_mandate_notification_bacs_debit_data
	created: Int!
	id: String!
	livemode: Boolean!
	object: source_mandate_notification_object!
	reason: String!
	sepa_debit: source_mandate_notification_sepa_debit_data
	source: source!
	status: String!
	type: String!
}

type source_mandate_notification_acss_debit_data {
	statement_descriptor: String
}

type source_mandate_notification_bacs_debit_data {
	last4: String
}

enum source_mandate_notification_object {
	SOURCE_MANDATE_NOTIFICATION
}

type source_mandate_notification_sepa_debit_data {
	creditor_identifier: String
	last4: String
	mandate_reference: String
}

type ApmsSourcesSourceTransactionList {
	data: [source_transaction]!
	has_more: Boolean!
	object: ApmsSourcesSourceTransactionList_object!
	url: String!
}

type source_transaction {
	ach_credit_transfer: source_transaction_ach_credit_transfer_data
	amount: Int!
	chf_credit_transfer: source_transaction_chf_credit_transfer_data
	created: Int!
	currency: String!
	gbp_credit_transfer: source_transaction_gbp_credit_transfer_data
	id: String!
	livemode: Boolean!
	object: source_transaction_object!
	paper_check: source_transaction_paper_check_data
	sepa_credit_transfer: source_transaction_sepa_credit_transfer_data
	source: String!
	status: String!
	type: source_transaction_type!
}

type source_transaction_ach_credit_transfer_data {
	customer_data: String
	fingerprint: String
	last4: String
	routing_number: String
}

type source_transaction_chf_credit_transfer_data {
	reference: String
	sender_address_country: String
	sender_address_line1: String
	sender_iban: String
	sender_name: String
}

type source_transaction_gbp_credit_transfer_data {
	fingerprint: String
	funding_method: String
	last4: String
	reference: String
	sender_account_number: String
	sender_name: String
	sender_sort_code: String
}

enum source_transaction_object {
	SOURCE_TRANSACTION
}

type source_transaction_paper_check_data {
	available_at: String
	invoices: String
}

type source_transaction_sepa_credit_transfer_data {
	reference: String
	sender_iban: String
	sender_name: String
}

enum source_transaction_type {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ALIPAY
	BANCONTACT
	CARD
	CARD_PRESENT
	EPS
	GIROPAY
	IDEAL
	KLARNA
	MULTIBANCO
	P24
	SEPA_DEBIT
	SOFORT
	THREE_D_SECURE
	WECHAT
}

enum ApmsSourcesSourceTransactionList_object {
	LIST
}

input PostV1SourcesSourceVerifyInput {
	expand: [String]
	values: [String]!
}

type SubscriptionsItemsSubscriptionItemList {
	data: [subscription_item]!
	has_more: Boolean!
	object: SubscriptionsItemsSubscriptionItemList_object!
	url: String!
}

enum SubscriptionsItemsSubscriptionItemList_object {
	LIST
}

input PostV1SubscriptionItemsInput {
	billing_thresholds: ItemBillingThresholdsParamInput
	expand: [String]
	metadata: JSON
	payment_behavior: PostV1SubscriptionItemsInput_payment_behavior
	price: String
	price_data: RecurringPriceDataInput
	proration_behavior: PostV1SubscriptionItemsInput_proration_behavior
	proration_date: Int
	quantity: Int
	subscription: String!
	tax_rates: [String]
}

enum PostV1SubscriptionItemsInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

enum PostV1SubscriptionItemsInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input PostV1SubscriptionItemsItemInput {
	billing_thresholds: ItemBillingThresholdsParamInput
	expand: [String]
	metadata: JSON
	off_session: Boolean
	payment_behavior: PostV1SubscriptionItemsItemInput_payment_behavior
	price: String
	price_data: RecurringPriceDataInput
	proration_behavior: PostV1SubscriptionItemsItemInput_proration_behavior
	proration_date: Int
	quantity: Int
	tax_rates: [String]
}

enum PostV1SubscriptionItemsItemInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

enum PostV1SubscriptionItemsItemInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

type deleted_subscription_item {
	deleted: Boolean!
	id: String!
	object: deleted_subscription_item_object!
}

enum deleted_subscription_item_object {
	SUBSCRIPTION_ITEM
}

input DeleteV1SubscriptionItemsItemInput {
	clear_usage: Boolean
	proration_behavior: DeleteV1SubscriptionItemsItemInput_proration_behavior
	proration_date: Int
}

enum DeleteV1SubscriptionItemsItemInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

type UsageEventsResourceUsageRecordSummaryList {
	data: [usage_record_summary]!
	has_more: Boolean!
	object: UsageEventsResourceUsageRecordSummaryList_object!
	url: String!
}

type usage_record_summary {
	id: String!
	invoice: String
	livemode: Boolean!
	object: usage_record_summary_object!
	period: period!
	subscription_item: String!
	total_usage: Int!
}

enum usage_record_summary_object {
	USAGE_RECORD_SUMMARY
}

type period {
	end: Int
	start: Int
}

enum UsageEventsResourceUsageRecordSummaryList_object {
	LIST
}

type usage_record {
	id: String!
	livemode: Boolean!
	object: usage_record_object!
	quantity: Int!
	subscription_item: String!
	timestamp: Int!
}

enum usage_record_object {
	USAGE_RECORD
}

input PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput {
	action: PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput_action
	expand: [String]
	quantity: Int!
	timestamp: PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput_timestamp
}

enum PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput_action {
	INCREMENT
	SET
}

enum PostV1SubscriptionItemsSubscriptionItemUsageRecordsInput_timestamp {
	NOW
}

type SubscriptionSchedulesResourceScheduleList {
	data: [subscription_schedule]!
	has_more: Boolean!
	object: SubscriptionSchedulesResourceScheduleList_object!
	url: String!
}

type subscription_schedule {
	application: String
	canceled_at: Int
	completed_at: Int
	created: Int!
	current_phase: SubscriptionScheduleCurrentPhase
	customer: String!
	default_settings: subscription_schedules_resource_default_settings!
	end_behavior: subscription_schedule_end_behavior!
	id: String!
	livemode: Boolean!
	metadata: JSON
	object: subscription_schedule_object!
	phases: [subscription_schedule_phase_configuration]!
	released_at: Int
	released_subscription: String
	status: subscription_schedule_status!
	subscription: String
	test_clock: String
}

type SubscriptionScheduleCurrentPhase {
	end_date: Int!
	start_date: Int!
}

type subscription_schedules_resource_default_settings {
	application_fee_percent: Int
	automatic_tax: subscription_schedules_resource_default_settings_automatic_tax
	billing_cycle_anchor: subscription_schedules_resource_default_settings_billing_cycle_anchor!
	billing_thresholds: SubscriptionBillingThresholds
	collection_method: subscription_schedules_resource_default_settings_collection_method
	default_payment_method: String
	description: String
	invoice_settings: InvoiceSettingSubscriptionScheduleSetting
	on_behalf_of: String
	transfer_data: SubscriptionTransferData
}

type subscription_schedules_resource_default_settings_automatic_tax {
	enabled: Boolean!
}

enum subscription_schedules_resource_default_settings_billing_cycle_anchor {
	AUTOMATIC
	PHASE_START
}

enum subscription_schedules_resource_default_settings_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

type InvoiceSettingSubscriptionScheduleSetting {
	days_until_due: Int
}

enum subscription_schedule_end_behavior {
	CANCEL
	NONE
	RELEASE
	RENEW
}

enum subscription_schedule_object {
	SUBSCRIPTION_SCHEDULE
}

type subscription_schedule_phase_configuration {
	add_invoice_items: [subscription_schedule_add_invoice_item]!
	application_fee_percent: Int
	automatic_tax: schedules_phase_automatic_tax
	billing_cycle_anchor: subscription_schedule_phase_configuration_billing_cycle_anchor
	billing_thresholds: SubscriptionBillingThresholds
	collection_method: subscription_schedule_phase_configuration_collection_method
	coupon: String
	currency: String!
	default_payment_method: String
	default_tax_rates: [tax_rate]
	description: String
	end_date: Int!
	invoice_settings: InvoiceSettingSubscriptionScheduleSetting
	items: [subscription_schedule_configuration_item]!
	metadata: JSON
	on_behalf_of: String
	proration_behavior: subscription_schedule_phase_configuration_proration_behavior!
	start_date: Int!
	transfer_data: SubscriptionTransferData
	trial_end: Int
}

type subscription_schedule_add_invoice_item {
	price: String!
	quantity: Int
	tax_rates: [tax_rate]
}

type schedules_phase_automatic_tax {
	enabled: Boolean!
}

enum subscription_schedule_phase_configuration_billing_cycle_anchor {
	AUTOMATIC
	PHASE_START
}

enum subscription_schedule_phase_configuration_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

type subscription_schedule_configuration_item {
	billing_thresholds: SubscriptionItemBillingThresholds
	metadata: JSON
	price: String!
	quantity: Int
	tax_rates: [tax_rate]
}

enum subscription_schedule_phase_configuration_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum subscription_schedule_status {
	ACTIVE
	CANCELED
	COMPLETED
	NOT_STARTED
	RELEASED
}

enum SubscriptionSchedulesResourceScheduleList_object {
	LIST
}

input PostV1SubscriptionSchedulesInput {
	customer: String
	default_settings: DefaultSettingsParamsInput
	end_behavior: PostV1SubscriptionSchedulesInput_end_behavior
	expand: [String]
	from_subscription: String
	metadata: JSON
	phases: [PhaseConfigurationParamsInput]
	start_date: Int
}

input DefaultSettingsParamsInput {
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	billing_cycle_anchor: DefaultSettingsParamsInput_billing_cycle_anchor
	billing_thresholds: BillingThresholdsParamInput
	collection_method: DefaultSettingsParamsInput_collection_method
	default_payment_method: String
	description: String
	invoice_settings: SubscriptionSchedulesParamInput
	on_behalf_of: String
	transfer_data: TransferDataSpecsInput
}

enum DefaultSettingsParamsInput_billing_cycle_anchor {
	AUTOMATIC
	PHASE_START
}

enum DefaultSettingsParamsInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input SubscriptionSchedulesParamInput {
	days_until_due: Int
}

enum PostV1SubscriptionSchedulesInput_end_behavior {
	CANCEL
	NONE
	RELEASE
	RENEW
}

input PhaseConfigurationParamsInput {
	add_invoice_items: [AddInvoiceItemEntryInput]
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	billing_cycle_anchor: PhaseConfigurationParamsInput_billing_cycle_anchor
	billing_thresholds: BillingThresholdsParamInput
	collection_method: PhaseConfigurationParamsInput_collection_method
	coupon: String
	currency: String
	default_payment_method: String
	default_tax_rates: [String]
	description: String
	end_date: Int
	invoice_settings: SubscriptionSchedulesParamInput
	items: [ConfigurationItemParamsInput]!
	iterations: Int
	metadata: JSON
	on_behalf_of: String
	proration_behavior: PhaseConfigurationParamsInput_proration_behavior
	transfer_data: TransferDataSpecsInput
	trial: Boolean
	trial_end: Int
}

enum PhaseConfigurationParamsInput_billing_cycle_anchor {
	AUTOMATIC
	PHASE_START
}

enum PhaseConfigurationParamsInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

input ConfigurationItemParamsInput {
	billing_thresholds: ItemBillingThresholdsParamInput
	metadata: JSON
	price: String
	price_data: RecurringPriceDataInput
	quantity: Int
	tax_rates: [String]
}

enum PhaseConfigurationParamsInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input PostV1SubscriptionSchedulesScheduleInput {
	default_settings: DefaultSettingsParamsInput
	end_behavior: PostV1SubscriptionSchedulesScheduleInput_end_behavior
	expand: [String]
	metadata: JSON
	phases: [PhaseConfigurationParamsInput]
	proration_behavior: PostV1SubscriptionSchedulesScheduleInput_proration_behavior
}

enum PostV1SubscriptionSchedulesScheduleInput_end_behavior {
	CANCEL
	NONE
	RELEASE
	RENEW
}

enum PostV1SubscriptionSchedulesScheduleInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

input PostV1SubscriptionSchedulesScheduleCancelInput {
	expand: [String]
	invoice_now: Boolean
	prorate: Boolean
}

input PostV1SubscriptionSchedulesScheduleReleaseInput {
	expand: [String]
	preserve_cancel_date: Boolean
}

type SubscriptionsSubscriptionList {
	data: [subscription]!
	has_more: Boolean!
	object: SubscriptionsSubscriptionList_object!
	url: String!
}

enum SubscriptionsSubscriptionList_object {
	LIST
}

enum GetSubscriptions_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

enum GetSubscriptions_status {
	ACTIVE
	ALL
	CANCELED
	ENDED
	INCOMPLETE
	INCOMPLETE_EXPIRED
	PAST_DUE
	TRIALING
	UNPAID
}

input PostV1SubscriptionsInput {
	add_invoice_items: [SubscriptionCreateAddInvoiceItemEntryInput]
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	backdate_start_date: Int
	billing_cycle_anchor: Int
	billing_thresholds: BillingThresholdsParamInput
	cancel_at: Int
	cancel_at_period_end: Boolean
	collection_method: PostV1SubscriptionsInput_collection_method
	coupon: String
	currency: String
	customer: String!
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	description: String
	expand: [String]
	items: [SubscriptionItemCreateParamsInput]
	metadata: JSON
	off_session: Boolean
	on_behalf_of: String
	payment_behavior: PostV1SubscriptionsInput_payment_behavior
	payment_settings: PaymentSettingsInput
	pending_invoice_item_interval: PendingInvoiceItemIntervalParamsInput
	promotion_code: String
	proration_behavior: PostV1SubscriptionsInput_proration_behavior
	transfer_data: TransferDataSpecsInput
	trial_end: PostV1SubscriptionsInput_trial_end
	trial_from_plan: Boolean
	trial_period_days: Int
}

enum PostV1SubscriptionsInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

enum PostV1SubscriptionsInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

enum PostV1SubscriptionsInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum PostV1SubscriptionsInput_trial_end {
	NOW
}

input PostV1SubscriptionsSubscriptionExposedIdInput {
	add_invoice_items: [AddInvoiceItemEntryInput]
	application_fee_percent: Int
	automatic_tax: AutomaticTaxConfigInput
	billing_cycle_anchor: PostV1SubscriptionsSubscriptionExposedIdInput_billing_cycle_anchor
	billing_thresholds: BillingThresholdsParamInput
	cancel_at: Int
	cancel_at_period_end: Boolean
	collection_method: PostV1SubscriptionsSubscriptionExposedIdInput_collection_method
	coupon: String
	days_until_due: Int
	default_payment_method: String
	default_source: String
	default_tax_rates: [String]
	description: String
	expand: [String]
	items: [SubscriptionItemUpdateParamsInput]
	metadata: JSON
	off_session: Boolean
	on_behalf_of: String
	pause_collection: PauseCollectionParamInput
	payment_behavior: PostV1SubscriptionsSubscriptionExposedIdInput_payment_behavior
	payment_settings: PaymentSettingsInput
	pending_invoice_item_interval: PendingInvoiceItemIntervalParamsInput
	promotion_code: String
	proration_behavior: PostV1SubscriptionsSubscriptionExposedIdInput_proration_behavior
	proration_date: Int
	transfer_data: TransferDataSpecsInput
	trial_end: PostV1SubscriptionsSubscriptionExposedIdInput_trial_end
	trial_from_plan: Boolean
}

enum PostV1SubscriptionsSubscriptionExposedIdInput_billing_cycle_anchor {
	NOW
	UNCHANGED
}

enum PostV1SubscriptionsSubscriptionExposedIdInput_collection_method {
	CHARGE_AUTOMATICALLY
	SEND_INVOICE
}

enum PostV1SubscriptionsSubscriptionExposedIdInput_payment_behavior {
	ALLOW_INCOMPLETE
	DEFAULT_INCOMPLETE
	ERROR_IF_INCOMPLETE
	PENDING_IF_INCOMPLETE
}

enum PostV1SubscriptionsSubscriptionExposedIdInput_proration_behavior {
	ALWAYS_INVOICE
	CREATE_PRORATIONS
	NONE
}

enum PostV1SubscriptionsSubscriptionExposedIdInput_trial_end {
	NOW
}

input DeleteV1SubscriptionsSubscriptionExposedIdInput {
	expand: [String]
	invoice_now: Boolean
	prorate: Boolean
}

type TaxProductResourceTaxCodeList {
	data: [tax_code]!
	has_more: Boolean!
	object: TaxProductResourceTaxCodeList_object!
	url: String!
}

type tax_code {
	description: String!
	id: String!
	name: String!
	object: tax_code_object!
}

enum tax_code_object {
	TAX_CODE
}

enum TaxProductResourceTaxCodeList_object {
	LIST
}

type TaxRatesList {
	data: [tax_rate]!
	has_more: Boolean!
	object: TaxRatesList_object!
	url: String!
}

enum TaxRatesList_object {
	LIST
}

input PostV1TaxRatesInput {
	active: Boolean
	country: String
	description: String
	display_name: String!
	expand: [String]
	inclusive: Boolean!
	jurisdiction: String
	metadata: JSON
	percentage: Int!
	state: String
	tax_type: PostV1TaxRatesInput_tax_type
}

enum PostV1TaxRatesInput_tax_type {
	GST
	HST
	JCT
	PST
	QST
	RST
	SALES_TAX
	VAT
}

input PostV1TaxRatesTaxRateInput {
	active: Boolean
	country: String
	description: String
	display_name: String
	expand: [String]
	jurisdiction: String
	metadata: JSON
	state: String
	tax_type: PostV1TaxRatesTaxRateInput_tax_type
}

enum PostV1TaxRatesTaxRateInput_tax_type {
	GST
	HST
	JCT
	PST
	QST
	RST
	SALES_TAX
	VAT
}

type TerminalConfigurationConfigurationList {
	has_more: Boolean!
	object: TerminalConfigurationConfigurationList_object!
	url: String!
}

enum TerminalConfigurationConfigurationList_object {
	LIST
}

input PostV1TerminalConfigurationsInput {
	bbpos_wisepos_e: BbposWisePoseInput
	expand: [String]
	tipping: TippingInput
	verifone_p400: VerifoneP400Input
}

input BbposWisePoseInput {
	splashscreen: String
}

input TippingInput {
	aud: CurrencySpecificConfigInput
	cad: CurrencySpecificConfigInput
	chf: CurrencySpecificConfigInput
	czk: CurrencySpecificConfigInput
	dkk: CurrencySpecificConfigInput
	eur: CurrencySpecificConfigInput
	gbp: CurrencySpecificConfigInput
	hkd: CurrencySpecificConfigInput
	myr: CurrencySpecificConfigInput
	nok: CurrencySpecificConfigInput
	nzd: CurrencySpecificConfigInput
	sek: CurrencySpecificConfigInput
	sgd: CurrencySpecificConfigInput
	usd: CurrencySpecificConfigInput
}

input CurrencySpecificConfigInput {
	fixed_amounts: [Int]
	percentages: [Int]
	smart_tip_threshold: Int
}

input VerifoneP400Input {
	splashscreen: String
}

type TerminalConfigurationConfiguration {
	bbpos_wisepos_e: terminal_configuration_configuration_resource_device_type_specific_config
	id: String!
	is_account_default: Boolean
	livemode: Boolean!
	object: TerminalConfigurationConfiguration_object!
	tipping: terminal_configuration_configuration_resource_tipping
	verifone_p400: terminal_configuration_configuration_resource_device_type_specific_config
}

type terminal_configuration_configuration_resource_device_type_specific_config {
	splashscreen: String
}

enum TerminalConfigurationConfiguration_object {
	TERMINAL_CONFIGURATION
}

type terminal_configuration_configuration_resource_tipping {
	aud: terminal_configuration_configuration_resource_currency_specific_config
	cad: terminal_configuration_configuration_resource_currency_specific_config
	chf: terminal_configuration_configuration_resource_currency_specific_config
	czk: terminal_configuration_configuration_resource_currency_specific_config
	dkk: terminal_configuration_configuration_resource_currency_specific_config
	eur: terminal_configuration_configuration_resource_currency_specific_config
	gbp: terminal_configuration_configuration_resource_currency_specific_config
	hkd: terminal_configuration_configuration_resource_currency_specific_config
	myr: terminal_configuration_configuration_resource_currency_specific_config
	nok: terminal_configuration_configuration_resource_currency_specific_config
	nzd: terminal_configuration_configuration_resource_currency_specific_config
	sek: terminal_configuration_configuration_resource_currency_specific_config
	sgd: terminal_configuration_configuration_resource_currency_specific_config
	usd: terminal_configuration_configuration_resource_currency_specific_config
}

type terminal_configuration_configuration_resource_currency_specific_config {
	fixed_amounts: [Int]
	percentages: [Int]
	smart_tip_threshold: Int
}

input PostV1TerminalConfigurationsConfigurationInput {
	bbpos_wisepos_e: BbposWisePoseInput
	expand: [String]
	tipping: TippingInput
	verifone_p400: VerifoneP400Input
}

input PostV1TerminalConnectionTokensInput {
	expand: [String]
	location: String
}

type TerminalLocationLocationList {
	has_more: Boolean!
	object: TerminalLocationLocationList_object!
	url: String!
}

enum TerminalLocationLocationList_object {
	LIST
}

input PostV1TerminalLocationsInput {
	address: CreateLocationAddressParamInput!
	configuration_overrides: String
	display_name: String!
	expand: [String]
	metadata: JSON
}

input CreateLocationAddressParamInput {
	city: String
	country: String!
	line1: String
	line2: String
	postal_code: String
	state: String
}

type TerminalLocationLocation {
	address: address!
	configuration_overrides: String
	display_name: String!
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: TerminalLocationLocation_object!
}

enum TerminalLocationLocation_object {
	TERMINAL_LOCATION
}

input PostV1TerminalLocationsLocationInput {
	address: OptionalFieldsAddressInput
	configuration_overrides: String
	display_name: String
	expand: [String]
	metadata: JSON
}

type TerminalReaderRetrieveReader {
	has_more: Boolean!
	object: TerminalReaderRetrieveReader_object!
	url: String!
}

enum TerminalReaderRetrieveReader_object {
	LIST
}

enum GetTerminalReaders_device_type {
	BBPOS_CHIPPER2X
	BBPOS_WISEPAD3
	BBPOS_WISEPOS_E
	SIMULATED_WISEPOS_E
	STRIPE_M2
	VERIFONE_P400
}

enum GetTerminalReaders_status {
	OFFLINE
	ONLINE
}

input PostV1TerminalReadersInput {
	expand: [String]
	label: String
	location: String
	metadata: JSON
	registration_code: String!
}

type TerminalReaderReader {
	action: TerminalReaderReaderResourceReaderAction
	device_sw_version: String
	device_type: TerminalReaderReader_device_type!
	id: String!
	ip_address: String
	label: String!
	livemode: Boolean!
	location: String
	metadata: JSON!
	object: TerminalReaderReader_object!
	serial_number: String!
	status: String
}

type TerminalReaderReaderResourceReaderAction {
	failure_code: String
	failure_message: String
	process_payment_intent: terminal_reader_reader_resource_process_payment_intent_action
	process_setup_intent: terminal_reader_reader_resource_process_setup_intent_action
	set_reader_display: terminal_reader_reader_resource_set_reader_display_action
	status: TerminalReaderReaderResourceReaderAction_status!
	type: TerminalReaderReaderResourceReaderAction_type!
}

type terminal_reader_reader_resource_process_payment_intent_action {
	payment_intent: String!
	process_config: terminal_reader_reader_resource_process_config
}

type terminal_reader_reader_resource_process_config {
	skip_tipping: Boolean
	tipping: terminal_reader_reader_resource_tipping_config
}

type terminal_reader_reader_resource_tipping_config {
	amount_eligible: Int
}

type terminal_reader_reader_resource_process_setup_intent_action {
	generated_card: String
	setup_intent: String!
}

type terminal_reader_reader_resource_set_reader_display_action {
	cart: TerminalReaderReaderResourceCart
	type: terminal_reader_reader_resource_set_reader_display_action_type!
}

type TerminalReaderReaderResourceCart {
	currency: String!
	line_items: [terminal_reader_reader_resource_line_item]!
	tax: Int
	total: Int!
}

type terminal_reader_reader_resource_line_item {
	amount: Int!
	description: String!
	quantity: Int!
}

enum terminal_reader_reader_resource_set_reader_display_action_type {
	CART
}

enum TerminalReaderReaderResourceReaderAction_status {
	FAILED
	IN_PROGRESS
	SUCCEEDED
}

enum TerminalReaderReaderResourceReaderAction_type {
	PROCESS_PAYMENT_INTENT
	PROCESS_SETUP_INTENT
	SET_READER_DISPLAY
}

enum TerminalReaderReader_device_type {
	BBPOS_CHIPPER2X
	BBPOS_WISEPAD3
	BBPOS_WISEPOS_E
	SIMULATED_WISEPOS_E
	STRIPE_M2
	VERIFONE_P400
}

enum TerminalReaderReader_object {
	TERMINAL_READER
}

input PostV1TerminalReadersReaderInput {
	expand: [String]
	label: String
	metadata: JSON
}

input PostV1TerminalReadersReaderCancelActionInput {
	expand: [String]
}

input PostV1TerminalReadersReaderProcessPaymentIntentInput {
	expand: [String]
	payment_intent: String!
	process_config: ProcessConfigInput
}

input ProcessConfigInput {
	skip_tipping: Boolean
	tipping: TippingConfigInput
}

input TippingConfigInput {
	amount_eligible: Int
}

input PostV1TerminalReadersReaderProcessSetupIntentInput {
	customer_consent_collected: Boolean!
	expand: [String]
	setup_intent: String!
}

input PostV1TerminalReadersReaderSetReaderDisplayInput {
	cart: CartInput
	expand: [String]
	type: PostV1TerminalReadersReaderSetReaderDisplayInput_type!
}

input CartInput {
	currency: String!
	line_items: [LineItemInput]!
	tax: Int
	total: Int!
}

input LineItemInput {
	amount: Int!
	description: String!
	quantity: Int!
}

enum PostV1TerminalReadersReaderSetReaderDisplayInput_type {
	CART
}

input PostV1TestHelpersCustomersCustomerFundCashBalanceInput {
	amount: Int!
	currency: String!
	expand: [String]
	reference: String
}

input PostV1TestHelpersIssuingCardsCardShippingDeliverInput {
	expand: [String]
}

input PostV1TestHelpersIssuingCardsCardShippingFailInput {
	expand: [String]
}

input PostV1TestHelpersIssuingCardsCardShippingReturnInput {
	expand: [String]
}

input PostV1TestHelpersIssuingCardsCardShippingShipInput {
	expand: [String]
}

input PostV1TestHelpersRefundsRefundExpireInput {
	expand: [String]
}

input PostV1TestHelpersTerminalReadersReaderPresentPaymentMethodInput {
	card_present: CardPresentInput
	expand: [String]
	type: PostV1TestHelpersTerminalReadersReaderPresentPaymentMethodInput_type
}

input CardPresentInput {
	number: String
}

enum PostV1TestHelpersTerminalReadersReaderPresentPaymentMethodInput_type {
	CARD_PRESENT
}

type BillingClocksResourceBillingClockList {
	has_more: Boolean!
	object: BillingClocksResourceBillingClockList_object!
	url: String!
}

enum BillingClocksResourceBillingClockList_object {
	LIST
}

input PostV1TestHelpersTestClocksInput {
	expand: [String]
	frozen_time: Int!
	name: String
}

input PostV1TestHelpersTestClocksTestClockAdvanceInput {
	expand: [String]
	frozen_time: Int!
}

input PostV1TestHelpersTreasuryInboundTransfersIdFailInput {
	expand: [String]
	failure_details: FailureDetailsParamsInput
}

input FailureDetailsParamsInput {
	code: FailureDetailsParamsInput_code
}

enum FailureDetailsParamsInput_code {
	ACCOUNT_CLOSED
	ACCOUNT_FROZEN
	BANK_ACCOUNT_RESTRICTED
	BANK_OWNERSHIP_CHANGED
	DEBIT_NOT_AUTHORIZED
	INCORRECT_ACCOUNT_HOLDER_ADDRESS
	INCORRECT_ACCOUNT_HOLDER_NAME
	INCORRECT_ACCOUNT_HOLDER_TAX_ID
	INSUFFICIENT_FUNDS
	INVALID_ACCOUNT_NUMBER
	INVALID_CURRENCY
	NO_ACCOUNT
	OTHER
}

input PostV1TestHelpersTreasuryInboundTransfersIdReturnInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryInboundTransfersIdSucceedInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryOutboundPaymentsIdFailInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryOutboundPaymentsIdPostInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryOutboundPaymentsIdReturnInput {
	expand: [String]
	returned_details: ReturnedDetailsParamsInput
}

input ReturnedDetailsParamsInput {
	code: ReturnedDetailsParamsInput_code
}

enum ReturnedDetailsParamsInput_code {
	ACCOUNT_CLOSED
	ACCOUNT_FROZEN
	BANK_ACCOUNT_RESTRICTED
	BANK_OWNERSHIP_CHANGED
	DECLINED
	INCORRECT_ACCOUNT_HOLDER_NAME
	INVALID_ACCOUNT_NUMBER
	INVALID_CURRENCY
	NO_ACCOUNT
	OTHER
}

input PostV1TestHelpersTreasuryOutboundTransfersOutboundTransferFailInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryOutboundTransfersOutboundTransferPostInput {
	expand: [String]
}

input PostV1TestHelpersTreasuryOutboundTransfersOutboundTransferReturnInput {
	expand: [String]
	returned_details: ReturnedDetailsParamsInput
}

input PostV1TestHelpersTreasuryReceivedCreditsInput {
	amount: Int!
	currency: String!
	description: String
	expand: [String]
	financial_account: String!
	initiating_payment_method_details: SourceParamsInput
	network: PostV1TestHelpersTreasuryReceivedCreditsInput_network!
}

input SourceParamsInput {
	type: SourceParamsInput_type!
	us_bank_account: UsBankAccountSourceParamsInput
}

enum SourceParamsInput_type {
	US_BANK_ACCOUNT
}

input UsBankAccountSourceParamsInput {
	account_holder_name: String
	account_number: String
	routing_number: String
}

enum PostV1TestHelpersTreasuryReceivedCreditsInput_network {
	ACH
	US_DOMESTIC_WIRE
}

input PostV1TestHelpersTreasuryReceivedDebitsInput {
	amount: Int!
	currency: String!
	description: String
	expand: [String]
	financial_account: String!
	initiating_payment_method_details: SourceParamsInput
	network: PostV1TestHelpersTreasuryReceivedDebitsInput_network!
}

enum PostV1TestHelpersTreasuryReceivedDebitsInput_network {
	ACH
}

type token {
	bank_account: bank_account
	card: card
	client_ip: String
	created: Int!
	id: String!
	livemode: Boolean!
	object: token_object!
	type: String!
	used: Boolean!
}

enum token_object {
	TOKEN
}

input PostV1TokensInput {
	account: ConnectJsAccountTokenSpecsInput
	bank_account: TokenCreateBankAccountInput
	card: CreditCardSpecsInput
	customer: String
	cvc_update: CvcParamsInput
	expand: [String]
	person: PersonTokenSpecsInput
	pii: PiiTokenSpecsInput
}

input ConnectJsAccountTokenSpecsInput {
	business_type: ConnectJsAccountTokenSpecsInput_business_type
	company: ConnectJsAccountTokenCompanySpecsInput
	individual: IndividualSpecsInput
	tos_shown_and_accepted: Boolean
}

enum ConnectJsAccountTokenSpecsInput_business_type {
	COMPANY
	GOVERNMENT_ENTITY
	INDIVIDUAL
	NON_PROFIT
}

input ConnectJsAccountTokenCompanySpecsInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	directors_provided: Boolean
	executives_provided: Boolean
	name: String
	name_kana: String
	name_kanji: String
	owners_provided: Boolean
	ownership_declaration: CompanyOwnershipDeclarationInput
	ownership_declaration_shown_and_signed: Boolean
	phone: String
	registration_number: String
	structure: ConnectJsAccountTokenCompanySpecsInput_structure
	tax_id: String
	tax_id_registrar: String
	vat_id: String
	verification: VerificationSpecsInput
}

enum ConnectJsAccountTokenCompanySpecsInput_structure {
	FREE_ZONE_ESTABLISHMENT
	FREE_ZONE_LLC
	GOVERNMENT_INSTRUMENTALITY
	GOVERNMENTAL_UNIT
	INCORPORATED_NON_PROFIT
	LIMITED_LIABILITY_PARTNERSHIP
	LLC
	MULTI_MEMBER_LLC
	PRIVATE_COMPANY
	PRIVATE_CORPORATION
	PRIVATE_PARTNERSHIP
	PUBLIC_COMPANY
	PUBLIC_CORPORATION
	PUBLIC_PARTNERSHIP
	SINGLE_MEMBER_LLC
	SOLE_ESTABLISHMENT
	SOLE_PROPRIETORSHIP
	TAX_EXEMPT_GOVERNMENT_INSTRUMENTALITY
	UNINCORPORATED_ASSOCIATION
	UNINCORPORATED_NON_PROFIT
}

input TokenCreateBankAccountInput {
	account_holder_name: String
	account_holder_type: TokenCreateBankAccountInput_account_holder_type
	account_number: String!
	account_type: TokenCreateBankAccountInput_account_type
	country: String!
	currency: String
	routing_number: String
}

enum TokenCreateBankAccountInput_account_holder_type {
	COMPANY
	INDIVIDUAL
}

enum TokenCreateBankAccountInput_account_type {
	CHECKING
	FUTSU
	SAVINGS
	TOZA
}

input CreditCardSpecsInput {
	address_city: String
	address_country: String
	address_line1: String
	address_line2: String
	address_state: String
	address_zip: String
	currency: String
	cvc: String
	exp_month: String!
	exp_year: String!
	name: String
	number: String!
}

input CvcParamsInput {
	cvc: String!
}

input PersonTokenSpecsInput {
	address: AddressSpecsInput
	address_kana: JapanAddressKanaSpecsInput
	address_kanji: JapanAddressKanjiSpecsInput
	dob: DateOfBirthSpecsInput
	documents: PersonDocumentsSpecsInput
	email: String
	first_name: String
	first_name_kana: String
	first_name_kanji: String
	full_name_aliases: [String]
	gender: String
	id_number: String
	id_number_secondary: String
	last_name: String
	last_name_kana: String
	last_name_kanji: String
	maiden_name: String
	metadata: JSON
	nationality: String
	phone: String
	political_exposure: String
	registered_address: AddressSpecsInput
	relationship: RelationshipSpecsInput
	ssn_last_4: String
	verification: PersonVerificationSpecsInput
}

input PiiTokenSpecsInput {
	id_number: String
}

type TopupList {
	data: [topup]!
	has_more: Boolean!
	object: TopupList_object!
	url: String!
}

type topup {
	amount: Int!
	balance_transaction: String
	created: Int!
	currency: String!
	description: String
	expected_availability_date: Int
	failure_code: String
	failure_message: String
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: topup_object!
	source: Source
	statement_descriptor: String
	status: topup_status!
	transfer_group: String
}

enum topup_object {
	TOPUP
}

type Source {
	ach_credit_transfer: source_type_ach_credit_transfer
	ach_debit: source_type_ach_debit
	acss_debit: source_type_acss_debit
	alipay: source_type_alipay
	amount: Int
	au_becs_debit: source_type_au_becs_debit
	bancontact: source_type_bancontact
	card: source_type_card
	card_present: source_type_card_present
	client_secret: String!
	code_verification: source_code_verification_flow
	created: Int!
	currency: String
	customer: String
	eps: source_type_eps
	flow: String!
	giropay: source_type_giropay
	id: String!
	ideal: source_type_ideal
	klarna: source_type_klarna
	livemode: Boolean!
	metadata: JSON
	multibanco: source_type_multibanco
	object: Source_object!
	owner: SourceOwner
	p24: source_type_p24
	receiver: source_receiver_flow
	redirect: source_redirect_flow
	sepa_debit: source_type_sepa_debit
	sofort: source_type_sofort
	source_order: source_order
	statement_descriptor: String
	status: String!
	three_d_secure: source_type_three_d_secure
	type: Source_type!
	usage: String
	wechat: source_type_wechat
}

enum Source_object {
	SOURCE
}

enum Source_type {
	ACH_CREDIT_TRANSFER
	ACH_DEBIT
	ACSS_DEBIT
	ALIPAY
	AU_BECS_DEBIT
	BANCONTACT
	CARD
	CARD_PRESENT
	EPS
	GIROPAY
	IDEAL
	KLARNA
	MULTIBANCO
	P24
	SEPA_DEBIT
	SOFORT
	THREE_D_SECURE
	WECHAT
}

enum topup_status {
	CANCELED
	FAILED
	PENDING
	REVERSED
	SUCCEEDED
}

enum TopupList_object {
	LIST
}

enum GetTopups_status {
	CANCELED
	FAILED
	PENDING
	SUCCEEDED
}

input PostV1TopupsInput {
	amount: Int!
	currency: String!
	description: String
	expand: [String]
	metadata: JSON
	source: String
	statement_descriptor: String
	transfer_group: String
}

input PostV1TopupsTopupInput {
	description: String
	expand: [String]
	metadata: JSON
}

input PostV1TopupsTopupCancelInput {
	expand: [String]
}

type TransferList {
	data: [transfer]!
	has_more: Boolean!
	object: TransferList_object!
	url: String!
}

type transfer {
	amount: Int!
	amount_reversed: Int!
	balance_transaction: String
	created: Int!
	currency: String!
	description: String
	destination: String
	destination_payment: String
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: transfer_object!
	reversals: TransferReversalList!
	reversed: Boolean!
	source_transaction: String
	source_type: String
	transfer_group: String
}

enum transfer_object {
	TRANSFER
}

type TransferReversalList {
	data: [transfer_reversal]!
	has_more: Boolean!
	object: TransferReversalList_object!
	url: String!
}

type transfer_reversal {
	amount: Int!
	balance_transaction: String
	created: Int!
	currency: String!
	destination_payment_refund: String
	id: String!
	metadata: JSON
	object: transfer_reversal_object!
	source_refund: String
	transfer: String!
}

enum transfer_reversal_object {
	TRANSFER_REVERSAL
}

enum TransferReversalList_object {
	LIST
}

enum TransferList_object {
	LIST
}

input PostV1TransfersInput {
	amount: Int
	currency: String!
	description: String
	destination: String!
	expand: [String]
	metadata: JSON
	source_transaction: String
	source_type: PostV1TransfersInput_source_type
	transfer_group: String
}

enum PostV1TransfersInput_source_type {
	BANK_ACCOUNT
	CARD
	FPX
}

input PostV1TransfersIdReversalsInput {
	amount: Int
	description: String
	expand: [String]
	metadata: JSON
	refund_application_fee: Boolean
}

input PostV1TransfersTransferInput {
	description: String
	expand: [String]
	metadata: JSON
}

input PostV1TransfersTransferReversalsIdInput {
	expand: [String]
	metadata: JSON
}

type TreasuryReceivedCreditsResourceCreditReversalList {
	has_more: Boolean!
	object: TreasuryReceivedCreditsResourceCreditReversalList_object!
	url: String!
}

enum TreasuryReceivedCreditsResourceCreditReversalList_object {
	LIST
}

enum GetTreasuryCreditReversals_status {
	CANCELED
	POSTED
	PROCESSING
}

input PostV1TreasuryCreditReversalsInput {
	expand: [String]
	metadata: JSON
	received_credit: String!
}

type TreasuryReceivedDebitsResourceDebitReversalList {
	has_more: Boolean!
	object: TreasuryReceivedDebitsResourceDebitReversalList_object!
	url: String!
}

enum TreasuryReceivedDebitsResourceDebitReversalList_object {
	LIST
}

enum GetTreasuryDebitReversals_resolution {
	LOST
	WON
}

enum GetTreasuryDebitReversals_status {
	CANCELED
	COMPLETED
	PROCESSING
}

input PostV1TreasuryDebitReversalsInput {
	expand: [String]
	metadata: JSON
	received_debit: String!
}

type TreasuryFinancialAccountsResourceFinancialAccountList {
	has_more: Boolean!
	object: TreasuryFinancialAccountsResourceFinancialAccountList_object!
	url: String!
}

enum TreasuryFinancialAccountsResourceFinancialAccountList_object {
	LIST
}

input PostV1TreasuryFinancialAccountsInput {
	expand: [String]
	features: FeatureAccessInput
	metadata: JSON
	platform_restrictions: PlatformRestrictionsInput
	supported_currencies: [String]!
}

input FeatureAccessInput {
	card_issuing: AccessInput
	deposit_insurance: AccessInput
	financial_addresses: FinancialAddressesInput
	inbound_transfers: InboundTransfersInput
	intra_stripe_flows: AccessInput
	outbound_payments: OutboundPaymentsInput
	outbound_transfers: OutboundTransfersInput
}

input AccessInput {
	requested: Boolean!
}

input FinancialAddressesInput {
	aba: AccessInput
}

input InboundTransfersInput {
	ach: AccessWithAchDetailsInput
}

input AccessWithAchDetailsInput {
	requested: Boolean!
}

input OutboundPaymentsInput {
	ach: AccessWithAchDetailsInput
	us_domestic_wire: AccessInput
}

input OutboundTransfersInput {
	ach: AccessWithAchDetailsInput
	us_domestic_wire: AccessInput
}

input PlatformRestrictionsInput {
	inbound_flows: PlatformRestrictionsInput_inbound_flows
	outbound_flows: PlatformRestrictionsInput_outbound_flows
}

enum PlatformRestrictionsInput_inbound_flows {
	RESTRICTED
	UNRESTRICTED
}

enum PlatformRestrictionsInput_outbound_flows {
	RESTRICTED
	UNRESTRICTED
}

input PostV1TreasuryFinancialAccountsFinancialAccountInput {
	expand: [String]
	features: FeatureAccessInput
	metadata: JSON
	platform_restrictions: PlatformRestrictionsInput
}

input PostV1TreasuryFinancialAccountsFinancialAccountFeaturesInput {
	card_issuing: AccessInput
	deposit_insurance: AccessInput
	expand: [String]
	financial_addresses: FinancialAddressesInput
	inbound_transfers: InboundTransfersInput
	intra_stripe_flows: AccessInput
	outbound_payments: OutboundPaymentsInput
	outbound_transfers: OutboundTransfersInput
}

type TreasuryInboundTransfersResourceInboundTransferList {
	has_more: Boolean!
	object: TreasuryInboundTransfersResourceInboundTransferList_object!
	url: String!
}

enum TreasuryInboundTransfersResourceInboundTransferList_object {
	LIST
}

enum GetTreasuryInboundTransfers_status {
	CANCELED
	FAILED
	PROCESSING
	SUCCEEDED
}

input PostV1TreasuryInboundTransfersInput {
	amount: Int!
	currency: String!
	description: String
	expand: [String]
	financial_account: String!
	metadata: JSON
	origin_payment_method: String!
	statement_descriptor: String
}

input PostV1TreasuryInboundTransfersInboundTransferCancelInput {
	expand: [String]
}

type TreasuryOutboundPaymentsResourceOutboundPaymentList {
	has_more: Boolean!
	object: TreasuryOutboundPaymentsResourceOutboundPaymentList_object!
	url: String!
}

enum TreasuryOutboundPaymentsResourceOutboundPaymentList_object {
	LIST
}

enum GetTreasuryOutboundPayments_status {
	CANCELED
	FAILED
	POSTED
	PROCESSING
	RETURNED
}

input PostV1TreasuryOutboundPaymentsInput {
	amount: Int!
	currency: String!
	customer: String
	description: String
	destination_payment_method: String
	destination_payment_method_data: PaymentMethodDataInput
	destination_payment_method_options: PaymentMethodOptionsInput
	end_user_details: EndUserDetailsParamsInput
	expand: [String]
	financial_account: String!
	metadata: JSON
	statement_descriptor: String
}

input PaymentMethodDataInput {
	billing_details: BillingDetailsInnerParamsInput
	financial_account: String
	metadata: JSON
	type: PaymentMethodDataInput_type!
	us_bank_account: PaymentMethodParamInput
}

enum PaymentMethodDataInput_type {
	FINANCIAL_ACCOUNT
	US_BANK_ACCOUNT
}

input EndUserDetailsParamsInput {
	ip_address: String
	present: Boolean!
}

input PostV1TreasuryOutboundPaymentsIdCancelInput {
	expand: [String]
}

type TreasuryOutboundTransfersResourceOutboundTransferList {
	has_more: Boolean!
	object: TreasuryOutboundTransfersResourceOutboundTransferList_object!
	url: String!
}

enum TreasuryOutboundTransfersResourceOutboundTransferList_object {
	LIST
}

enum GetTreasuryOutboundTransfers_status {
	CANCELED
	FAILED
	POSTED
	PROCESSING
	RETURNED
}

input PostV1TreasuryOutboundTransfersInput {
	amount: Int!
	currency: String!
	description: String
	destination_payment_method: String
	destination_payment_method_options: PaymentMethodOptionsInput
	expand: [String]
	financial_account: String!
	metadata: JSON
	statement_descriptor: String
}

input PostV1TreasuryOutboundTransfersOutboundTransferCancelInput {
	expand: [String]
}

type TreasuryReceivedCreditsResourceReceivedCreditList {
	has_more: Boolean!
	object: TreasuryReceivedCreditsResourceReceivedCreditList_object!
	url: String!
}

enum TreasuryReceivedCreditsResourceReceivedCreditList_object {
	LIST
}

input linked_flows_paramInput {
	source_flow_type: linked_flows_paramInput_source_flow_type!
}

enum linked_flows_paramInput_source_flow_type {
	CREDIT_REVERSAL
	OTHER
	OUTBOUND_PAYMENT
	PAYOUT
}

enum GetTreasuryReceivedCredits_status {
	FAILED
	SUCCEEDED
}

type TreasuryReceivedDebitsResourceReceivedDebitList {
	has_more: Boolean!
	object: TreasuryReceivedDebitsResourceReceivedDebitList_object!
	url: String!
}

enum TreasuryReceivedDebitsResourceReceivedDebitList_object {
	LIST
}

enum GetTreasuryReceivedDebits_status {
	FAILED
	SUCCEEDED
}

type TreasuryTransactionsResourceTransactionEntryList {
	has_more: Boolean!
	object: TreasuryTransactionsResourceTransactionEntryList_object!
	url: String!
}

enum TreasuryTransactionsResourceTransactionEntryList_object {
	LIST
}

enum GetTreasuryTransactionEntries_order_by {
	CREATED
	EFFECTIVE_AT
}

type TreasuryTransactionsResourceTransactionList {
	has_more: Boolean!
	object: TreasuryTransactionsResourceTransactionList_object!
	url: String!
}

enum TreasuryTransactionsResourceTransactionList_object {
	LIST
}

enum GetTreasuryTransactions_order_by {
	CREATED
	POSTED_AT
}

enum GetTreasuryTransactions_status {
	OPEN
	POSTED
	VOID
}

input status_transition_timestamp_specsInput {
	posted_at: RangeQuerySpecsInput
}

input RangeQuerySpecsInput {
	gt: Int
	gte: Int
	lt: Int
	lte: Int
}

type NotificationWebhookEndpointList {
	data: [webhook_endpoint]!
	has_more: Boolean!
	object: NotificationWebhookEndpointList_object!
	url: String!
}

type webhook_endpoint {
	api_version: String
	application: String
	created: Int!
	description: String
	enabled_events: [String]!
	id: String!
	livemode: Boolean!
	metadata: JSON!
	object: webhook_endpoint_object!
	secret: String
	status: String!
	url: String!
}

enum webhook_endpoint_object {
	WEBHOOK_ENDPOINT
}

enum NotificationWebhookEndpointList_object {
	LIST
}

input PostV1WebhookEndpointsInput {
	api_version: PostV1WebhookEndpointsInput_api_version
	connect: Boolean
	description: String
	enabled_events: [PostV1WebhookEndpointsInput_enabled_events]!
	expand: [String]
	metadata: JSON
	url: String!
}

enum PostV1WebhookEndpointsInput_api_version {
	_2011_01_01
	_2011_06_21
	_2011_06_28
	_2011_08_01
	_2011_09_15
	_2011_11_17
	_2012_02_23
	_2012_03_25
	_2012_06_18
	_2012_06_28
	_2012_07_09
	_2012_09_24
	_2012_10_26
	_2012_11_07
	_2013_02_11
	_2013_02_13
	_2013_07_05
	_2013_08_12
	_2013_08_13
	_2013_10_29
	_2013_12_03
	_2014_01_31
	_2014_03_13
	_2014_03_28
	_2014_05_19
	_2014_06_13
	_2014_06_17
	_2014_07_22
	_2014_07_26
	_2014_08_04
	_2014_08_20
	_2014_09_08
	_2014_10_07
	_2014_11_05
	_2014_11_20
	_2014_12_08
	_2014_12_17
	_2014_12_22
	_2015_01_11
	_2015_01_26
	_2015_02_10
	_2015_02_16
	_2015_02_18
	_2015_03_24
	_2015_04_07
	_2015_06_15
	_2015_07_07
	_2015_07_13
	_2015_07_28
	_2015_08_07
	_2015_08_19
	_2015_09_03
	_2015_09_08
	_2015_09_23
	_2015_10_01
	_2015_10_12
	_2015_10_16
	_2016_02_03
	_2016_02_19
	_2016_02_22
	_2016_02_23
	_2016_02_29
	_2016_03_07
	_2016_06_15
	_2016_07_06
	_2016_10_19
	_2017_01_27
	_2017_02_14
	_2017_04_06
	_2017_05_25
	_2017_06_05
	_2017_08_15
	_2017_12_14
	_2018_01_23
	_2018_02_05
	_2018_02_06
	_2018_02_28
	_2018_05_21
	_2018_07_27
	_2018_08_23
	_2018_09_06
	_2018_09_24
	_2018_10_31
	_2018_11_08
	_2019_02_11
	_2019_02_19
	_2019_03_14
	_2019_05_16
	_2019_08_14
	_2019_09_09
	_2019_10_08
	_2019_10_17
	_2019_11_05
	_2019_12_03
	_2020_03_02
	_2020_08_27
	_2022_08_01
	_2022_11_15
}

enum PostV1WebhookEndpointsInput_enabled_events {
	_
	ACCOUNT_APPLICATION_AUTHORIZED
	ACCOUNT_APPLICATION_DEAUTHORIZED
	ACCOUNT_EXTERNAL_ACCOUNT_CREATED
	ACCOUNT_EXTERNAL_ACCOUNT_DELETED
	ACCOUNT_EXTERNAL_ACCOUNT_UPDATED
	ACCOUNT_UPDATED
	APPLICATION_FEE_CREATED
	APPLICATION_FEE_REFUND_UPDATED
	APPLICATION_FEE_REFUNDED
	BALANCE_AVAILABLE
	BILLING_PORTAL_CONFIGURATION_CREATED
	BILLING_PORTAL_CONFIGURATION_UPDATED
	BILLING_PORTAL_SESSION_CREATED
	CAPABILITY_UPDATED
	CASH_BALANCE_FUNDS_AVAILABLE
	CHARGE_CAPTURED
	CHARGE_DISPUTE_CLOSED
	CHARGE_DISPUTE_CREATED
	CHARGE_DISPUTE_FUNDS_REINSTATED
	CHARGE_DISPUTE_FUNDS_WITHDRAWN
	CHARGE_DISPUTE_UPDATED
	CHARGE_EXPIRED
	CHARGE_FAILED
	CHARGE_PENDING
	CHARGE_REFUND_UPDATED
	CHARGE_REFUNDED
	CHARGE_SUCCEEDED
	CHARGE_UPDATED
	CHECKOUT_SESSION_ASYNC_PAYMENT_FAILED
	CHECKOUT_SESSION_ASYNC_PAYMENT_SUCCEEDED
	CHECKOUT_SESSION_COMPLETED
	CHECKOUT_SESSION_EXPIRED
	COUPON_CREATED
	COUPON_DELETED
	COUPON_UPDATED
	CREDIT_NOTE_CREATED
	CREDIT_NOTE_UPDATED
	CREDIT_NOTE_VOIDED
	CUSTOMER_CREATED
	CUSTOMER_DELETED
	CUSTOMER_DISCOUNT_CREATED
	CUSTOMER_DISCOUNT_DELETED
	CUSTOMER_DISCOUNT_UPDATED
	CUSTOMER_SOURCE_CREATED
	CUSTOMER_SOURCE_DELETED
	CUSTOMER_SOURCE_EXPIRING
	CUSTOMER_SOURCE_UPDATED
	CUSTOMER_SUBSCRIPTION_CREATED
	CUSTOMER_SUBSCRIPTION_DELETED
	CUSTOMER_SUBSCRIPTION_PENDING_UPDATE_APPLIED
	CUSTOMER_SUBSCRIPTION_PENDING_UPDATE_EXPIRED
	CUSTOMER_SUBSCRIPTION_TRIAL_WILL_END
	CUSTOMER_SUBSCRIPTION_UPDATED
	CUSTOMER_TAX_ID_CREATED
	CUSTOMER_TAX_ID_DELETED
	CUSTOMER_TAX_ID_UPDATED
	CUSTOMER_UPDATED
	CUSTOMER_CASH_BALANCE_TRANSACTION_CREATED
	FILE_CREATED
	FINANCIAL_CONNECTIONS_ACCOUNT_CREATED
	FINANCIAL_CONNECTIONS_ACCOUNT_DEACTIVATED
	FINANCIAL_CONNECTIONS_ACCOUNT_DISCONNECTED
	FINANCIAL_CONNECTIONS_ACCOUNT_REACTIVATED
	FINANCIAL_CONNECTIONS_ACCOUNT_REFRESHED_BALANCE
	IDENTITY_VERIFICATION_SESSION_CANCELED
	IDENTITY_VERIFICATION_SESSION_CREATED
	IDENTITY_VERIFICATION_SESSION_PROCESSING
	IDENTITY_VERIFICATION_SESSION_REDACTED
	IDENTITY_VERIFICATION_SESSION_REQUIRES_INPUT
	IDENTITY_VERIFICATION_SESSION_VERIFIED
	INVOICE_CREATED
	INVOICE_DELETED
	INVOICE_FINALIZATION_FAILED
	INVOICE_FINALIZED
	INVOICE_MARKED_UNCOLLECTIBLE
	INVOICE_PAID
	INVOICE_PAYMENT_ACTION_REQUIRED
	INVOICE_PAYMENT_FAILED
	INVOICE_PAYMENT_SUCCEEDED
	INVOICE_SENT
	INVOICE_UPCOMING
	INVOICE_UPDATED
	INVOICE_VOIDED
	INVOICEITEM_CREATED
	INVOICEITEM_DELETED
	INVOICEITEM_UPDATED
	ISSUING_AUTHORIZATION_CREATED
	ISSUING_AUTHORIZATION_REQUEST
	ISSUING_AUTHORIZATION_UPDATED
	ISSUING_CARD_CREATED
	ISSUING_CARD_UPDATED
	ISSUING_CARDHOLDER_CREATED
	ISSUING_CARDHOLDER_UPDATED
	ISSUING_DISPUTE_CLOSED
	ISSUING_DISPUTE_CREATED
	ISSUING_DISPUTE_FUNDS_REINSTATED
	ISSUING_DISPUTE_SUBMITTED
	ISSUING_DISPUTE_UPDATED
	ISSUING_TRANSACTION_CREATED
	ISSUING_TRANSACTION_UPDATED
	MANDATE_UPDATED
	ORDER_CREATED
	PAYMENT_INTENT_AMOUNT_CAPTURABLE_UPDATED
	PAYMENT_INTENT_CANCELED
	PAYMENT_INTENT_CREATED
	PAYMENT_INTENT_PARTIALLY_FUNDED
	PAYMENT_INTENT_PAYMENT_FAILED
	PAYMENT_INTENT_PROCESSING
	PAYMENT_INTENT_REQUIRES_ACTION
	PAYMENT_INTENT_SUCCEEDED
	PAYMENT_LINK_CREATED
	PAYMENT_LINK_UPDATED
	PAYMENT_METHOD_ATTACHED
	PAYMENT_METHOD_AUTOMATICALLY_UPDATED
	PAYMENT_METHOD_DETACHED
	PAYMENT_METHOD_UPDATED
	PAYOUT_CANCELED
	PAYOUT_CREATED
	PAYOUT_FAILED
	PAYOUT_PAID
	PAYOUT_UPDATED
	PERSON_CREATED
	PERSON_DELETED
	PERSON_UPDATED
	PLAN_CREATED
	PLAN_DELETED
	PLAN_UPDATED
	PRICE_CREATED
	PRICE_DELETED
	PRICE_UPDATED
	PRODUCT_CREATED
	PRODUCT_DELETED
	PRODUCT_UPDATED
	PROMOTION_CODE_CREATED
	PROMOTION_CODE_UPDATED
	QUOTE_ACCEPTED
	QUOTE_CANCELED
	QUOTE_CREATED
	QUOTE_FINALIZED
	RADAR_EARLY_FRAUD_WARNING_CREATED
	RADAR_EARLY_FRAUD_WARNING_UPDATED
	RECIPIENT_CREATED
	RECIPIENT_DELETED
	RECIPIENT_UPDATED
	REPORTING_REPORT_RUN_FAILED
	REPORTING_REPORT_RUN_SUCCEEDED
	REPORTING_REPORT_TYPE_UPDATED
	REVIEW_CLOSED
	REVIEW_OPENED
	SETUP_INTENT_CANCELED
	SETUP_INTENT_CREATED
	SETUP_INTENT_REQUIRES_ACTION
	SETUP_INTENT_SETUP_FAILED
	SETUP_INTENT_SUCCEEDED
	SIGMA_SCHEDULED_QUERY_RUN_CREATED
	SKU_CREATED
	SKU_DELETED
	SKU_UPDATED
	SOURCE_CANCELED
	SOURCE_CHARGEABLE
	SOURCE_FAILED
	SOURCE_MANDATE_NOTIFICATION
	SOURCE_REFUND_ATTRIBUTES_REQUIRED
	SOURCE_TRANSACTION_CREATED
	SOURCE_TRANSACTION_UPDATED
	SUBSCRIPTION_SCHEDULE_ABORTED
	SUBSCRIPTION_SCHEDULE_CANCELED
	SUBSCRIPTION_SCHEDULE_COMPLETED
	SUBSCRIPTION_SCHEDULE_CREATED
	SUBSCRIPTION_SCHEDULE_EXPIRING
	SUBSCRIPTION_SCHEDULE_RELEASED
	SUBSCRIPTION_SCHEDULE_UPDATED
	TAX_RATE_CREATED
	TAX_RATE_UPDATED
	TERMINAL_READER_ACTION_FAILED
	TERMINAL_READER_ACTION_SUCCEEDED
	TEST_HELPERS_TEST_CLOCK_ADVANCING
	TEST_HELPERS_TEST_CLOCK_CREATED
	TEST_HELPERS_TEST_CLOCK_DELETED
	TEST_HELPERS_TEST_CLOCK_INTERNAL_FAILURE
	TEST_HELPERS_TEST_CLOCK_READY
	TOPUP_CANCELED
	TOPUP_CREATED
	TOPUP_FAILED
	TOPUP_REVERSED
	TOPUP_SUCCEEDED
	TRANSFER_CREATED
	TRANSFER_REVERSED
	TRANSFER_UPDATED
	TREASURY_CREDIT_REVERSAL_CREATED
	TREASURY_CREDIT_REVERSAL_POSTED
	TREASURY_DEBIT_REVERSAL_COMPLETED
	TREASURY_DEBIT_REVERSAL_CREATED
	TREASURY_DEBIT_REVERSAL_INITIAL_CREDIT_GRANTED
	TREASURY_FINANCIAL_ACCOUNT_CLOSED
	TREASURY_FINANCIAL_ACCOUNT_CREATED
	TREASURY_FINANCIAL_ACCOUNT_FEATURES_STATUS_UPDATED
	TREASURY_INBOUND_TRANSFER_CANCELED
	TREASURY_INBOUND_TRANSFER_CREATED
	TREASURY_INBOUND_TRANSFER_FAILED
	TREASURY_INBOUND_TRANSFER_SUCCEEDED
	TREASURY_OUTBOUND_PAYMENT_CANCELED
	TREASURY_OUTBOUND_PAYMENT_CREATED
	TREASURY_OUTBOUND_PAYMENT_EXPECTED_ARRIVAL_DATE_UPDATED
	TREASURY_OUTBOUND_PAYMENT_FAILED
	TREASURY_OUTBOUND_PAYMENT_POSTED
	TREASURY_OUTBOUND_PAYMENT_RETURNED
	TREASURY_OUTBOUND_TRANSFER_CANCELED
	TREASURY_OUTBOUND_TRANSFER_CREATED
	TREASURY_OUTBOUND_TRANSFER_EXPECTED_ARRIVAL_DATE_UPDATED
	TREASURY_OUTBOUND_TRANSFER_FAILED
	TREASURY_OUTBOUND_TRANSFER_POSTED
	TREASURY_OUTBOUND_TRANSFER_RETURNED
	TREASURY_RECEIVED_CREDIT_CREATED
	TREASURY_RECEIVED_CREDIT_FAILED
	TREASURY_RECEIVED_CREDIT_SUCCEEDED
	TREASURY_RECEIVED_DEBIT_CREATED
}

input PostV1WebhookEndpointsWebhookEndpointInput {
	description: String
	disabled: Boolean
	enabled_events: [PostV1WebhookEndpointsWebhookEndpointInput_enabled_events]
	expand: [String]
	metadata: JSON
	url: String
}

enum PostV1WebhookEndpointsWebhookEndpointInput_enabled_events {
	_
	ACCOUNT_APPLICATION_AUTHORIZED
	ACCOUNT_APPLICATION_DEAUTHORIZED
	ACCOUNT_EXTERNAL_ACCOUNT_CREATED
	ACCOUNT_EXTERNAL_ACCOUNT_DELETED
	ACCOUNT_EXTERNAL_ACCOUNT_UPDATED
	ACCOUNT_UPDATED
	APPLICATION_FEE_CREATED
	APPLICATION_FEE_REFUND_UPDATED
	APPLICATION_FEE_REFUNDED
	BALANCE_AVAILABLE
	BILLING_PORTAL_CONFIGURATION_CREATED
	BILLING_PORTAL_CONFIGURATION_UPDATED
	BILLING_PORTAL_SESSION_CREATED
	CAPABILITY_UPDATED
	CASH_BALANCE_FUNDS_AVAILABLE
	CHARGE_CAPTURED
	CHARGE_DISPUTE_CLOSED
	CHARGE_DISPUTE_CREATED
	CHARGE_DISPUTE_FUNDS_REINSTATED
	CHARGE_DISPUTE_FUNDS_WITHDRAWN
	CHARGE_DISPUTE_UPDATED
	CHARGE_EXPIRED
	CHARGE_FAILED
	CHARGE_PENDING
	CHARGE_REFUND_UPDATED
	CHARGE_REFUNDED
	CHARGE_SUCCEEDED
	CHARGE_UPDATED
	CHECKOUT_SESSION_ASYNC_PAYMENT_FAILED
	CHECKOUT_SESSION_ASYNC_PAYMENT_SUCCEEDED
	CHECKOUT_SESSION_COMPLETED
	CHECKOUT_SESSION_EXPIRED
	COUPON_CREATED
	COUPON_DELETED
	COUPON_UPDATED
	CREDIT_NOTE_CREATED
	CREDIT_NOTE_UPDATED
	CREDIT_NOTE_VOIDED
	CUSTOMER_CREATED
	CUSTOMER_DELETED
	CUSTOMER_DISCOUNT_CREATED
	CUSTOMER_DISCOUNT_DELETED
	CUSTOMER_DISCOUNT_UPDATED
	CUSTOMER_SOURCE_CREATED
	CUSTOMER_SOURCE_DELETED
	CUSTOMER_SOURCE_EXPIRING
	CUSTOMER_SOURCE_UPDATED
	CUSTOMER_SUBSCRIPTION_CREATED
	CUSTOMER_SUBSCRIPTION_DELETED
	CUSTOMER_SUBSCRIPTION_PENDING_UPDATE_APPLIED
	CUSTOMER_SUBSCRIPTION_PENDING_UPDATE_EXPIRED
	CUSTOMER_SUBSCRIPTION_TRIAL_WILL_END
	CUSTOMER_SUBSCRIPTION_UPDATED
	CUSTOMER_TAX_ID_CREATED
	CUSTOMER_TAX_ID_DELETED
	CUSTOMER_TAX_ID_UPDATED
	CUSTOMER_UPDATED
	CUSTOMER_CASH_BALANCE_TRANSACTION_CREATED
	FILE_CREATED
	FINANCIAL_CONNECTIONS_ACCOUNT_CREATED
	FINANCIAL_CONNECTIONS_ACCOUNT_DEACTIVATED
	FINANCIAL_CONNECTIONS_ACCOUNT_DISCONNECTED
	FINANCIAL_CONNECTIONS_ACCOUNT_REACTIVATED
	FINANCIAL_CONNECTIONS_ACCOUNT_REFRESHED_BALANCE
	IDENTITY_VERIFICATION_SESSION_CANCELED
	IDENTITY_VERIFICATION_SESSION_CREATED
	IDENTITY_VERIFICATION_SESSION_PROCESSING
	IDENTITY_VERIFICATION_SESSION_REDACTED
	IDENTITY_VERIFICATION_SESSION_REQUIRES_INPUT
	IDENTITY_VERIFICATION_SESSION_VERIFIED
	INVOICE_CREATED
	INVOICE_DELETED
	INVOICE_FINALIZATION_FAILED
	INVOICE_FINALIZED
	INVOICE_MARKED_UNCOLLECTIBLE
	INVOICE_PAID
	INVOICE_PAYMENT_ACTION_REQUIRED
	INVOICE_PAYMENT_FAILED
	INVOICE_PAYMENT_SUCCEEDED
	INVOICE_SENT
	INVOICE_UPCOMING
	INVOICE_UPDATED
	INVOICE_VOIDED
	INVOICEITEM_CREATED
	INVOICEITEM_DELETED
	INVOICEITEM_UPDATED
	ISSUING_AUTHORIZATION_CREATED
	ISSUING_AUTHORIZATION_REQUEST
	ISSUING_AUTHORIZATION_UPDATED
	ISSUING_CARD_CREATED
	ISSUING_CARD_UPDATED
	ISSUING_CARDHOLDER_CREATED
	ISSUING_CARDHOLDER_UPDATED
	ISSUING_DISPUTE_CLOSED
	ISSUING_DISPUTE_CREATED
	ISSUING_DISPUTE_FUNDS_REINSTATED
	ISSUING_DISPUTE_SUBMITTED
	ISSUING_DISPUTE_UPDATED
	ISSUING_TRANSACTION_CREATED
	ISSUING_TRANSACTION_UPDATED
	MANDATE_UPDATED
	ORDER_CREATED
	PAYMENT_INTENT_AMOUNT_CAPTURABLE_UPDATED
	PAYMENT_INTENT_CANCELED
	PAYMENT_INTENT_CREATED
	PAYMENT_INTENT_PARTIALLY_FUNDED
	PAYMENT_INTENT_PAYMENT_FAILED
	PAYMENT_INTENT_PROCESSING
	PAYMENT_INTENT_REQUIRES_ACTION
	PAYMENT_INTENT_SUCCEEDED
	PAYMENT_LINK_CREATED
	PAYMENT_LINK_UPDATED
	PAYMENT_METHOD_ATTACHED
	PAYMENT_METHOD_AUTOMATICALLY_UPDATED
	PAYMENT_METHOD_DETACHED
	PAYMENT_METHOD_UPDATED
	PAYOUT_CANCELED
	PAYOUT_CREATED
	PAYOUT_FAILED
	PAYOUT_PAID
	PAYOUT_UPDATED
	PERSON_CREATED
	PERSON_DELETED
	PERSON_UPDATED
	PLAN_CREATED
	PLAN_DELETED
	PLAN_UPDATED
	PRICE_CREATED
	PRICE_DELETED
	PRICE_UPDATED
	PRODUCT_CREATED
	PRODUCT_DELETED
	PRODUCT_UPDATED
	PROMOTION_CODE_CREATED
	PROMOTION_CODE_UPDATED
	QUOTE_ACCEPTED
	QUOTE_CANCELED
	QUOTE_CREATED
	QUOTE_FINALIZED
	RADAR_EARLY_FRAUD_WARNING_CREATED
	RADAR_EARLY_FRAUD_WARNING_UPDATED
	RECIPIENT_CREATED
	RECIPIENT_DELETED
	RECIPIENT_UPDATED
	REPORTING_REPORT_RUN_FAILED
	REPORTING_REPORT_RUN_SUCCEEDED
	REPORTING_REPORT_TYPE_UPDATED
	REVIEW_CLOSED
	REVIEW_OPENED
	SETUP_INTENT_CANCELED
	SETUP_INTENT_CREATED
	SETUP_INTENT_REQUIRES_ACTION
	SETUP_INTENT_SETUP_FAILED
	SETUP_INTENT_SUCCEEDED
	SIGMA_SCHEDULED_QUERY_RUN_CREATED
	SKU_CREATED
	SKU_DELETED
	SKU_UPDATED
	SOURCE_CANCELED
	SOURCE_CHARGEABLE
	SOURCE_FAILED
	SOURCE_MANDATE_NOTIFICATION
	SOURCE_REFUND_ATTRIBUTES_REQUIRED
	SOURCE_TRANSACTION_CREATED
	SOURCE_TRANSACTION_UPDATED
	SUBSCRIPTION_SCHEDULE_ABORTED
	SUBSCRIPTION_SCHEDULE_CANCELED
	SUBSCRIPTION_SCHEDULE_COMPLETED
	SUBSCRIPTION_SCHEDULE_CREATED
	SUBSCRIPTION_SCHEDULE_EXPIRING
	SUBSCRIPTION_SCHEDULE_RELEASED
	SUBSCRIPTION_SCHEDULE_UPDATED
	TAX_RATE_CREATED
	TAX_RATE_UPDATED
	TERMINAL_READER_ACTION_FAILED
	TERMINAL_READER_ACTION_SUCCEEDED
	TEST_HELPERS_TEST_CLOCK_ADVANCING
	TEST_HELPERS_TEST_CLOCK_CREATED
	TEST_HELPERS_TEST_CLOCK_DELETED
	TEST_HELPERS_TEST_CLOCK_INTERNAL_FAILURE
	TEST_HELPERS_TEST_CLOCK_READY
	TOPUP_CANCELED
	TOPUP_CREATED
	TOPUP_FAILED
	TOPUP_REVERSED
	TOPUP_SUCCEEDED
	TRANSFER_CREATED
	TRANSFER_REVERSED
	TRANSFER_UPDATED
	TREASURY_CREDIT_REVERSAL_CREATED
	TREASURY_CREDIT_REVERSAL_POSTED
	TREASURY_DEBIT_REVERSAL_COMPLETED
	TREASURY_DEBIT_REVERSAL_CREATED
	TREASURY_DEBIT_REVERSAL_INITIAL_CREDIT_GRANTED
	TREASURY_FINANCIAL_ACCOUNT_CLOSED
	TREASURY_FINANCIAL_ACCOUNT_CREATED
	TREASURY_FINANCIAL_ACCOUNT_FEATURES_STATUS_UPDATED
	TREASURY_INBOUND_TRANSFER_CANCELED
	TREASURY_INBOUND_TRANSFER_CREATED
	TREASURY_INBOUND_TRANSFER_FAILED
	TREASURY_INBOUND_TRANSFER_SUCCEEDED
	TREASURY_OUTBOUND_PAYMENT_CANCELED
	TREASURY_OUTBOUND_PAYMENT_CREATED
	TREASURY_OUTBOUND_PAYMENT_EXPECTED_ARRIVAL_DATE_UPDATED
	TREASURY_OUTBOUND_PAYMENT_FAILED
	TREASURY_OUTBOUND_PAYMENT_POSTED
	TREASURY_OUTBOUND_PAYMENT_RETURNED
	TREASURY_OUTBOUND_TRANSFER_CANCELED
	TREASURY_OUTBOUND_TRANSFER_CREATED
	TREASURY_OUTBOUND_TRANSFER_EXPECTED_ARRIVAL_DATE_UPDATED
	TREASURY_OUTBOUND_TRANSFER_FAILED
	TREASURY_OUTBOUND_TRANSFER_POSTED
	TREASURY_OUTBOUND_TRANSFER_RETURNED
	TREASURY_RECEIVED_CREDIT_CREATED
	TREASURY_RECEIVED_CREDIT_FAILED
	TREASURY_RECEIVED_CREDIT_SUCCEEDED
	TREASURY_RECEIVED_DEBIT_CREATED
}

type deleted_webhook_endpoint {
	deleted: Boolean!
	id: String!
	object: deleted_webhook_endpoint_object!
}

enum deleted_webhook_endpoint_object {
	WEBHOOK_ENDPOINT
}
